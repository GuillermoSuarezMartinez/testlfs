<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Orbita.VA.HerramientasVisionPro</name>
    </assembly>
    <members>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles">
            <summary>
            Clase estática con funciones de uso general
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ToolBlock">
            <summary>
            ToolBlock utilizado para ejecutar tools individuales
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EscribirEnLog(System.String,System.String,System.String)">
            <summary>
            Loggear rápido , si el fichero ocupa más del espacio configurado , los almacena por fecha
            </summary>
            <param name="tipoLog"></param>
            <param name="procedencia"></param>
            <param name="descrError"></param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.InRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado
            </summary>
            <returns>Devuelve verdadero si el parámetro está dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.InRange(System.Double,System.Double,System.Double)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado
            </summary>
            <returns>Devuelve verdadero si el parámetro está dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EnsureRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado y en caso contrario lo modifica para que cumpla la condición
            </summary>
            <returns>Devuelve el número obligando a que esté dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EnsureRange(System.Double,System.Double,System.Double)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado y en caso contrario lo modifica para que cumpla la condición
            </summary>
            <returns>Devuelve el número obligando a que esté dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EvaluaNumero(System.Object,System.Int32,System.Int32,System.Int32)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado
            </summary>
            <returns>Devuelve verdadero si el parámetro está dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EvaluaDecimal(System.Object,System.Double,System.Double,System.Double)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado
            </summary>
            <returns>Devuelve verdadero si el parámetro está dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EvaluaNumero(System.Object,System.Double,System.Double,System.Double)">
            <summary>
            Evalúa si el parámetro está dentro del rango determinado
            </summary>
            <returns>Devuelve verdadero si el parámetro está dentro del rango determinado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EvaluaBooleano(System.Object,System.Boolean)">
            <summary>
            Evalúa si el parámetro es booleano
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EvaluaFecha(System.Object,System.DateTime)">
            <summary>
            Evalúa si el parámetro es booleano
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.IsTypeOf(System.Object,System.Type[])">
            <summary>
            Función que devuelve si el objeto pertenece a alguno de los tipos listados
            </summary>
            <param name="o">Objeto que se quiere conocer el tipo</param>
            <param name="types">Vector de tipos con lo que se ha de comparar el tipo del objeto</param>
            <returns>Verdadero si el tipo del objeto está dentro de la lista de tipos pasados como parámetros</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.IsNumeric(System.Object)">
            <summary>
            Indica si el objeto pasado es de tipo numérico
            </summary>
            <param name="o">Objeto que se quiere conocer si es de tipo numérico</param>
            <returns>Verdadero si el tipo del objeto es numérico</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.IsNumericInt(System.Object)">
            <summary>
            Indica si el objeto pasado es de tipo entero
            </summary>
            <param name="o">Objeto que se quiere conocer si es de tipo entero</param>
            <returns>Verdadero si el tipo del objeto es entero</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.IsNumericFloat(System.Object)">
            <summary>
            Indica si el objeto pasado es de tipo decimal
            </summary>
            <param name="o">Objeto que se quiere conocer si es de tipo decimal</param>
            <returns>Verdadero si el tipo del objeto es decimal</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EnumContains(System.Int32,System.Int32[])">
            <summary>
            Se utiliza con enumerados y devuelve verdadero si el enumerado está contenido en el valor
            </summary>
            <param name="value">Valor del cual se quiere saber si contiene cieto enumerado</param>
            <param name="enumerate">Enumerado que deseamos comparar con el valor</param>
            <returns>Devuelve verdadero si el enumerado está contenido en el valor</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EnumParse(System.Type,System.String,System.Object)">
            <summary>
            Se utiliza con enumerados para convertir un valor de texto en un enumerado del tipo indicado
            </summary>
            <param name="enumType">Tipo del enumerado al que deseamos convertir</param>
            <param name="value">Texto que queremos convertir a enumerado</param>
            <param name="defaultValue">Valor por defecto en el caso que el texto no coincida con ningun elemento del enumerado</param>
            <returns>Devuelve el enumerado correspondiente con el texto</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.GetBit(System.Byte,System.Int32)">
            <summary>
            Extrae un bit en la posición indicada
            </summary>
            <param name="numero">Valor al cual queremos extraer el bit</param>
            <param name="posicion">Posición del bit a extraer</param>
            <returns>Booleano con el valor del bit extraido</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.GetBit(System.UInt16,System.Int32)">
            <summary>
            Extrae un bit en la posición indicada
            </summary>
            <param name="numero">Valor al cual queremos extraer el bit</param>
            <param name="posicion">Posición del bit a extraer</param>
            <returns>Booleano con el valor del bit extraido</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.GetBit(System.UInt32,System.Int32)">
            <summary>
            Extrae un bit en la posición indicada
            </summary>
            <param name="numero">Valor al cual queremos extraer el bit</param>
            <param name="posicion">Posición del bit a extraer</param>
            <returns>Booleano con el valor del bit extraido</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.SetBit(System.Byte@,System.Int32,System.Boolean)">
            <summary>
            Establece un bit en la posición indicada
            </summary>
            <param name="numero">Valor al cual queremos establecer el bit</param>
            <param name="posicion">Posición del bit a establecer</param>
            <param name="valor">Booleano con el valor del bit a establecer</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.SetBit(System.UInt16@,System.Int32,System.Boolean)">
            <summary>
            Establece un bit en la posición indicada
            </summary>
            <param name="numero">Valor al cual queremos establecer el bit</param>
            <param name="posicion">Posición del bit a establecer</param>
            <param name="valor">Booleano con el valor del bit a establecer</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.SetBit(System.UInt32@,System.Int32,System.Boolean)">
            <summary>
            Establece un bit en la posición indicada
            </summary>
            <param name="numero">Valor al cual queremos establecer el bit</param>
            <param name="posicion">Posición del bit a establecer</param>
            <param name="valor">Booleano con el valor del bit a establecer</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ValidarTexto(System.Object,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Comprueba que el valor del objeto es correcto
            </summary>
            <param name="valor">Valor del objeto a comprobar</param>
            <returns>Verdadero si el valor es correcto</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.LanzarExcepcionTexto(Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoTexto,System.String)">
            <summary>
            Lanza una exepción por no estár permitido el valor especificado
            </summary>
            <param name="value">valor no permitido</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ValidarEntero(System.Object,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Comprueba que el valor del objeto es correcto
            </summary>
            <param name="valor">Valor del objeto a comprobar</param>
            <returns>Verdadero si el valor es correcto</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.LanzarExcepcionEntero(Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEntero,System.String,System.Int32,System.Int32)">
            <summary>
            Lanza una exepción por no estár permitido el valor especificado
            </summary>
            <param name="value">valor no permitido</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ValidarDecimal(System.Object,System.String,System.Double,System.Double,System.Boolean)">
            <summary>
            Comprueba que el valor del objeto es correcto
            </summary>
            <param name="valor">Valor del objeto a comprobar</param>
            <returns>Verdadero si el valor es correcto</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.LanzarExcepcionDecimal(Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoDecimal,System.String,System.Double,System.Double)">
            <summary>
            Lanza una exepción por no estár permitido el valor especificado
            </summary>
            <param name="value">valor no permitido</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ValidarEnum``1(System.Object,System.String,System.Boolean)">
            <summary>
            Comprueba que el valor del objeto es correcto
            </summary>
            <param name="value">Valor del objeto a comprobar</param>
            <returns>Verdadero si el valor es correcto</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.LanzarExcepcionEnum(Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEnum,System.String)">
            <summary>
            Lanza una exepción por no estár permitido el valor especificado
            </summary>
            <param name="value">valor no permitido</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ValidarFechaHora(System.Object,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Comprueba que el valor del objeto es correcto
            </summary>
            <param name="value">Valor del objeto a comprobar</param>
            <returns>Verdadero si el valor es correcto</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.LanzarExcepcionFechaHora(Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoFechaHora,System.String,System.DateTime,System.DateTime)">
            <summary>
            Lanza una exepción por no estár permitido el valor especificado
            </summary>
            <param name="value">valor no permitido</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ToString(System.Object)">
            <summary>
            Convierte un objeto a string
            </summary>
            <param name="valor"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.CompararObjetos(System.Object,System.Object)">
            <summary>
            Realiza una comparación entre dos objetos
            </summary>
            <param name="valor1">Primer objeto a comparar</param>
            <param name="valor2">Segundo objeto a comparar</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.Espera(System.Int32)">
            <summary>
            Método que realiza una espera (sin parar la ejecución del sistema) de cierto tiempo en milisegundos
            </summary>
            <param name="timeOut">Tiempo de espera en milisegundos</param>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.Espera(System.Boolean@,System.Boolean,System.Int32)">
            <summary>
            Método que realiza una espera hasta que cierto valor sea verdadero durante un máximo de tiempo
            </summary>
            <param name="valor">Valor al cual se espera que su estado sea verdadero o falso</param>
            <param name="valorEsperado">Valor de comparación</param>
            <param name="timeOut">Tiempo máximo de la espera en milisegundos</param>
            <returns>Verdadero si el valor a cambiado a verdadero antes de que finalizase el TimeOut</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.Espera(System.Object@,System.Object,System.Int32)">
            <summary>
            Método que realiza una espera hasta que cierto valor sea verdadero durante un máximo de tiempo
            </summary>
            <param name="valor">Valor al cual se espera que su estado sea verdadero o falso</param>
            <param name="valorEsperado">Valor de comparación</param>
            <param name="timeOut">Tiempo máximo de la espera en milisegundos</param>
            <returns>Verdadero si el valor a cambiado a verdadero antes de que finalizase el TimeOut</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.aRedimensionar(System.Array,System.Int32)">
            <summary>
            Función para redimiendionar un Array
            </summary>
            <param name="orgArray">Array</param>
            <param name="tamaño">Tamaño</param>
            <returns>Array redimensionado</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.DegreeToRadian(System.Double)">
            <summary>
            Convierte un ángulo de grados a radianes
            </summary>
            <param name="angle">Ángulo en grados</param>
            <returns>Ángulo en radianes</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.RadianToDegree(System.Double)">
            <summary>
            Convierte un ángulo de radianes a grados
            </summary>
            <param name="angle">Ángulo en radianes</param>
            <returns>Ángulo en grados</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.GregorianoAJuliano(System.Int32,System.Int32,System.Int32)">
            <summary>
            Conversión de día gregocriano a juliano
            </summary>
            <param name="dia">Día</param>
            <param name="mes">Mes</param>
            <param name="anno">Año</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.JulianoAGregoriano(System.Int64)">
            <summary>
            Conversión de dia juliano a gregoriano
            </summary>
            <param name="jdia">Día juliano</param>
            <returns>Fecha gregoriana</returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.Visualizacion(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CogGraphicCollection,System.Int32)">
            <summary>
            Para Visualizar en otra ventana
            </summary>
            <param name="graficos"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ObtenerAnguloDistanciaBlobAPunto(Cognex.VisionPro.CogImage8Grey,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Función para obtener el angulo y la distancia de un blob pasado en la imagen  a un punto
            </summary>
            <param name="imagen">imagen de un único blob</param>
            <param name="centerX">X del blob</param>
            <param name="centerY">Y del blob</param>
            <param name="angulo">angulo respecto al origen</param>
            <param name="distancia">distancia respecto al origen</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.AnyadeEtiqueta(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Drawing.FontStyle,System.Drawing.FontStyle,Cognex.VisionPro.CogGraphicLabelAlignmentConstants,Cognex.VisionPro.CogGraphicCollection@)">
            <summary>
            Para añadir label al conjunto de gráficos
            </summary>
            <param name="posx">X</param>
            <param name="posy">Y</param>
            <param name="textoSi">Texto si bueno</param>
            <param name="textoNo">Texto si malo</param>
            <param name="buena">bueno o malo</param>
            <param name="tamSi">Tamaño si bueno</param>
            <param name="tamNo">Tamaño si malo</param>
            <param name="estiloSi">Estilo si bueno</param>
            <param name="estiloNo">Estilo si malo</param>
            <param name="alineacion">alineacion</param>
            <param name="coleccionGrafica">coleccionGrafica a la que añade la etiqueta</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EjecutarPatrones(System.String@,Cognex.VisionPro.CogToolResultConstants@,System.Collections.Generic.List{Orbita.VA.HerramientasVisionPro.ResultadoPatMax}@,Cognex.VisionPro.CogToolCollection,Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogGraphicCollection@)">
            <summary>
            Ejecutamos todos los patrones pasados y devolvemos una lista con los resultados
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EjecutarPatrones(System.String@,Cognex.VisionPro.CogToolResultConstants@,System.Collections.Generic.List{Orbita.VA.HerramientasVisionPro.ResultadoPatMax}@,Cognex.VisionPro.CogToolCollection,Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogGraphicCollection@,System.Boolean)">
            <summary>
            Ejecutamos todos los patrones pasados y devolvemos una lista con los resultados , y si no esta entrenado el patrón lo entrena
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.ExecutePatMax(System.String@,Cognex.VisionPro.CogToolResultConstants@,Cognex.VisionPro.PMAlign.CogPMAlignTool,Cognex.VisionPro.ICogImage,System.String,System.Collections.Generic.List{Orbita.VA.HerramientasVisionPro.ResultadoPatMax}@,Cognex.VisionPro.CogGraphicCollection@)">
            <summary>
            Ejecución de la herramienta patmax
            </summary>
            <param name="message"></param>
            <param name="result"></param>
            <param name="patmax"></param>
            <param name="image"></param>
            <param name="patMaxResults"></param>
            <returns>true si encuentra algo</returns>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.DelegadoVisualizacion">
            <summary>
            Delegado para realizar la visualización en pantalla
            </summary>
            <param name="imagen"></param>
            <param name="graficos"></param>
            <param name="indice"></param>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoTexto">
            <summary>
            Resultado de la validación del texto
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoTexto.ResultadoCorrecto">
            <summary>
            Resultado correcto
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoTexto.ValorNoString">
            <summary>
            El valor a asignar no es string
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoTexto.LongitudSobrepasada">
            <summary>
            La longitud del texto es demasiado larga
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoTexto.CadenaVacia">
            <summary>
            El texto no contiene ningun caracter
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEntero">
            <summary>
            Resultado de la validación del Entero
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEntero.ResultadoCorrecto">
            <summary>
            Resultado correcto
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEntero.ValorNoEntero">
            <summary>
            El valor a asignar no es entero
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEntero.ValorSuperiorMaximo">
            <summary>
            El valor a asignar es sueprior al máximo permitido
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEntero.ValorInferiorMinimo">
            <summary>
            El valor a asignar es inferior al mínimo permitido
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoDecimal">
            <summary>
            Resultado de la validación del Decimal
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoDecimal.ResultadoCorrecto">
            <summary>
            Resultado correcto
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoDecimal.ValorNoDecimal">
            <summary>
            El valor a asignar no es entero
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoDecimal.ValorSuperiorMaximo">
            <summary>
            El valor a asignar es sueprior al máximo permitido
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoDecimal.ValorInferiorMinimo">
            <summary>
            El valor a asignar es inferior al mínimo permitido
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEnum">
            <summary>
            Resultado de la validación del enumerado
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEnum.ResultadoCorrecto">
            <summary>
            Resultado correcto
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEnum.ValorNoEnumerado">
            <summary>
            El valor a asignar no es enumerado
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoEnum.ValorNoPermitido">
            <summary>
            El valor a asignar no está permitido
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoFechaHora">
            <summary>
            Resultado de la validación del DateTimne
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoFechaHora.ResultadoCorrecto">
            <summary>
            Resultado correcto
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoFechaHora.ValorNoFecha">
            <summary>
            El valor a asignar no es entero
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoFechaHora.ValorSuperiorMaximo">
            <summary>
            El valor a asignar es sueprior al máximo permitido
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.EstadoFechaHora.ValorInferiorMinimo">
            <summary>
            El valor a asignar es inferior al mínimo permitido
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OVisionProUtiles.SimpleMethod">
            <summary>
            Delegado de método simple
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OPair`2">
            <summary>
            Clase utilizada para almacenar un par de valores
            </summary>
            <typeparam name="TFirst">Tipo del primer valor</typeparam>
            <typeparam name="TSecond">Tipo del segundo valor</typeparam>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OPair`2.First">
            <summary>
            Primer valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OPair`2.Second">
            <summary>
            Segundo valor
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OPair`2.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OPair`2.#ctor(`0,`1)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OTriplet`3">
            <summary>
            Clase utilizada para almacenar un trío de valores
            </summary>
            <typeparam name="TFirst">Tipo del primer valor</typeparam>
            <typeparam name="TSecond">Tipo del segundo valor</typeparam>
            <typeparam name="TThird">Tipo del tercer valor</typeparam>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OTriplet`3.First">
            <summary>
            Primer valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OTriplet`3.Second">
            <summary>
            Segundo valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OTriplet`3.Third">
            <summary>
            Tercer valor
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OTriplet`3.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OTriplet`3.#ctor(`0,`1,`2)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OQuartet`4">
            <summary>
            Clase utilizada para almacenar un trío de valores
            </summary>
            <typeparam name="TFirst">Tipo del primer valor</typeparam>
            <typeparam name="TSecond">Tipo del segundo valor</typeparam>
            <typeparam name="TThird">Tipo del tercer valor</typeparam>
            <typeparam name="TFourth">Tipo del cuarto valor</typeparam>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuartet`4.First">
            <summary>
            Primer valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuartet`4.Second">
            <summary>
            Segundo valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuartet`4.Third">
            <summary>
            Tercer valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuartet`4.Fourth">
            <summary>
            Cuarto valor
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OQuartet`4.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OQuartet`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.OQuintet`5">
            <summary>
            Clase utilizada para almacenar un trío de valores
            </summary>
            <typeparam name="TFirst">Tipo del primer valor</typeparam>
            <typeparam name="TSecond">Tipo del segundo valor</typeparam>
            <typeparam name="TThird">Tipo del tercer valor</typeparam>
            <typeparam name="TFourth">Tipo del cuarto valor</typeparam>
            <typeparam name="TFifth">Tipo del quinto valor</typeparam>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuintet`5.First">
            <summary>
            Primer valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuintet`5.Second">
            <summary>
            Segundo valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuintet`5.Third">
            <summary>
            Tercer valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuintet`5.Fourth">
            <summary>
            Cuarto valor
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.OQuintet`5.Fifth">
            <summary>
            Quinto valor
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OQuintet`5.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.OQuintet`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.Enumerados">
            <summary>
            Clase que agrupa a un conjunto de enumerados
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.Enumerados.ListaEnumerados">
            <summary>
            Lista de los enumerados que contiene
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.Enumerados.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.Enumerados.Parse``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nombre"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.Enumerados.Parse``1(System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="codigo"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.Enumerado">
            <summary>
            Clase utilizada para permitir la herencia de enumerados
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.Enumerado.Nombre">
            <summary>
            Nombre del enumerado
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.Enumerado.Descripcion">
            <summary>
            Descripcion
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.Enumerado.Valor">
            <summary>
            Valor del enumerado
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.Enumerado.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.HerramientasVisionPro.ResultadoPatMax">
            <summary>
            Clase para añadir un string aclaratorio a cada resultado
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.ResultadoPatMax.ResultPatmax">
            <summary>
            Resultado Patmax
            </summary>
        </member>
        <member name="F:Orbita.VA.HerramientasVisionPro.ResultadoPatMax.CadenaResultado">
            <summary>
            CadenaResultado
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.ResultadoPatMax.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.HerramientasVisionPro.ResultadoPatMax.#ctor(Cognex.VisionPro.PMAlign.CogPMAlignResult,System.String)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="resultado"></param>
            <param name="cadena"></param>
        </member>
    </members>
</doc>
