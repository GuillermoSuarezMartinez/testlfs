<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Orbita.VA.Funciones</name>
    </assembly>
    <members>
        <member name="T:Orbita.VA.Funciones.OMTInterfaceCCR">
            <summary>
            Clase estática que manejará la librería CIDAR de reconocimiento de matrículas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.MAX_QUEUE">
            <summary>
            Numero máximo de imagenes en cola para ser procesador
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.CidarMtCallbackResult">
            <summary>
            Recepción del resultado por parte de cidarmt.dll
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.CIDARIsRunning">
            <summary>
            Variable que nos indicará que esta en proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.ColaDeResultados">
            <summary>
            Cola que contiene los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.ProductorConsumidor">
            <summary>
            Clase que gestionara la añadición y ejecución de resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.ElementosEnviados">
            <summary>
            Elementos enviados al motor, para poder asociar con los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.LockObject">
            <summary>
            Objeto bloqueante
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.Configuracion">
            <summary>
            Parametros de configuracion del motor
            </summary> 
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceCCR.ContId">
            <summary>
            Contador de identificación
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Inicializar">
            <summary>
            Inicializa el wraper
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Finalizar">
            <summary>
            Finaliza el wrapper
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Init(System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Inicializamos el motor de busqueda
            </summary>
            <param name="AvCharHeight"></param>
            <param name="DuplicateLines"></param>
            <param name="Trace"></param>
            <param name="numThreads"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.QueryEnd">
            <summary>
            Finaliza el motor de búsqueda
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Reset">
            <summary>
            Resetea las colas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Reset(System.String)">
            <summary>
            Resetea las colas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.SetConfiguracion(Orbita.VA.Funciones.OParametrosCCR)">
            <summary>
            Establece la configuración
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.IsRunning">
            <summary>
            Devuelve si el motor esta activo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetQueueSize">
            <summary>
            Devuelve la cantidad de imagenes en la cola del wrapper
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetQueueSize(System.String)">
            <summary>
            Devuelve la cantidad de imagenes en la cola del wrapper para una determinada funcion
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetResultado">
            <summary>
            Devuelve un resultado de la cola
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Add(System.String,System.Drawing.Bitmap,System.Object,System.Boolean)">
            <summary>
            Añade una imagen para su reconocimiento
            </summary>
            <param name="bitmap">imagen</param>
            <param name="obj">información de la imagen</param>
            <param name="bFront">Si es prioritaria</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.Add(System.String,System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Añade una imagen para su reconocimiento por ruta
            </summary>
            <param name="rutaBitmap">imagen</param>
            <param name="obj">información de la imagen</param>
            <param name="bFront">Si es prioritaria</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.LimitCores(System.Int32)">
            <summary>
            Limita el número de núcleos a utilizar por cidarmt.dll
            </summary>
            <param name="numCores"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetFreeCores">
            <summary>
            Devuelve los núcleos disponibles
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetLicensedCores">
            <summary>
            Devuelve el número de núcleos de la licencia
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetQueueSizeCIDARMT">
            <summary>
            Devuelve la cantida de objetos en la cola de cidarmt.dll
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.GetUsedCores">
            <summary>
            Devuelve la cantidad de núcleos en uso
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.ReiniciarContID">
            <summary>
            Reinicia el contador de identificacion
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.EjecutarConsumidor(Orbita.VA.Funciones.OCCRData)">
            <summary>
            Método que ejecuta la acción del consumidor.
            </summary>
            <param name="valor"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceCCR.CallbackResultFunction(System.Int32,Orbita.VA.Funciones.CIDARMtResult@)">
            <summary>
            Función recepción resultados
            </summary>
            <param name="id"></param>
            <param name="res"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OMTInterfaceCCR.CidarCallback">
            <summary>
            Delegado de recepción de resultados de Cidar
            </summary>
            <param name="identificador">Identificador</param>
            <param name="resultado">resultado</param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.CIDARMtResult">
            <summary>
            Estructura del resultado  devuelto
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.CIDARMtConfiguration">
            <summary>
            Estructura de la configuración
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OCCRInfoImagen">
            <summary>
            Información de la imagen que se va a pasar al motor de CIDAR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.DisposedValue">
            <summary>
            Si el valor ha sido borrado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.Imagen">
            <summary>
            Imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.Obj">
            <summary>
            Objeto
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.Ruta">
            <summary>
            Ruta
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.AutoBorradoFicheroTemporal">
            <summary>
            Indica si se ha de borrar el fichero temporal
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.Timestamp">
            <summary>
            Fecha
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRInfoImagen.TimestampUTC">
            <summary>
            Fecha universal
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRInfoImagen.#ctor(System.Drawing.Bitmap,System.String,System.Boolean,System.Object@)">
            <summary>
            Constructor con parametros
            </summary>
            <param name="image"></param>
            <param name="path"></param>
            <param name="objInfo"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRInfoImagen.ClearImage">
            <summary>
            Borra la imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRInfoImagen.Dispose">
            <summary>
            Elimina la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRInfoImagen.SetPath(System.String)">
            <summary>
            Establece la ruta
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRInfoImagen.Dispose(System.Boolean)">
            <summary>
            Método hererado para eliminar la clase
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRInfoImagen.GetImage">
            <summary>
            Obtiene la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRInfoImagen.GetObject">
            <summary>
            Obtiene el objeto
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRInfoImagen.GetPath">
            <summary>
            Obtiene la ruta
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRInfoImagen.GetAutoBorradoFicheroTemporal">
            <summary>
            Indica si se ha de borrar el fichero temporal
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRInfoImagen.GetTimestamp">
            <summary>
            Obtiene la fecha
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRInfoImagen.GetUTCTimestamp">
            <summary>
            Obtiene la fecha universal
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OCCRData">
            <summary>
            Datos de la identificación a realizar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRData.Identificador">
            <summary>
            Identificador del dato
            </summary>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "F:Orbita.VA.Funciones.OCCRData.CodFuncionVision" -->
        <!-- El comentario XML con formato incorrecto se omite para el miembro "F:Orbita.VA.Funciones.OCCRData.DisposedValue" -->
        <member name="F:Orbita.VA.Funciones.OCCRData.Configuracion">
            <summary>
            Configuración a utilizar para el dato
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRData.InformacionImagen">
            <summary>
            Información de la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRData.ListaResultados">
            <summary>
            Lista con los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRData.TotalReadItems">
            <summary>
            Cantidad de lecturas
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRData.#ctor(System.Int64,System.String,Orbita.VA.Funciones.CIDARMtConfiguration,Orbita.VA.Funciones.OCCRInfoImagen@)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="ident"></param>
            <param name="cfg"></param>
            <param name="pi"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRData.AddResultado(Orbita.VA.Funciones.OCCRCodeInfo@)">
            <summary>
            Le añade un resultado
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRData.Dispose">
            <summary>
            Eliminado
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRData.Dispose(System.Boolean)">
            <summary>
            Método hererado para eliminar la clase
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.GetId">
            <summary>
            Obtiene el identificador del dato
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.GetCodFuncion">
            <summary>
            Obtiene el codigo de la función de visión
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.Configuration">
            <summary>
            Propiedad de configuración
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.GetFirstItem">
            <summary>
            Obtiene el primer resultado
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.ImageInformation">
            <summary>
            Propiedad de la información de la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.ItemCount">
            <summary>
            Cantidad de resultados
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRData.ReadItems">
            <summary>
            Cantidad de items leidos
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OCCRCodeInfo">
            <summary>
            Resultado de la identificación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.averageCharHeigth">
            <summary>
            Media de altura del caracter
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.charConfidence">
            <summary>
            Calidad de los caracteres
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.code">
            <summary>
            Código identificado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.codeVerification">
            <summary>
            Indica si esta verificado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.confidence">
            <summary>
            Calidad del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.disposed">
            <summary>
            Si ha sido eliminado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCode">
            <summary>
            Código ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeBottom">
            <summary>
            Posición inferior código ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeConfidence">
            <summary>
            Calidad del ISOCode
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeFound">
            <summary>
            Si ha encontrado el código ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeLeft">
            <summary>
            Posición inquierda del código ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeNumCharacters">
            <summary>
            Número de caracteres del ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeRight">
            <summary>
            Posición derecha del ISO localizado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraCodeTop">
            <summary>
            Posición superior del ISO localizado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.extraInfoCharConfidence">
            <summary>
            Calidad de los caracteres del ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.id">
            <summary>
            Identificador asociado 
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.isInverted">
            <summary>
            Si esta invertido el código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.isVertical">
            <summary>
            Si es vertical el código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.rPosition">
            <summary>
            Posición derecha del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.lPosition">
            <summary>
            Posición izquierda del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.bPosition">
            <summary>
            Posición inferior del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.tPosition">
            <summary>
            Posición superior del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.numCharacters">
            <summary>
            Número de caracteres del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.numLines">
            <summary>
            Número de líneas que componen el código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.processingTime">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.sourcePath">
            <summary>
            Ruta asocada
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.userParam1">
            <summary>
            Parámetro de usuario 1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRCodeInfo.userParam2">
            <summary>
            Parámetro de usuario 2
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.#ctor(System.String,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.String,System.Int32,System.Int32,System.Single[],System.Int32,System.String,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="ccode"></param>
            <param name="verified"></param>
            <param name="ptime"></param>
            <param name="avgChar"></param>
            <param name="lpos"></param>
            <param name="tpos"></param>
            <param name="rpos"></param>
            <param name="bpos"></param>
            <param name="fia"></param>
            <param name="path"></param>
            <param name="ident"></param>
            <param name="nchars"></param>
            <param name="cConf"></param>
            <param name="eInfoFound"></param>
            <param name="eInfo"></param>
            <param name="eInfoNumChars"></param>
            <param name="eInfoConf"></param>
            <param name="eInfoLeft"></param>
            <param name="eInfoTop"></param>
            <param name="eInfoRight"></param>
            <param name="eInfoBottom"></param>
            <param name="eInfocConf"></param>
            <param name="nLines"></param>
            <param name="inverted"></param>
            <param name="vertical"></param>
            <param name="luserParam1"></param>
            <param name="luserParam2"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.Dispose">
            <summary>
            Eliminado 
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.GetCodePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Devuelve la posición del códgio identificado
            </summary>
            <param name="plLeft"></param>
            <param name="plTop"></param>
            <param name="plRight"></param>
            <param name="plBottom"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.GetExtraInfoCodePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Devuelve la posición del ISO identificado
            </summary>
            <param name="plLeft"></param>
            <param name="plTop"></param>
            <param name="plRight"></param>
            <param name="plBottom"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.SetSourcePath(System.String)">
            <summary>
            Actualiza la ruta
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.Dispose(System.Boolean)">
            <summary>
            Eliminado
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRCodeInfo.ToString">
            <summary>
            Transforma el resultado en un string de Código(ISO)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetAverageCharacterHeigth">
            <summary>
            Devuelve la altura media
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetBottomCodePosition">
            <summary>
            Devuelve la posición inferior del código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetCharConfidence">
            <summary>
            Array con las calidades individuales de cada carácter
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetCodeNumber">
            <summary>
            Obtiene el código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetExtraInfoCharConfidence">
            <summary>
            Contiene la calidad de cara carácter del ISO
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetExtraInfoCodeNumber">
            <summary>
            Obtiene el ISO
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetExtraInfoConfidence">
            <summary>
            Obtiene la calidad del ISO
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetExtraInfoNumCharacters">
            <summary>
            Obtiene la cantidad de caracteres del ISO
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetGlobalConfidence">
            <summary>
            Obtiene la calidad del Código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetId">
            <summary>
            Obtiene el identificador
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetLeftCodePosition">
            <summary>
            Devuelve la posición izquierda del código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetNumCharacters">
            <summary>
            Devuelve el número de caracteres del código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetnumLines">
            <summary>
            Devuelve la cantidad de líneas del código localizado
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetProcessingTime">
            <summary>
            Obtiene el tiempo de proceso
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetRightCodePosition">
            <summary>
            Devuelve la posición derecha del código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetSourcePath">
            <summary>
            Devuelve la ruta origen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetTopCodePosition">
            <summary>
            Devuelve la posición superior del código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetUserParam1">
            <summary>
            Obtiene el valor del param1
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.GetUserParam2">
            <summary>
            Obtiene el valor del param2
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.isCodeInverted">
            <summary>
            Obtiene si el código se encontraba invertido
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.IsCodeVerified">
            <summary>
            Devuelve si el código ha sido verificado
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.isCodeVertical">
            <summary>
            Devuelve si el código identificado era vertical
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OCCRCodeInfo.IsExtraInfoFound">
            <summary>
            Devuelve si ha identificado el código ISO
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.AnalisisException">
            <summary>
            Excepción propia de las funciones de visión
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionVisionPro">
            <summary>
            Función de visión de VisionPro
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionVisionBase">
            <summary>
            Clase base para todas las funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase.ListaParametrosEntrada">
            <summary>
            Lista de entradas de la funcion
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase.ListaParametrosSalida">
            <summary>
            Lista de salidas de la función
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase.EjecucionTerminada">
            <summary>
            Informa del estado de la ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase.Claves">
            <summary>
            Claves de la función de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._IdEjecucionActual">
            <summary>
            Id de la ejecucion Actual
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._RutaFichero">
            <summary>
            Ruta del fichero a cargar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._Codigo">
            <summary>
            Código identificativo de la función
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._Nombre">
            <summary>
            Nombre identificativo de la función
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._Descripcion">
            <summary>
            Descripción de la función
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._Valido">
            <summary>
            Indica que la función ha sido cargada correctamente
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._TipoFuncionVision">
            <summary>
            Tipo de función de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._TipoEjecucionFuncionVision">
            <summary>
            Indica si la ejecución se realiza por defecto en el mismo hilo de ejecución que la
            applicación principal o en un hijo de ejecución distinto
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionBase._CodVariableEnEjecucion">
            <summary>
            Código identificativo de la variable que se activa
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.IniciarEjecucion">
            <summary>
            Llamada a la ejecución de la función
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.IniciarEjecucionSincrona">
            <summary>
            Llamada a la ejecución de la función de forma síncrona
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.IniciarEjecucionAsincrona">
            <summary>
            Llamada a la ejecución de la función de forma asíncrona
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.GetSalidas(System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="listaSalidas">Lista de objetos que respresentan el conjunto de salidas de la función de visión</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.SetEntradasVariables">
            <summary>
            Método donde se cargan las entradas a la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.SetEntradasFijas">
            <summary>
            Método donde se cargan las entradas a la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.GetSalidasVariables">
            <summary>
            Método donde se leen las salidas de la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.Inicializar">
            <summary>
            Método a heredar donde se carga el fichero de la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.Finalizar">
            <summary>
            Método a heredar donde se descarga el fichero de la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.EjecucionSincrona">
            <summary>
            Metodo virtual donde se ejecuta la función de visión de forma síncrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.EjecucionAsincrona">
            <summary>
            Metodo virtual donde se ejecuta la función de visión de forma asíncrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.SetEntrada(System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.SetEntrada(Orbita.VA.Funciones.EnumTipoEntradaFuncionVision,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="tipoEntrada">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.GetSalida(System.String,System.Object@,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.GetSalida(Orbita.VA.Funciones.EnumTipoSalidaFuncionVision,System.Object@,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionBase.FuncionEjecutada">
            <summary>
            Evento que se ejecuta cuando finaliza la ejecución de la función
            </summary>
            <param name="sender">Objeto que envía el evento</param>
            <param name="e">Argumentos del evento</param>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.IdEjecucionActual">
            <summary>
            d de la ejecucion Actual
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.RutaFichero">
            <summary>
            Ruta del fichero a cargar
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.Codigo">
            <summary>
            Código identificativo de la función
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.Nombre">
            <summary>
            Nombre identificativo de la función
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.Descripcion">
            <summary>
            Descripción de la función
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.Valido">
            <summary>
            Indica que la función ha sido cargada correctamente
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.TipoFuncionVision">
            <summary>
            Tipo de función de visión
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.TipoEjecucionFuncionVision">
            <summary>
            Indica si la ejecución se realiza por defecto en el mismo hilo de ejecución que la
            applicación principal o en un hijo de ejecución distinto
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionBase.CodVariableEnEjecucion">
            <summary>
            Código identificativo de la función
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionPro.OptimizarVelocidad">
            <summary>
            Se optimizará la velocidad de la primera ejecución, realizando una ejecución al cargarse el archivo vpp
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionPro.ToolBlock">
            <summary>
            Variable CogToolBlock que carga la aplicación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionPro.ThreadEjecucion">
            <summary>
            Trabajo en segundo plano
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.EjecucionEnThread(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Ejecución de la función a través de otro hilo de ejecución distinto al de la aplicación principal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.FinEjecucionThread(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Final de la ejecución de la función
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.Inicializar">
            <summary>
            Carga el fichero de QuickBuild Application
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.Finalizar">
            <summary>
            Método a heredar donde se descarga el fichero de la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.EjecucionSincrona">
            <summary>
            Ejecución de la función de Vision Pro de forma síncrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.EjecucionAsincrona">
            <summary>
            Ejecución de la función de Vision Pro de forma asíncrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.SetEntrada(System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionPro.GetSalida(System.String,System.Object@,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Orbita.VA.Funciones.ONerualLabsUtils">
            <summary>
            Clase estática con utilidades para el procesado de neural labs
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ONerualLabsUtils.CorreccionPerspectivaDisco(System.String,Orbita.VA.Funciones.OCorreccionPerspectiva)">
            <summary>
            Corrección de la perspectiva
            </summary>
            <param name="parametros"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.ONerualLabsUtils.CorreccionPerspectivaMemoria(Orbita.VA.Comun.OImagenBitmap,Orbita.VA.Funciones.OCorreccionPerspectiva)">
            <summary>
            Corrección de la perspectiva
            </summary>
            <param name="parametros"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.ONerualLabsUtils.EliminarFicheroTemporal(System.String)">
            <summary>
            Eliminación del fichero temporal
            </summary>
            <param name="rutaFicheroTemporal"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OCorreccionPerspectiva">
            <summary>
            Clase con la parametrización de corrección de perspectiva
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.Activada">
            <summary>
            Activada la corrección de perspectiva de Orbita
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.PuntoOrigen1">
            <summary>
            Coordenadas del punto de origen número 1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.PuntoOrigen2">
            <summary>
            Coordenadas del punto de origen número 2
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.PuntoOrigen3">
            <summary>
            Coordenadas del punto de origen número 3
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.PuntoOrigen4">
            <summary>
            Coordenadas del punto de origen número 4
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.OffsetOrigen">
            <summary>
            Offset del marco rectangular
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCorreccionPerspectiva.AreaDestino">
            <summary>
            Región destino
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCorreccionPerspectiva.#ctor">
            <summary>
            Constructor de la clase sin parámetros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCorreccionPerspectiva.#ctor(System.Data.DataRow)">
            <summary>
            Constructor de la clase configurandose a partir de un datarow
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OLPRManager">
            <summary>
            Clase que ejecuta continuamente el
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager._AsignacionPaisesNL">
            <summary>
            Asignación de paises de NL con la ISO3166-2
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.CountryCode">
            <summary>
            Constante que indica el pais o paises a identificar la matricula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.AvCharHeight">
            <summary>
            Constante de altura del caracter
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.DuplicateLines">
            <summary>
            Parámetro de Vpar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.Reordenar">
            <summary>
            Parametro de Vpar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.FilterColor">
            <summary>
            Parametro de Vpar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.TraceVpar">
            <summary>
            Trazabilidad
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.ThreadEjecucionLPR">
            <summary>
            Thread de ejecución continua del módulo LPR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRManager.UsoDemandado">
            <summary>
            Indica si alguna función de visión ha demandado el uso del LPR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.Constructor">
            <summary>
            Construye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.Destructor">
            <summary>
            Destruye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.Inicializar">
            <summary>
            Carga las propiedades de la base de datos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.Finalizar">
            <summary>
            Finaliza la ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.Reset(System.String)">
            <summary>
            Resetea la función de visión LPR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.DemandaUso">
            <summary>
            Se demanda el uso del LPR, por lo que se necesita iniciar las librerías correspondientes
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRManager.FinDemandaUso">
            <summary>
            Se elimina la demanda el uso del LPR, por lo que se necesita finalizar las librerías correspondientes
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRManager.AsignacionPaisesNL">
            <summary>
            Asignación de paises de NL con la ISO3166-2
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.ThreadEjecucionLPR">
            <summary>
            Clase que ejecuta el reconocimiento de las matrículas en un thread
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.ThreadEjecucionLPR.Finalizar">
            <summary>
            Indica si se ha de finalizar la ejecución del thread
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.ThreadEjecucionLPR.QueueSize">
            <summary>
            Cola de elementos a procesar en MTInterface
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionLPR.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionLPR.#ctor(System.String,System.Threading.ThreadPriority)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionLPR.CallBack(Orbita.VA.Funciones.OInfoInspeccionLPR)">
            <summary>
            Ejecuta el callback en el mismo thread que la Applicación principal
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionLPR.Ejecucion(System.Boolean@)">
            <summary>
            Método heredado para implementar la ejecución del thread.
            Este método se está ejecutando en un bucle. Para salir del bucle hay que devolver finalize a true.
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.ThreadEjecucionLPR.DelegadoCallBack">
            <summary>
            Delegado de ejecución del callback
            </summary>
            <param name="callBack"></param>
            <param name="argumentoEvento"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionVisionLPR">
            <summary>
            Clase que realizara la función de reconocimiento de LPR
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionVisionEncolada">
            <summary>
            Clase base para todas las funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionEncolada.ResultadosParciales">
            <summary>
            Cola donde iremos almacenando los resultados parciales
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionEncolada.ContInspeccionesEnCola">
            <summary>
            Contador de imágenes
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionEncolada.IndiceFotografia">
            <summary>
            Indice de la última fotografía añadida a la cola de proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionEncolada._Abortar">
            <summary>
            Indica que la función ha de dejar de ejecutarse si se encuentra en ejecución continúa
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.Inicializar">
            <summary>
            Inicializa la configuración del LPR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.Finalizar">
            <summary>
            Método a heredar donde se descarga el fichero de la función de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.IniciarEjecucion">
            <summary>
            Llamada a la ejecución de la función
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.IniciarEjecucion(Orbita.VA.Funciones.EntradasFuncionesVision)">
            <summary>
            Llamada a la ejecución de la función
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.IniciarEjecucionEncolada">
            <summary>
            Llamada a la ejecución de la función de forma encolada
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.HayResultadosParciales">
            <summary>
            Llamada para saber si se dispone de resultados parciales
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.ExtraerResultadoParcial">
            <summary>
            Devuelve un resultado parcial
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.HayInspeccionesPendientes">
            <summary>
            Indica que hay inspecciones pendientes de ejecución
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.AñadirResultadoParcial(System.Object,Orbita.VA.Funciones.EventArgsResultadoParcial)">
            <summary>
            Metodo virtual asociado al delegado donde se recibe un resultado parcial
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.ResetearColaEjecucion">
            <summary>
            Resetea la cola de ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionEncolada.EjecucionEncolada">
            <summary>
            Metodo virtual donde se ejecuta la función de visión de forma encolada
            </summary>
            <returns></returns>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionEncolada.OnResultadoParcial">
            <summary>
            CallBack donde mandar el resultado parcial
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OFuncionVisionEncolada.Abortar">
            <summary>
            Indica que la función ha de dejar de ejecutarse si se encuentra en ejecución continúa
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.MaxInspeccionesEnCola">
            <summary>
            Número máximo de inspecciones en la cola de ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.ParametrosLPR">
            <summary>
            Siguiente parametros de entrada a procesar en el LPR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.Imagen">
            <summary>
            Siguiente imágen a procesar en el LPR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.RutaImagenTemporal">
            <summary>
            Siguiente ruta de imágen a procesar en el LPR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.Prioridad">
            <summary>
            Prioridad de encolamiento
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.InformacionAdicional">
            <summary>
            Lista de información adicional incorporada por el controlador externo
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionLPR.ContadorImagenesPorDisco">
            <summary>
            Para saber la cantidad de imagenes guardadas por disco en cada ejecucion
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.EstablecerConfiguracion(Orbita.VA.Funciones.OParametrosLPR)">
            <summary>
            Cargamos la configuracion de los parametros definidos como entrada, es más eficiente alternar con los de por defecto, para tener mejor tasa de acierto
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.IsFileLocked(System.IO.FileInfo)">
            <summary>
            Comprueba que el archivo no este en uso
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.Reset">
            <summary>
            Realiza un reset de la función de visión de LPR que esta en ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.EjecucionEncolada">
            <summary>
            Ejecución de la función de Vision Pro de forma síncrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.HayInspeccionesPendientes">
            <summary>
            Indica que hay inspecciones pendientes de ejecución
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.ResetearColaEjecucion">
            <summary>
            Resetea la cola de ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.SetEntrada(System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionLPR.SetEntrada(Orbita.VA.Funciones.EnumTipoEntradaFuncionVision,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoInspeccionLPR">
            <summary>
            Clase que contiene la información referente a la inspección
            </summary>
            <typeparam name="TInfo"></typeparam>
            <typeparam name="TParametros"></typeparam>
            <typeparam name="TResultados"></typeparam>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoInspeccion`4">
            <summary>
            Clase que contiene la información referente a la inspección
            </summary>
            <typeparam name="TInfo"></typeparam>
            <typeparam name="TParametros"></typeparam>
            <typeparam name="TResultados"></typeparam>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccion`4.Imagen">
            <summary>
            Imagen inspeccionada
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccion`4.Info">
            <summary>
            Información sobre la inspección
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccion`4.Parametros">
            <summary>
            Parametros de entarda de la inspección
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccion`4.Resultados">
            <summary>
            Resultados de la inspección
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccion`4.InformacionAdicional">
            <summary>
            Lista de información adicional incorporada por el controlador externo
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccion`4.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccion`4.#ctor(`0,`1,`2,`3,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccionLPR.ImagenPerspectivaCorregida">
            <summary>
            Imagen inspeccionada
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccionLPR.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccionLPR.#ctor(Orbita.VA.Comun.OImagenBitmap,Orbita.VA.Comun.OImagenBitmap,Orbita.VA.Funciones.OParametrosLPR,Orbita.VA.Funciones.OInfoImagenLPR,Orbita.VA.Funciones.OResultadoLPR,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor de la clase
            </summary>
            <param name="info"></param>
            <param name="parametros"></param>
            <param name="resultados"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OParametrosLPR">
            <summary>
            Clase que contiene los parametros de configuracion del LPR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.Altura">
            <summary>
            Altura del caracter
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.ActivadoRangoAlturas">
            <summary>
            Para tener en cuenta el rango de alturas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.AlturaMin">
            <summary>
            Altura Minima
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.AlturaMax">
            <summary>
            Altura Máxima
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.VectorAlturas">
            <summary>
            Vector que contendra las alturas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.TimeOut">
            <summary>
            timeout de ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.ActivadaAjusteCorreccion">
            <summary>
            activa el ajuste de la correcion
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.CoeficienteHorizontal">
            <summary>
            Coeficiente de Correccion de la perspectiva Horizontal
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.CoeficienteVertical">
            <summary>
            Coeficiente de Correccion de la perspectiva Vertical
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.CoeficienteRadial">
            <summary>
            Coeficiente para el ojo de pez
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.AnguloRotacion">
            <summary>
            Coeficiente de la corrección del ángulo de rotación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.Distancia">
            <summary>
            Distancia al código desde la camara en metros
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.CoordIzq">
            <summary>
            Coordenada izquierda ventana
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.CoordArriba">
            <summary>
            Coordenada superior ventana
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.AlturaVentanaBusqueda">
            <summary>
            Altura de la ventana de búsqueda
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.AnchuraVentanaBusqueda">
            <summary>
            Anchura de la ventana de búsqueda
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.ActivadaMasInformacion">
            <summary>
            Se le indica si se desea buscar más información extra en la imagén
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.Modificado">
            <summary>
            Para saber si han habido modificaciones
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.Escala">
            <summary>
            Escala
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.OrbitaCorreccionPerspectiva">
            <summary>
            Parámetros de corrección de perspectiva de Orbita
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.RealizarProcesoPorDisco">
            <summary>
            Para pasar a las librerias una ruta de imagen y no el bitmap
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.RutaEjecucionPorDisco">
            <summary>
            Ruta utilizada para pasar la imagen por disco
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosLPR.StrictMode">
            <summary>
            Modo estricto de búsqueda de matriculas multipais
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OParametrosLPR.#ctor">
            <summary>
            Constructor de la clase sin parámetros
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoImagenLPR">
            <summary>
            Esta clase contendra la información que queremos pasar con la imagen a la función LPR para recogerla cuando tengamos el resultado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenLPR._IdEjecucionActual">
            <summary>
            Contiene la información de la identificacion a la que pertenece
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenLPR._Codigo">
            <summary>
            Contiene la información de la cámara que se le pasa en la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenLPR._IndiceImagen">
            <summary>
            Contiene el indice de la imagen añadida
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenLPR._MomentoImagen">
            <summary>
            Contiene la fecha exacta en la que se adquirio la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenLPR._RutaImagenTemporal">
            <summary>
            Ruta de la imagen temporal
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenLPR.CallBackResultadoParcial">
            <summary>
            CallBack donde mandar el resultado parcial
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoImagenLPR.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoImagenLPR.#ctor(System.Int64,System.String,System.Int32,System.DateTime,System.String,Orbita.VA.Funciones.CallBackResultadoParcial)">
            <summary>
            Constructor con parametros
            </summary>
            <param name="codigo">camara que adquiere la imagen</param>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenLPR.IdEjecucionActual">
            <summary>
            Contiene la información de la identificacion a la que pertenece
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenLPR.Codigo">
            <summary>
            Contiene la información de la cámara que se le pasa en la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenLPR.IndiceImagen">
            <summary>
            Contiene el indice de la imagen añadida
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenLPR.MomentoImagen">
            <summary>
            Contiene la fecha exacta en la que se adquirio la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenLPR.RutaImagenTemporal">
            <summary>
            Ruta de la imagen temporal
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OResultadoLPR">
            <summary>
            Lista de resultados de todas las matriculas de una imagen
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OResultadoSimpleLPR">
            <summary>
            Clase que contiene los resultados que se reciben de la funcion LPR para una imagen pasada 
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._Matricula">
            <summary>
            Contiene la cadena la matrícula del vehículo
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._FiabilidadMatricula">
            <summary>
            Fiabilidad de la matrícula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._AlturaLetrasMatricula">
            <summary>
            Altura letras
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._FechaEncolamiento">
            <summary>
            Fecha en la que se encolo a la cola de LPR (dada por él)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._TiempoDeProceso">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._TopPosicionMatricula">
            <summary>
            Posicion Top matricula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._BottomPosicionMatricula">
            <summary>
            Posicion Bottom matricula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._RightPosicionMatricula">
            <summary>
            Posicion Right matricula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._LeftPosicionMatricula">
            <summary>
            Posicion Left matricula
            </summary>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "F:Orbita.VA.Funciones.OResultadoSimpleLPR._CodigoPais" -->
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._Verificado">
            <summary>
            Si el Codigo de pais es distinto de 0
            </summary>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "F:Orbita.VA.Funciones.OResultadoSimpleLPR._PaisSintaxis3Caracteres" -->
        <!-- El comentario XML con formato incorrecto se omite para el miembro "F:Orbita.VA.Funciones.OResultadoSimpleLPR._PaisSintaxis2Caracteres" -->
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._NumCaracteres">
            <summary>
            Número de carácters de la matrícula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoSimpleLPR._FiabilidadesLetras">
            <summary>
            Contiene las fiabilidades de cada letra individual
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoSimpleLPR.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoSimpleLPR.#ctor(Orbita.VA.Funciones.OLPRCodeInfo,System.DateTime)">
            <summary>
            Constructor con parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoSimpleLPR.ConversionCodigoPais3(System.Int32)">
            <summary>
            Conversión de código de pais de NL a estándar de 3 carácteres
            </summary>
            <param name="codigoPaisNL"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoSimpleLPR.ConversionCodigoPais2(System.Int32)">
            <summary>
            Conversión de código de pais de NL a estándar de 2 carácteres
            </summary>
            <param name="codigoPaisNL"></param>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.Matricula">
            <summary>
            Contiene la cadena la matrícula del vehículo
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.FiabilidadMatricula">
            <summary>
            Fiabilidad de la matrícula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.AlturaLetrasMatricula">
            <summary>
            Altura letras
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.FechaEncolamiento">
            <summary>
            Fecha en la que se encolo a la cola de LPR (dada por él)
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.TiempoDeProceso">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.TopPosicionMatricula">
            <summary>
            Posicion Top matricula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.BottomPosicionMatricula">
            <summary>
            Posicion Bottom matricula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.RightPosicionMatricula">
            <summary>
            Posicion Right matricula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.LeftPosicionMatricula">
            <summary>
            Posicion Left matricula
            </summary>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "P:Orbita.VA.Funciones.OResultadoSimpleLPR.CodigoPais" -->
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.Verificado">
            <summary>
            Si el Codigo de pais es distinto de 0
            </summary>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "P:Orbita.VA.Funciones.OResultadoSimpleLPR.PaisSintaxis3Caracteres" -->
        <!-- El comentario XML con formato incorrecto se omite para el miembro "P:Orbita.VA.Funciones.OResultadoSimpleLPR.PaisSintaxis2Caracteres" -->
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.NumCaracteres">
            <summary>
            Número de carácters de la matrícula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoSimpleLPR.FiabilidadesLetras">
            <summary>
            Número de carácters de la matrícula
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.EntradasFuncionesVisionLPR">
            <summary>
            Define el conjunto de tipos de entradas de las funciones de visión LPR
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.TipoEntradasFuncionesVision">
            <summary>
            Define el conjunto de tipos de entradas de las funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoEntradasFuncionesVision.Imagen">
            <summary>
            Imagen de entrada
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoEntradasFuncionesVision.Parametros">
            <summary>
            Parametros de configuración
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.EntradasFuncionesVisionLPR.RutaImagen">
            <summary>
            Ruta en disco de la imagen de entrada
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.EntradasFuncionesVisionLPR.Prioridad">
            <summary>
            Prioridad de encolamiento
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OMTInterfaceARH">
            <summary>
            Clase estática que manejará la librería CARMEN de reconocimiento de matrículas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.MAX_QUEUE">
            <summary>
            Numero máximo de imagenes en cola
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.Accr">
            <summary>
            Motor de reconocimiento de CARMEN
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.ACCRIsRunning">
            <summary>
            Variable que nos indicará que esta en proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.ActivoLog">
            <summary>
            Si esta activo el Log
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.ColaDeResultados">
            <summary>
            Cola que contiene los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.HilosEjecucion">
            <summary>
            Lista de threads de ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.ProductorConsumidor">
            <summary>
            Clase que gestionara la añadición y ejecución de resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceARH.LockObject">
            <summary>
            Objeto bloqueante
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.Init(System.Boolean,System.UInt32)">
            <summary>
            Inicializamos el motor de busqueda
            </summary>
            <param name="AvCharHeight"></param>
            <param name="DuplicateLines"></param>
            <param name="Trace"></param>
            <param name="traceWrapper"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.QueryEnd">
            <summary>
            Finaliza el motor de búsqueda
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.Reset">
            <summary>
            Resetea las colas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.SetConfiguracion(Orbita.VA.Funciones.OParametrosARH)">
            <summary>
            Resetea las colas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.IsRunning">
            <summary>
            Devuelve si el motor esta activo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.GetQueueSize">
            <summary>
            Devuelve la cantidad de imagenes en la cola
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.GetResultado">
            <summary>
            Devuelve la cantidad de imagenes en la cola
            </summary>
            <returns></returns>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "M:Orbita.VA.Funciones.OMTInterfaceARH.Add(System.Object,System.Object,System.Boolean)" -->
        <member name="M:Orbita.VA.Funciones.OMTInterfaceARH.EjecutarConsumidor(Orbita.VA.Funciones.OARHData)">
            <summary>
            Método que ejecuta la acción del consumidor.
            </summary>
            <param name="valor"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OARHCodeInfo">
            <summary>
            Clase de resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.averageCharHeigth">
            <summary>
            Altura en pixeles
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.code">
            <summary>
            Código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.confidence">
            <summary>
            Calidad
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.disposed">
            <summary>
            Disposed
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.extraCode">
            <summary>
            Código ISO
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.processingTime">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.verificado">
            <summary>
             Verificado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHCodeInfo.fecha">
            <summary>
            Fecha 
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHCodeInfo.#ctor(System.String,System.Int32,System.Single,System.Single,System.String,System.Int32,System.DateTime)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="ccode"></param>
            <param name="ptime"></param>
            <param name="averageCharHeigth"></param>
            <param name="fia"></param>
            <param name="eInfo"></param>
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.GetDate">
            <summary>
            Obtiene la fecha
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.GetAverageCharacterHeigth">
            <summary>
            Obtiene la altura Media en pixeles del caracter
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.GetCodeNumber">
            <summary>
            Obtiene el código 
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.GetConfidence">
            <summary>
            Obtiene la fiabilidad 
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.GetExtraInfoCodeNumber">
            <summary>
            Obtiene el código ISO
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.GetProcessingTime">
            <summary>
            Obtiene el tiempo de proceso
            </summary>     
        </member>
        <member name="P:Orbita.VA.Funciones.OARHCodeInfo.IsVerificated">
            <summary>
            Obtiene si ha sido verificado el código
            </summary>     
        </member>
        <member name="T:Orbita.VA.Funciones.OARHData">
            <summary>
            Dato pasado al motor para su proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHData.Imagen">
            <summary>
             Imagen a inspección
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHData.Info">
            <summary>
            Información asociada a la imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHData.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHData.#ctor(System.Object,System.Object)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="imagen">imagen</param>
            <param name="info">información de la imagen</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHData.Dispose">
            <summary>
            Interfaz dispose
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHData.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHData.Dispose(System.Boolean)">
            <summary>
            Derived classes need to override this appropriately
            </summary>
            <param name="disposing">Indicates whether this is a dispose call
            or a call invoked from the finalzier</param>
        </member>
        <member name="T:Orbita.VA.Funciones.OParametrosARH">
            <summary>
            Estructura de configuración del sistema
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosARH.bAplicarCorreccion">
            <summary>
            Utilizar ajuste
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OLogsVAFunciones">
            <summary>
            Define el conjunto de módulos del sistema
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.Vision">
            <summary>
            Módulo de las funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.VisionPro">
            <summary>
            Módulo de Vision Pro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.CCR">
            <summary>
            Módulo de CCR. Lectura de mátriculas de contenedores
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.ARH">
            <summary>
            Módulo de ARH de vehículos
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.LPR">
            <summary>
            Módulo de LPR de vehículos
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.OpenCV">
            <summary>
            Módulo de trabajo con las funciones de OpenCV
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLogsVAFunciones.Valido">
            <summary>
            Indica que la creación de los logs ha sido válida
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLogsVAFunciones.Constructor">
            <summary>
            Constructror de los logs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OLogsVAFunciones.ValidarLog(System.String,Orbita.Trazabilidad.ILogger)">
            <summary>
            Validación del log
            </summary>
            <param name="identificador"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OrbitaCaliper">
            <summary>
            Clase que implementa la detección y medición de edges en la region determinada de una imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.inputSource">
            <summary>
            Imagen de entrada
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.edges">
            <summary>
            Listado de resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.threshold">
            <summary>
            Umbral de detección
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.kernel">
            <summary>
            Kernel de convolución (filtrado)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.tipo1">
            <summary>
            Polaridad del primer edge (o del single edge)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.tipo2">
            <summary>
            Polaridad del segundo edge (para pares de edges)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.metodos">
            <summary>
            Listado de métodos de puntuación del OrbitaCaliper
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.MaxResultados">
            <summary>
            Máximo de resultados devueltos (calcula siempre todos, es el máximo que devuelve)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.inverseMatrix">
            <summary>
            Matriz de transformación inversa (para devolver a las coordenadas originales)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.proyeccion">
            <summary>
            Area de interés
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.contrastes">
            <summary>
            Proyección rectangular del AOI
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrbitaCaliper.contrastesFiltrados">
            <summary>
            Datos de contraste filtrados (datos a procesar)
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.#ctor(Orbita.VA.Funciones.PolaridadEdges,Orbita.VA.Funciones.FilterSize,System.Int32)">
            <summary>
            Constructor de OrbitaCaliper con SingleEdge. Por defecto añade el método de puntuación por contraste
            </summary>
            <param name="polaridad">Polaridad de los edges a buscar</param>
            <param name="threshold">Umbral de contraste para la detección de un edge</param>
            <param name="kernel">Tamaño del filtro</param>
            <param name="maxResultados">Máximo de resultados a devolver</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.#ctor(Orbita.VA.Funciones.PolaridadEdges,Orbita.VA.Funciones.PolaridadEdges,Orbita.VA.Funciones.FilterSize,System.Int32)">
            <summary>
            Constructor de OrbitaCaliper con PairEdge. Por defecto añade el método de puntuación por distancia entre edges
            </summary>
            <param name="polaridad1">Polaridad del primer edge de cada par</param>
            <param name="polaridad2">Polaridad del segundo edge de cada par</param>
            <param name="threshold">Umbral para considerar un edge</param>
            <param name="distance">Distancia esperada entre el par de edges</param>
            <param name="kernel">Tamaño del filtro</param>
            <param name="maxResultados">Máximo de resultados a devolver</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.BuscarEdges(Orbita.VA.Comun.OImagenOpenCVMonocromo{System.Byte},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <summary>
            Obtiene y devuelve un listado de edges en el área de interes de la imagen pasada como parámetro (en formato de 3 puntos)
            </summary>
            <param name="input">Imagen sobre la que buscar</param>
            <param name="origen">Punto de origen del AOI</param>
            <param name="extremoX">Extremo en anchura del AOI</param>
            <param name="extremoY">Extremo en altura del AOI</param>
            <returns>Listado de resultados</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.AgregarContraste(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Agrega un método de puntuación por contraste (método individual)
            </summary>
            <returns>True si se añadió correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.AgregarDistancia(System.Double,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Agrega un método de puntuación por distancia (método de pares)
            </summary>
            <param name="distance">Ancho esperado entre los edges</param>
            <returns>True si se añadió correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.PintarEdges(System.Drawing.Color,System.Int32,System.Boolean)">
            <summary>
            Pinta los edges encontrados por el caliper
            </summary>
            <param name="color">Color para pintar los edges</param>
            <param name="grosor">Grosor del marcado de edges</param>
            <param name="todos">Indica si se debe buscar sobre todos los edges, o solo sobre los resultados devueltos</param>
            <returns>Imagen del caliper con los edges marcados</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.EliminarMetodosPuntuacion">
            <summary>
            Limpia la lista de métodos de puntuación
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.algoritmoBusquedaEdges">
            <summary>
            Encuentra los máximos y mínimos de una función discretizada en un array
            </summary>
            <param name="contrastesFiltrados">Datos de la imagen filtrada</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.EvaluarCandidatoPares(Orbita.VA.Funciones.OEdge,System.Collections.Generic.List{Orbita.VA.Funciones.OEdge})">
            <summary>
            Decide si un edge candidato es válido y su puntuación, con cada uno de los edges del array candidatos. En caso afirmativo lo añade.
            </summary>
            <param name="candidato">Edge candidato</param>
            <param name="listaCandidatos">Lista de candidatos previos</param>
            <returns>Número de resultados añadidos</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.EvaluarCandidatoSingle(Orbita.VA.Funciones.OEdge)">
            <summary>
            Decide si un edge candidato es válido y su puntuación. En caso afirmativo lo añade
            </summary>
            <param name="candidato">Edge candidato</param>
            <returns>Cierto si el edge se ha añadido</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.Puntuar(Orbita.VA.Funciones.OEdgeResult)">
            <summary>
            Puntua un candidato a edge en función de los parámetros de puntuación activos del algoritmo
            </summary>
            <param name="resultado">Resultado a puntuar</param>
            <returns>Puntuación según todos los métodos activos</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.Centroide(System.Int32,System.Int32,System.Single[0:,0:,0:])">
            <summary>
            Obtiene el centroide (promedio) en x, en un intervalo dado
            </summary>
            <param name="ini">Inicio del intervalo</param>
            <param name="fin">Final del intervalo</param>
            <returns>Punto en X donde se encuentra el centroide</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.InterpolacionLineal(System.Single,System.Single[0:,0:,0:])">
            <summary>
            Devuelve el valor interpolado para xPos en el array
            </summary>
            <param name="xPos">Posición a interpolar</param>
            <param name="array">Función</param>
            <returns>Valor interpolado en Y</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OrbitaCaliper.AgregarMetodoPuntuacion(Orbita.VA.Funciones.OMetodoPuntuacion)">
            <summary>
            Intenta añadir un nuevo método de puntuación a la lista
            </summary>
            <param name="met">Método de puntuación a añadir</param>
            <returns>Cierto si se pudo añadir</returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OrbitaCaliper.EdgeResults">
            <summary>
            Obtiene el listado de resultados
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OrbitaCaliper.BuscaPares">
            <summary>
            Obtiene si el OrbitaCaliper está configurado para encontrar pares de edges
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OrbitaCaliper.NumeroDatos">
            <summary>
            Obtiene la cantidad de puntos del caliper
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OrbitaCaliper.DatosFiltrados">
            <summary>
            Obtiene los puntos del OrbitaCaliper
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OrbitaCaliper.DatosContraste">
            <summary>
            Obtiene los puntos de la proyección
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.FilterSize">
            <summary>
            Tipos de filtro para detección de edges disponibles. Los filtros son simétricos del tipo -1,0,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter3">
            <summary>
            Filtro de tamaño 3: -1,0,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter5">
            <summary>
            Filtro de tamaño 5: -1,-1,0,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter7">
            <summary>
            Filtro de tamaño 7: -1,-1,-1,0,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter9">
            <summary>
            Filtro de tamaño 9: -1,-1,-1,-1,0,+1,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter11">
            <summary>
            Filtro de tamaño 11: -1,-1,-1,-1,-1,0,+1,+1,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter13">
            <summary>
            Filtro de tamaño 13: -1,-1,-1,-1,-1,-1,0,+1,+1,+1,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter15">
            <summary>
            Filtro de tamaño 15: -1,-1,-1,-1,-1,-1,-1,0,+1,+1,+1,+1,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter17">
            <summary>
            Filtro de tamaño 17: -1,-1,-1,-1,-1,-1,-1,-1,0,+1,+1,+1,+1,+1,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter19">
            <summary>
            Filtro de tamaño 19: -1,-1,-1,-1,-1,-1,-1,-1,-1,0,+1,+1,+1,+1,+1,+1,+1,+1,+1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.FilterSize.filter21">
            <summary>
            Filtro de tamaño 21: -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,+1,+1,+1,+1,+1,+1,+1,+1,+1,+1
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OARHManager">
            <summary>
            Clase que ejecuta continuamente el
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHManager.TraceWrapper">
            <summary>
            Constante que indica si se ha de realizar una traza del OCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHManager.Cores">
            <summary>
            Constante que indica el número máximo de núcleos a utilizar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHManager.ThreadARHEjecucionOCR">
            <summary>
            Thread de ejecución continua del módulo OCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OARHManager.UsoDemandado">
            <summary>
            Indica si alguna función de visión ha demandado el uso del OCR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.Constructor">
            <summary>
            Construye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.Destructor">
            <summary>
            Destruye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.Inicializar">
            <summary>
            Carga las propiedades de la base de datos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.Finalizar">
            <summary>
            Finaliza la ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.Reset">
            <summary>
            Resetea la función de visión OCR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.DemandaUso">
            <summary>
            Se demanda el uso del OCR, por lo que se necesita iniciar las librerías correspondientes
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OARHManager.FinDemandaUso">
            <summary>
            Se elimina la demanda el uso del OCR, por lo que se necesita finalizar las librerías correspondientes
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.ThreadEjecucionARH">
            <summary>
            Clase que ejecuta el reconocimiento de los codigos en un thread
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.ThreadEjecucionARH.Finalizar">
            <summary>
            Indica si se ha de finalizar la ejecución del thread
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionARH.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionARH.#ctor(System.String,System.Threading.ThreadPriority)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionARH.CallBack(Orbita.VA.Funciones.CallBackResultadoParcial,Orbita.VA.Funciones.EventArgsResultadoParcial)">
            <summary>
            Ejecuta el callback en el mismo thread que la Applicación principal
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionARH.Ejecucion(System.Boolean@)">
            <summary>
            Método a heredar para implementar la ejecución del thread.
            Este método se está ejecutando en un bucle. Para salir del bucle hay que devolver finalize a true.
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.ThreadEjecucionARH.DelegadoCallBack">
            <summary>
            Delegado de ejecución del callback
            </summary>
            <param name="callBack"></param>
            <param name="argumentoEvento"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionVisionARH">
            <summary>
            Clase que realizara la función de reconocimiento de OCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionARH.MaxInspeccionesEnCola">
            <summary>
            Número máximo de inspecciones en la cola de ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionARH.ParametrosOCR">
            <summary>
            Parametros de entrada a procesar en el OCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionARH.Imagen">
            <summary>
            Siguiente imágen a procesar en el OCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionARH.RutaImagen">
            <summary>
            Siguiente ruta de imágen a procesar en el OCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionARH.MaxPrioridad">
            <summary>
            Maxima prioridad añadiendo a la cola
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionARH.InformacionAdicional">
            <summary>
            Lista de información adicional incorporada por el controlador externo
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.EstablecerConfiguracion(Orbita.VA.Funciones.OParametrosARH)">
            <summary>
            Cargamos la configuracion de los parametros pasados por parámetro en caso de necesidad
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.IsFileLocked(System.IO.FileInfo)">
            <summary>
            Comprueba que el archivo no este en uso
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.Reset">
            <summary>
            Realiza un reset de la función de visión de OCR que esta en ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.EjecucionEncolada">
            <summary>
            Ejecución de la función de OCR de forma encolada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.HayInspeccionesPendientes">
            <summary>
            Indica que hay inspecciones pendientes de ejecución
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionARH.SetEntrada(System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoInspeccionARH">
            <summary>
            Clase que contiene la información referente a la inspección
            </summary>
            <typeparam name="TInfo"></typeparam>
            <typeparam name="TParametros"></typeparam>
            <typeparam name="TResultados"></typeparam>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccionARH.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccionARH.#ctor(Orbita.VA.Comun.OImagenBitmap,Orbita.VA.Funciones.OParametrosARH,Orbita.VA.Funciones.OInfoImagenARH,Orbita.VA.Funciones.OResultadoARH,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor de la clase
            </summary>
            <param name="info"></param>
            <param name="parametros"></param>
            <param name="resultados"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoImagenARH">
            <summary>
            Esta clase contendra la información que queremos pasar con la imagen al CCR para recogerla cuando tengamos el resultado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenARH.IdEjecucionActual">
            <summary>
            Contiene la información de la identificacion a la que pertenece
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenARH.CodigoCamara">
            <summary>
            Contiene la información de la cámara que se le pasa en la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenARH.IndiceImagen">
            <summary>
            Contiene el indice de la imagen añadida
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenARH.MomentoImagen">
            <summary>
            Contiene la fecha exacta en la que se adquirio la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenARH.CallBackResultadoParcial">
            <summary>
            CallBack donde mandar el resultado parcial
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoImagenARH.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoImagenARH.#ctor(System.Int64,System.String,System.Int32,System.DateTime,Orbita.VA.Funciones.CallBackResultadoParcial)">
            <summary>
            Constructor con parametros
            </summary>
            <param name="camara">camara que adquiere la imagen</param>
        </member>
        <member name="T:Orbita.VA.Funciones.OResultadoARH">
            <summary>
            Clase que contiene los resultados que se reciben del OCR para una imagen pasada anteriormente
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.CodigoContenedor">
            <summary>
            Contiene la cadena del codigo del contenedor
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.ExtaInfoCodigo">
            <summary>
            Contiene la información extra del código del contenedor
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.CodigoVerificado">
            <summary>
            Si esta verificado el digito de control
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.FiabilidadCodigo">
            <summary>
            Fiabilidad Código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.FiabilidadExtraInfo">
            <summary>
            Fiabilidad ExtraInfo
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.AlturaLetrasCodigo">
            <summary>
            Altura letras
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.FechaEncolamiento">
            <summary>
            Fecha en la que se encolo a la cola de OCR (dada por él)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoARH.TiempoDeProceso">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoARH.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoARH.#ctor(Orbita.VA.Funciones.OARHCodeInfo,System.DateTime)">
            <summary>
            Constructor con parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetAliasEscenarioFuncionesVision(System.String)">
            <summary>
            Consulta el alias de una escenario de hardware
            </summary>
            <param name="codEscenario"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetParametrosFuncionesVision(System.String,System.Boolean)">
            <summary>
            Consulta las parámetros de un determinada función de visión
            </summary>
            <returns>DataTable con la información de una determinada función de visión</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetParametroFuncionVision(System.String,System.String)">
            <summary>
            Consulta toda la información de un determinado parámetro de una función de visión
            </summary>
            <returns>DataTable con la información de una determinada función de visión</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetFuncionesVision">
            <summary>
            Consulta todas las funciones de vision existentes en el sistema
            </summary>
            <returns>DataTable con los códigos de las funciones de vision existentes en el sistema</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetFuncionVision(System.String)">
            <summary>
            Consulta una función de visión
            </summary>
            <returns>DataTable con la información de la función de visión</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetClavesDeFuncionVision(System.String)">
            <summary>
            Consulta las claves de una determinada escenario
            </summary>
            <param name="codEscenario"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetConfiguracionCCR">
            <summary>
            Consulta la configuración del motor CCR
            </summary>
            <param name="codEscenario"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.AppBD.GetConfiguracionLPR">
            <summary>
            Consulta la configuración del motor LPR
            </summary>
            <param name="codEscenario"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OFiltradoOpenCV">
            <summary>
            Clase estática con herramientas de OpenCV
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.CorregirPerspectiva``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Corección de distorsión para imagenes de tipo OpenCV
            </summary>
            <typeparam name="TColor">Tipo de color de la imagen</typeparam>
            <typeparam name="TDepth">Tipo de profundidad de la imagen</typeparam>
            <param name="imagenOriginal">Imagen original</param>
            <param name="puntoOriginal1">Punto origen 1</param>
            <param name="puntoOriginal2">Punto origen 2</param>
            <param name="puntoOriginal3">Punto origen 3</param>
            <param name="puntoOriginal4">Punto origen 4</param>
            <param name="puntoDestino1">Punto destino 1</param>
            <param name="puntoDestino2">Punto destino 2</param>
            <param name="puntoDestino3">Punto destino 3</param>
            <param name="puntoDestino4">Punto destino 4</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.CorregirPerspectiva``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Corección de distorsión para imagenes de tipo OpenCV
            </summary>
            <typeparam name="TColor">Tipo de color de la imagen</typeparam>
            <typeparam name="TDepth">Tipo de profundidad de la imagen</typeparam>
            <param name="imagenOriginal">Imagen original</param>
            <param name="puntoOriginal1">Punto origen 1</param>
            <param name="puntoOriginal2">Punto origen 2</param>
            <param name="puntoOriginal3">Punto origen 3</param>
            <param name="puntoOriginal4">Punto origen 4</param>
            <param name="xDestino">Coordenada X destino</param>
            <param name="yDestino">Coordenada Y destino</param>
            <param name="anchoDestino">Ancho destino</param>
            <param name="altoDestino">Alto destino</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.CorregirPerspectiva``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.RectangleF)">
            <summary>
            Corección de distorsión para imagenes de tipo OpenCV
            </summary>
            <typeparam name="TColor">Tipo de color de la imagen</typeparam>
            <typeparam name="TDepth">Tipo de profundidad de la imagen</typeparam>
            <param name="imagenOriginal">Imagen original</param>
            <param name="puntoOriginal1">Punto origen 1</param>
            <param name="puntoOriginal2">Punto origen 2</param>
            <param name="puntoOriginal3">Punto origen 3</param>
            <param name="puntoOriginal4">Punto origen 4</param>
            <param name="areaDestino">Area destino</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.CorregirPerspectiva``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Point,System.Drawing.RectangleF)">
            <summary>
            Corección de distorsión para imagenes de tipo OpenCV
            </summary>
            <typeparam name="TColor">Tipo de color de la imagen</typeparam>
            <typeparam name="TDepth">Tipo de profundidad de la imagen</typeparam>
            <param name="imagenOriginal">Imagen original</param>
            <param name="puntoOriginal1">Punto origen 1</param>
            <param name="puntoOriginal2">Punto origen 2</param>
            <param name="puntoOriginal3">Punto origen 3</param>
            <param name="puntoOriginal4">Punto origen 4</param>
            <param name="areaDestino">Area destino</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.ObtenerPlano``1(Orbita.VA.Comun.OImagenOpenCVColor{``0},Orbita.VA.Comun.OPlanoBGR)">
            <summary>
            Obtiene el plano (del espacio BGR) pasado como parámetro
            </summary>
            <param name="input">Imagen de entrada</param>
            <param name="plano">Plano a extraer</param>
            <returns>Plano de la imagen indicado</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.Reducir``1(Orbita.VA.Comun.OImagenOpenCVMonocromo{``0})">
            <summary>
            Calcula la media de los contrastes de la imagen obteniendo una única fila
            </summary>
            <param name="input">Imagen de origen</param>
            <returns>Estructura imagen con una única fila que almacena los valores de contraste medios</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.Binarizar``1(Orbita.VA.Comun.OImagenOpenCVColor{``0},System.Int32)">
            <summary>
            Binariza una imagen utilizando un umbral
            </summary>
            <param name="input">Imagen de entrada</param>
            <param name="umbral">Umbral de binarización</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.Proyeccion``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Realiza una proyección de un area de la imagen en un rectangulo
            </summary>
            <typeparam name="TColor">Espacio de color</typeparam>
            <typeparam name="TDepth">Profundidad de color</typeparam>
            <param name="input">Imagen sobre la que se hace la proyección</param>
            <param name="puntoO">Punto de origen de la proyección</param>
            <param name="puntoX">Punto extremo en ancho de la proyección</param>
            <param name="puntoY">Punto extremo en alto de la proyección</param>
            <returns>Proyección rectangular del area especificada</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.Proyeccion``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},Emgu.CV.Matrix{System.Single},System.Boolean)">
            <summary>
            Realiza una proyección de un area de la imagen en un rectangulo
            </summary>
            <typeparam name="TColor">Espacio de color</typeparam>
            <typeparam name="TDepth">Profundidad de color</typeparam>
            <param name="input">Imagen sobre la que se hace la proyección</param>
            <param name="sourceMat">Matriz de transformación a utilizar en la transformación</param>
            <returns>Proyección rectangular del area especificada</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFiltradoOpenCV.Proyeccion``2(Orbita.VA.Comun.OImagenOpenCV{``0,``1},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Emgu.CV.Matrix{System.Single}@)">
            <summary>
            Realiza una proyección de un area de la imagen en un rectangulo, devolviendo la matriz de transformación utilizada
            </summary>
            <typeparam name="TColor">Espacio de color</typeparam>
            <typeparam name="TDepth">Profundidad de color</typeparam>
            <param name="input">Imagen sobre la que se hace la proyección</param>
            <param name="puntoO">Punto de origen de la proyección</param>
            <param name="puntoX">Punto extremo en ancho de la proyección</param>
            <param name="puntoY">Punto extremo en alto de la proyección</param>
            <param name="sourceMat">Matriz de transformación utilizada para realiar la proyección. Sirve para deshacer la proyección</param>
            <returns>Proyección rectangular del area especificada</returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionesVisionManager">
            <summary>
            Clase de acceso estático que contiene la lista de funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionesVisionManager.ListaFuncionesVision">
            <summary>
            Lista de funciones de visión funcionando en el sistema
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionesVisionManager.Escenarios">
            <summary>
            Lista de todas las escenarios de las funciones de visión del sistema
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.TryGetFuncionVision(System.String,System.String,Orbita.VA.Funciones.OFuncionVisionBase@)">
            <summary>
            Método para acceder a una función de visión
            </summary>
            <param name="codEscenario">Escenario</param>
            <param name="codAlias">Código o alias de la función de visión</param>
            <param name="hardware">Función de visión devuelta</param>
            <returns>Verdadero si se ha encontrado la función de visión</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.Constructor">
            <summary>
            Construye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.Destructor">
            <summary>
            Destruye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.Inicializar">
            <summary>
            Carga las propiedades de la base de datos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.Finalizar">
            <summary>
            Finaliza la ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.IniciarEjecucion(System.String)">
            <summary>
            Inicia la ejecución de determinada función de visión.
            Se debe ejecutar a esta función desde el hilo principal de la aplicación, de lo contrario ocurrirán excepciones.
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.IniciarEjecucion(System.String,System.String)">
            <summary>
            Inicia la ejecución de determinada función de visión.
            Se debe ejecutar a esta función desde el hilo principal de la aplicación, de lo contrario ocurrirán excepciones.
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.IniciarEjecucionSincrona(System.String)">
            <summary>
            Inicia la ejecución de determinada función de visión de forma síncrona
            Se debe ejecutar a esta función desde el hilo principal de la aplicación, de lo contrario ocurrirán excepciones.
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.IniciarEjecucionSincrona(System.String,System.String)">
            <summary>
            Inicia la ejecución de determinada función de visión de forma síncrona
            Se debe ejecutar a esta función desde el hilo principal de la aplicación, de lo contrario ocurrirán excepciones.
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.IniciarEjecucionAsincrona(System.String)">
            <summary>
            Inicia la ejecución de determinada función de visión de forma asíncrona
            Se debe ejecutar a esta función desde el hilo principal de la aplicación, de lo contrario ocurrirán excepciones.
            </summary>
            
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.IniciarEjecucionAsincrona(System.String,System.String)">
            <summary>
            Inicia la ejecución de determinada función de visión de forma asíncrona
            Se debe ejecutar a esta función desde el hilo principal de la aplicación, de lo contrario ocurrirán excepciones.
            </summary>
            
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.SetEntrada(System.String,System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="codFuncionVision">Código identificador de la función de vision</param>
            <param name="codPieza">Código identificador de la pieza</param>
            <param name="codParametro">Código identificador del parámetro</param>
            <param name="valor">Nuevo valor del parámetro</param>
            <param name="tipoVariable">Tipo del parámetro</param>
            <returns>Verdadero si la función se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.SetEntrada(System.String,System.String,System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="codFuncionVision">Código identificador de la función de vision</param>
            <param name="codPieza">Código identificador de la pieza</param>
            <param name="codParametro">Código identificador del parámetro</param>
            <param name="valor">Nuevo valor del parámetro</param>
            <param name="tipoVariable">Tipo del parámetro</param>
            <returns>Verdadero si la función se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetSalida(System.String,System.String,System.Object@,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="codFuncionVision">Código identificador de la función de vision</param>
            <param name="codPieza">Código identificador de la pieza</param>
            <param name="codParametro">Código identificador del parámetro</param>
            <param name="valor">Valor del parámetro devuelto por la función</param>
            <param name="tipoVariable">Tipo del parámetro</param>
            <returns>Verdadero si la función se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetSalida(System.String,System.String,System.String,System.Object@,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="codFuncionVision">Código identificador de la función de vision</param>
            <param name="codPieza">Código identificador de la pieza</param>
            <param name="codParametro">Código identificador del parámetro</param>
            <param name="valor">Valor del parámetro devuelto por la función</param>
            <param name="tipoVariable">Tipo del parámetro</param>
            <returns>Verdadero si la función se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetSalidas(System.String,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="listaSalidas">Lista de objetos que respresentan el conjunto de salidas de la función de visión</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetSalidas(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Función para la consulta de parámetros de salida
            </summary>
            <param name="listaSalidas">Lista de objetos que respresentan el conjunto de salidas de la función de visión</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetFuncionVision(Orbita.VA.Comun.OClaves)">
            <summary>
            Obtiene la función de visión mediante las claves
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetFuncionVision(System.String)">
            <summary>
            Obtiene la función de visión mediante las claves
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetFuncionVision(System.String,System.String)">
            <summary>
            Obtiene la función de visión mediante las claves
            </summary>
            <param name="escenario">Escenario utilizada</param>
            <param name="codigo">Código de la función de visión</param>
            <returns>Hardware encontrado</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionesVisionManager.GetCodigoFuncionVision(Orbita.VA.Comun.OClaves)">
            <summary>
            Obtiene el código de la función de visión mediante las claves
            </summary>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OEscenarioFuncionVision">
            <summary>
            Clase que implementa los escenarios de las funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEscenarioFuncionVision.Codigo">
            <summary>
            Código del escenario
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEscenarioFuncionVision.ListaAlias">
            <summary>
            Lista de todos los alias del escenario
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OEscenarioFuncionVision.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="codEscenario">Código del escenario</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OEscenarioFuncionVision.RellenarAlias(System.String)">
            <summary>
            Rellena la lista de alias del escenario
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OParametroFuncionVision">
            <summary>
            Clase que representa a un parámetro de entrada o de salida de una función de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._Codigo">
            <summary>
            Código identificativo del parámetro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._Nombre">
            <summary>
            Nombre identificativo del parámetro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._Descripcion">
            <summary>
            Descripción del parámetro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._EsEntrada">
            <summary>
            Indica si el parámetro de la función de visión es una entrada o una salida
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._OrigenValorParametro">
            <summary>
            Indica si se trata de un parámetro fijo o es una variable
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._Tipo">
            <summary>
            Tipo del parámetro de la función
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._CodVariable">
            <summary>
            Propiedad opcional que indica el código de la variable asociada al parámetro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametroFuncionVision._Valor">
            <summary>
            Propiedad opcional que indica el valor fijo del parámetro
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OParametroFuncionVision.#ctor(System.String,System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.Codigo">
            <summary>
            Código identificativo del parámetro
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.Nombre">
            <summary>
            Nombre identificativo del parámetro
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.Descripcion">
            <summary>
            Descripción del parámetro
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.EsEntrada">
            <summary>
            Indica si el parámetro de la función de visión es una entrada o una salida
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.OrigenValorParametro">
            <summary>
            Indica si se trata de un parámetro fijo o es una variable
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.Tipo">
            <summary>
            Tipo del parámetro de la función
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.CodVariable">
            <summary>
            Propiedad opcional que indica el código de la variable asociada al parámetro
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OParametroFuncionVision.Valor">
            <summary>
            Propiedad opcional que indica el valor fijo del parámetro
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.TipoFuncionVision">
            <summary>
            Enumerado que identifica a los tipos de funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoFuncionVision.Orbita">
            <summary>
            Función propia
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoFuncionVision.VisionPro">
            <summary>
            Función de las librerías VisionPro de Cognex
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoFuncionVision.CCR">
            <summary>
            Función de las librerías de reconocimiento de la matricula de los contenedores
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoFuncionVision.LPR">
            <summary>
            Función de las librerías de lectura de matrículas de vehículos
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.TipoEjecucionFuncionVision">
            <summary>
            Indica el tipo de ejecución que se realizará en la función de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoEjecucionFuncionVision.EjecucionSincrona">
            <summary>
            Ejecución sincrona de la función de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoEjecucionFuncionVision.EjecucionAsincrona">
            <summary>
            Ejecución de la función de visión en un hilo separado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoEjecucionFuncionVision.EjecucionEncolada">
            <summary>
            Ejecución multiple de la función de visión
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OrigenValorParametro">
            <summary>
            Enumerado que informa sobre el origen del valor de un parámetro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrigenValorParametro.ValorFijo">
            <summary>
            Valor fijado en la base de datos (únicamente válido para las entradas)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrigenValorParametro.ValorVariable">
            <summary>
            Valor asignado por/a variable (válido tanto para entradas com para salidas)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OrigenValorParametro.ValorPorCodigo">
            <summary>
            Valor asignado por/a código (válido tanto para entradas com para salidas)
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.EventArgsResultadoParcial">
            <summary>
            Parametros de retorno del evento que indica de la llegada de un mensaje actualizacion
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.EventArgsResultadoParcial.InfoInspeccion">
            <summary>
            Resultado parcial
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.EventArgsResultadoParcial.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.EventArgsResultadoParcial.#ctor(System.Object)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.CallBackResultadoParcial">
            <summary>
            Delegado que indica de la llegada de un nuevo resultado parcial
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.EntradasFuncionesVision.Add(System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Añade un parámetro de entrada
            </summary>
            <param name="codigo"></param>
            <param name="valor"></param>
            <param name="tipoVariable"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.EntradasFuncionesVision.Add(Orbita.VA.Funciones.EnumTipoEntradaFuncionVision,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Añade un parámetro de entrada
            </summary>
            <param name="codigo"></param>
            <param name="valor"></param>
            <param name="tipoVariable"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.EnumTipoEntradaFuncionVision">
            <summary>
            Clase que implementa el enumerado de las entradas de las funciones de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.EnumTipoEntradaFuncionVision.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constuctor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.TipoSalidasFuncionesVision">
            <summary>
            Define el conjunto de tipos de salidas de las funciones de visión
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.TipoSalidasFuncionesVision.Imagen">
            <summary>
            Imagen de salida
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.EnumTipoSalidaFuncionVision">
            <summary>
            Clase que implementa el enumerado de las salidas de las funciones de visión
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.EnumTipoSalidaFuncionVision.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constuctor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OScoringFunction">
            <summary>
            Interfaz de puntuación de una variable
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OScoringFunction.MapScore(System.Double)">
            <summary>
            Mapeo de una puntuación en crudo
            </summary>
            <param name="rawScore">Puntuación en crudo</param>
            <returns>Puntuación mapeada</returns>
        </member>
        <member name="T:Orbita.VA.Funciones.SingleSideScoringFunction">
            <summary>
            Clase que implementa una función de puntuación simple
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.SingleSideScoringFunction.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor de la clase, y0 e y1 deben encontrarse entre 0 y 1. X1 se debe encontrar entre Xc y X0
            </summary>
            <param name="xc">Valor límite entre devolver 0 o y1</param>
            <param name="x0">Valor límite entre devolver y1 o la función de puntuación</param>
            <param name="x1">Valor límite entre devolver la función de puntuación o devolver y0</param>
            <param name="y0">Puntuación máxima</param>
            <param name="y1">Puntuación mínima</param>
        </member>
        <member name="M:Orbita.VA.Funciones.SingleSideScoringFunction.MapScore(System.Double)">
            <summary>
            Mapea un valor crudo según la función de puntuación definida
            </summary>
            <param name="rawScore">Valor crudo</param>
            <returns>Puntuación mapeada</returns>
        </member>
        <member name="T:Orbita.VA.Funciones.TwoSidedScoringFunction">
            <summary>
            Clase que implementa una función de puntuación de dos lados
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.TwoSidedScoringFunction.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="xcs">Parámetro Xc de la parte izquierda</param>
            <param name="x0s">Parámetro X0 de la parte izquierda</param>
            <param name="x1s">Parámetro X1 de la parte izquierda</param>
            <param name="y0"> Parámetro Y0 de la parte izquierda</param>
            <param name="y1"> Parámetro Y1 de la parte izquierda</param>
            <param name="xcb">Parámetro Xc de la parte derecha</param>
            <param name="x0b">Parámetro X0 de la parte derecha</param>
            <param name="x1b">Parámetro X1 de la parte derecha</param>
            <param name="y0h">Parámetro Y0 de la parte derecha</param>
            <param name="y1h">Parámetro Y1 de la parte derecha</param>
        </member>
        <member name="M:Orbita.VA.Funciones.TwoSidedScoringFunction.MapScore(System.Double)">
            <summary>
            Mapea un valor crudo según una función de puntuación
            
            If the edge pattern candidate is exactly the same size as the edge model, the raw score must be 0.0; 
            if the edge pattern candidate is smaller than the edge model, the raw score must be less than 0; 
            if the edge pattern candidate is larger than the edge model, the raw score must be greater than 0.
            </summary>
            <param name="rawScore">Puntuación a mapear</param>
            <returns>Puntuación mapeada</returns>
        </member>
        <member name="T:Orbita.VA.Funciones.FiltradoException">
            <summary>
            Excepción de filtrado
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OHerramientasOpenCV">
            <summary>
            Clase estática con herramientas de OpenCV
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OHerramientasOpenCV.Invertir(Emgu.CV.Matrix{System.Single})">
            <summary>
            Devuelve la inversa de una matriz (si la matriz no tiene inversa o no es cuadrada devuelve una matriz 0)
            </summary>
            <param name="sourceMat">Matriz a invertir</param>
            <returns>Matriz inversa</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OHerramientasOpenCV.Proyeccion(System.Drawing.PointF,Emgu.CV.Matrix{System.Single})">
            <summary>
            Devuelve las coordenadas de un punto al aplicar una transformación
            </summary>
            <param name="input">Coordenadas de origen</param>
            <param name="sourceMat">Matriz de transformación</param>
            <returns>Coordenadas en destino</returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OSegmentacionOpenCV.BuscarEdges(Orbita.VA.Comun.OImagenOpenCVMonocromo{System.Byte},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Int32,Orbita.VA.Funciones.FilterSize,System.Double,System.Double,Emgu.CV.Matrix{System.Single}@,System.Collections.Generic.List{Orbita.VA.Funciones.OEdgeResult}@)">
            <summary>
            Búsqueda de edges
            </summary>
            <param name="input"></param>
            <param name="origen"></param>
            <param name="extremoX"></param>
            <param name="extremoY"></param>
            <param name="numCalipers"></param>
            <param name="kernel"></param>
            <param name="anchuraEsperada"></param>
            <param name="threshold"></param>
            <param name="matrizConversionCoordenadas"></param>
            <param name="edges"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OSegmentacionOpenCV.CalculoLineaTendencia(System.Collections.Generic.List{System.Drawing.PointF},System.Drawing.PointF,System.Drawing.PointF,System.Int32,System.Double,System.Double@)">
            <summary>
            Cálculo de la línea de tendencia
            </summary>
            <param name="ptos"></param>
            <param name="origen"></param>
            <param name="extremoY"></param>
            <param name="numPuntosDescartar"></param>
            <param name="distanciaDescarte"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OSegmentacionOpenCV.FindLaserLine(Orbita.VA.Comun.OImagenOpenCVMonocromo{System.Byte},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Int32,Orbita.VA.Funciones.FilterSize,System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Encuentra una línea en una imagen
            </summary>
            <param name="input">Imagen de entrada</param>
            <param name="origen">Punto de origen</param>
            <param name="extremoX">Extremo hasta el cual buscar la línea</param>
            <param name="extremoY">Eje a lo largo del cual se desplaza la línea</param>
            <param name="numCalipers">Número de objetos OrbitaCaliper a utilizar (puntos para el dibujado de la línea)</param>
            <param name="kernel">Filtro para los OrbitaCaliper</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OSegmentacionOpenCV.FindLaserLine(Orbita.VA.Comun.OImagenOpenCVMonocromo{System.Byte},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Int32,Orbita.VA.Funciones.FilterSize,System.Double,System.Double,System.Int32,System.Double,Orbita.VA.Comun.OGraficoOpenCV@,System.Drawing.Color)">
            <summary>
            Encuentra una línea en una imagen
            </summary>
            <param name="input">Imagen de entrada</param>
            <param name="origen">Punto de origen</param>
            <param name="extremoX">Extremo hasta el cual buscar la línea</param>
            <param name="extremoY">Eje a lo largo del cual se desplaza la línea</param>
            <param name="numCalipers">Número de objetos OrbitaCaliper a utilizar (puntos para el dibujado de la línea)</param>
            <param name="kernel">Filtro para los OrbitaCaliper</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OSegmentacionOpenCV.FindLaserLine(Orbita.VA.Comun.OImagenOpenCVMonocromo{System.Byte},System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Int32,Orbita.VA.Funciones.FilterSize,System.Double,System.Double,System.Int32,System.Double,Orbita.VA.Comun.OLinea@,System.Double@,Orbita.VA.Comun.OLinea@,System.Double@,Orbita.VA.Comun.OLinea@,System.Double@,Orbita.VA.Comun.OGraficoOpenCV@,System.Drawing.Color)">
            <summary>
            Encuentra una línea en una imagen
            </summary>
            <param name="input">Imagen de entrada</param>
            <param name="origen">Punto de origen</param>
            <param name="extremoX">Extremo hasta el cual buscar la línea</param>
            <param name="extremoY">Eje a lo largo del cual se desplaza la línea</param>
            <param name="numCalipers">Número de objetos OrbitaCaliper a utilizar (puntos para el dibujado de la línea)</param>
            <param name="kernel">Filtro para los OrbitaCaliper</param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OMetodoPuntuacion">
            <summary>
            Clase abstracta que define la interfaz de un método de puntuación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMetodoPuntuacion.onlyPairMethod">
            <summary>
            Indica si el método de puntuación se aplica sólamente a pares de edges
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMetodoPuntuacion.funcionPuntuacion">
            <summary>
            Función de puntuación del método
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMetodoPuntuacion.Puntuar(Orbita.VA.Funciones.OEdgeResult)">
            <summary>
            Método que devuelve la puntuación de un candidato
            </summary>
            <param name="candidato">Resultado a puntuar</param>
            <returns>Puntuación numérica del resultado</returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OMetodoPuntuacion.OnlyPairMethod">
            <summary>
            Obtiene si se trata de un método para puntuar únicamente pares de edges
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.SizeDiffNormMethod">
            <summary>
            Método de puntuación por tamaño. Se basa en el ancho entre un par de edge 
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.SizeDiffNormMethod.edgePairWidth">
            <summary>
            Ancho del par de edges
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.SizeDiffNormMethod.#ctor(System.Double)">
            <summary>
            Constructor del método de puntuación
            </summary>
            <param name="edgePairWidth">Ancho de máxima puntuación</param>
        </member>
        <member name="M:Orbita.VA.Funciones.SizeDiffNormMethod.#ctor(System.Double,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor del método de puntuación
            </summary>
            <param name="edgePairWidth">Ancho de máxima puntuación</param>
        </member>
        <member name="M:Orbita.VA.Funciones.SizeDiffNormMethod.Puntuar(Orbita.VA.Funciones.OEdgeResult)">
            <summary>
            Sobreescritura del método de puntuación
            </summary>
            <param name="candidato">Resultado candidato</param>
            <returns>Puntuación numérica</returns>
        </member>
        <member name="T:Orbita.VA.Funciones.ContrastMethod">
            <summary>
            Método de puntuación por contraste. Se basa en el contraste normalizado de un edge
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ContrastMethod.#ctor">
            <summary>
            Constructor del método de puntuación
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ContrastMethod.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor del método de puntuación
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ContrastMethod.Puntuar(Orbita.VA.Funciones.OEdgeResult)">
            <summary>
            Método sobreescrito de puntuación
            </summary>
            <param name="candidato">Resultado a puntuar</param>
            <returns>Puntuación numérica del resultado</returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OMTInterfaceLPR">
            <summary>
            Clase estática que manejará la librería VPAR de reconocimiento de matrículas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.MAX_QUEUE">
            <summary>
            Numero máximo de imagenes en cola para ser procesador
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.VPARMtCallbackResult">
            <summary>
            Recepción del resultado por parte de vparmt.dll
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.VPARIsRunning">
            <summary>
            Variable que nos indicará que esta en proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.ColaDeResultados">
            <summary>
            Cola que contiene los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.ProductorConsumidor">
            <summary>
            Clase que gestionara la añadición y ejecución de resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.ElementosEnviados">
            <summary>
            Elementos enviados al motor, para poder asociar con los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.LockObject">
            <summary>
            Objeto bloqueante
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.Configuracion">
            <summary>
            Parametros de configuracion del motor
            </summary> 
        </member>
        <member name="F:Orbita.VA.Funciones.OMTInterfaceLPR.ContId">
            <summary>
            Contador de identificación
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Inicializar">
            <summary>
            Inicializa el wraper
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Finalizar">
            <summary>
            Finaliza el wrapper
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Init(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inicializamos el motor de busqueda
            </summary>
            <param name="AvCharHeight"></param>
            <param name="DuplicateLines"></param>
            <param name="Trace"></param>
            <param name="numThreads"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.QueryEnd">
            <summary>
            Finaliza el motor de búsqueda
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Reset">
            <summary>
            Resetea las colas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Reset(System.String)">
            <summary>
            Resetea las colas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.SetConfiguracion(Orbita.VA.Funciones.OParametrosLPR)">
            <summary>
            Establece la configuración
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.IsRunning">
            <summary>
            Devuelve si el motor esta activo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetQueueSize">
            <summary>
            Devuelve la cantidad de imagenes en la cola del wrapper
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetQueueSize(System.String)">
            <summary>
            Devuelve la cantidad de imagenes en la cola del wrapper para una determinada funcion
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetResultado">
            <summary>
            Devuelve un resultado de la cola
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Add(System.String,System.Drawing.Bitmap,System.Object,System.Boolean)">
            <summary>
            Añade una imagen para su reconocimiento
            </summary>
            <param name="codFunc">funcion que lo añade</param>
            <param name="bitmap">imagen</param>
            <param name="obj">información de la imagen</param>
            <param name="bFront">Si es prioritaria</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.Add(System.String,System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Añade una imagen para su reconocimiento por ruta
            </summary>
            <param name="codFunc">funcion que lo añade</param>
            <param name="rutaBitmap">imagen</param>
            <param name="obj">información de la imagen</param>
            <param name="bFront">Si es prioritaria</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetFreeCores">
            <summary>
            Devuelve los núcleos disponibles
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetLicensedCores">
            <summary>
            Devuelve el número de núcleos de la licencia
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetQueueSizeVPARMT">
            <summary>
            Devuelve la cantida de objetos en la cola de cidarmt.dll
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.GetUsedCores">
            <summary>
            Devuelve la cantidad de núcleos en uso
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.ReiniciarContID">
            <summary>
            Reinicia el contador de identificacion
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.EjecutarConsumidor(Orbita.VA.Funciones.OLPRData)">
            <summary>
            Método que ejecuta la acción del consumidor.
            </summary>
            <param name="valor"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OMTInterfaceLPR.CallbackResultFunction(System.Int32,Orbita.VA.Funciones.VPARMtResult@)">
            <summary>
            Función recepción resultados
            </summary>
            <param name="id"></param>
            <param name="res"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.OMTInterfaceLPR.VPARCallback">
            <summary>
            Delegado de recepción de resultados de Vpar
            </summary>
            <param name="identificador">Identificador</param>
            <param name="resultado">resultado</param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Funciones.VPARMtResult">
            <summary>
            Estructura del resultado  devuelto
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.VPARMtConfiguration">
            <summary>
            Estructura de la configuración
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.CandidateRegion">
            <summary>
            Region Candidata
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OLPRInfoImagen">
            <summary>
            Información de la imagen que se va a pasar al motor de VPAR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.DisposedValue">
            <summary>
            Si el valor ha sido borrado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.Imagen">
            <summary>
            Imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.Obj">
            <summary>
            Objeto
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.Ruta">
            <summary>
            Ruta
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.AutoBorradoFicheroTemporal">
            <summary>
            Indica si se ha de borrar el fichero temporal
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.Timestamp">
            <summary>
            Fecha
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRInfoImagen.TimestampUTC">
            <summary>
            Fecha universal
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRInfoImagen.#ctor(System.Drawing.Bitmap,System.String,System.Boolean,System.Object@)">
            <summary>
            Constructor con parametros
            </summary>
            <param name="image"></param>
            <param name="path"></param>
            <param name="objInfo"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRInfoImagen.ClearImage">
            <summary>
            Borra la imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRInfoImagen.Dispose">
            <summary>
            Elimina la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRInfoImagen.SetPath(System.String)">
            <summary>
            Establece la ruta
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRInfoImagen.Dispose(System.Boolean)">
            <summary>
            Método hererado para eliminar la clase
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRInfoImagen.GetImage">
            <summary>
            Obtiene la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRInfoImagen.GetObject">
            <summary>
            Obtiene el objeto
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRInfoImagen.GetPath">
            <summary>
            Obtiene la ruta
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRInfoImagen.GetAutoBorradoFicheroTemporal">
            <summary>
            Indica si se ha de borrar el fichero temporal
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRInfoImagen.GetTimestamp">
            <summary>
            Obtiene la fecha
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRInfoImagen.GetUTCTimestamp">
            <summary>
            Obtiene la fecha universal
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OLPRData">
            <summary>
            Datos de la identificación a realizar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.Identificador">
            <summary>
            Identificador del dato
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.CodFuncionVision">
            <summary>
            Codigo de la función que llama
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.DisposedValue">
            <summary>
            Si el valor ha sido borrado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.Configuracion">
            <summary>
            Configuración a utilizar para el dato
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.InformacionImagen">
            <summary>
            Información de la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.ListaResultados">
            <summary>
            Lista con los resultados
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRData.TotalReadItems">
            <summary>
            Cantidad de lecturas
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRData.#ctor(System.Int64,System.String,Orbita.VA.Funciones.VPARMtConfiguration,Orbita.VA.Funciones.OLPRInfoImagen@)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="ident"></param>
            <param name="cfg"></param>
            <param name="pi"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRData.AddResultado(Orbita.VA.Funciones.OLPRCodeInfo@)">
            <summary>
            Le añade un resultado
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRData.Dispose">
            <summary>
            Eliminado
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRData.Dispose(System.Boolean)">
            <summary>
            Método hererado para eliminar la clase
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.GetId">
            <summary>
            Obtiene el identificador del dato
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.GetCodFuncion">
            <summary>
            Obtiene el codigo de la función de visión
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.Configuration">
            <summary>
            Propiedad de configuración
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.GetFirstItem">
            <summary>
            Obtiene el primer resultado
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.ImageInformation">
            <summary>
            Propiedad de la información de la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.ItemCount">
            <summary>
            Cantidad de resultados
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRData.ReadItems">
            <summary>
            Cantidad de items leidos
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OLPRCodeInfo">
            <summary>
            Resultado de la identificación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.averageCharHeigth">
            <summary>
            Media de altura del caracter
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.bPosition">
            <summary>
            Posición inferior 
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.charConfidence">
            <summary>
            Vector de calidad de los caracteres
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.confidence">
            <summary>
            Calidad global
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.disposedValue">
            <summary>
            Eliminación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.id">
            <summary>
            Identificador
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.lPosition">
            <summary>
            Posición izquierda
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.numCharacters">
            <summary>
            Número de caracteres reconocidos
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.plate">
            <summary>
            Matrícula
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.plateFormat">
            <summary>
            Formato de la matrícula reconocida
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.processingTime">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.rPosition">
            <summary>
            Posición derecha
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.sourcePath">
            <summary>
            Ruta de la imagen origen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OLPRCodeInfo.tPosition">
            <summary>
            Posición superior
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.#ctor(System.String,System.Int32,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.String,System.Int32,System.Int32,System.Single[],System.Int32)">
            <summary>
            Constructor con parámetros
            </summary>
            <param name="ccode"></param>
            <param name="verified"></param>
            <param name="ptime"></param>
            <param name="avgChar"></param>
            <param name="lpos"></param>
            <param name="tpos"></param>
            <param name="rpos"></param>
            <param name="bpos"></param>
            <param name="fia"></param>
            <param name="path"></param>
            <param name="ident"></param>
            <param name="nchars"></param>
            <param name="cConf"></param>
            <param name="eInfoFound"></param>
            <param name="eInfo"></param>
            <param name="eInfoNumChars"></param>
            <param name="eInfoConf"></param>
            <param name="eInfoLeft"></param>
            <param name="eInfoTop"></param>
            <param name="eInfoRight"></param>
            <param name="eInfoBottom"></param>
            <param name="eInfocConf"></param>
            <param name="nLines"></param>
            <param name="inverted"></param>
            <param name="vertical"></param>
            <param name="luserParam1"></param>
            <param name="luserParam2"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.Dispose">
            <summary>
            Eliminado 
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.GetPlatePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Devuelve la posición del códgio identificado
            </summary>
            <param name="plLeft"></param>
            <param name="plTop"></param>
            <param name="plRight"></param>
            <param name="plBottom"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.SetSourcePath(System.String)">
            <summary>
            Actualiza la ruta
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.GetCharConfidence">
            <summary>
            Obtiene la calidad de los caracteres
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.Dispose(System.Boolean)">
            <summary>
            Eliminado
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Orbita.VA.Funciones.OLPRCodeInfo.ToString">
            <summary>
            Transforma el resultado en un string de Código(ISO)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetAverageCharacterHeigth">
            <summary>
            Obtiene la altura media
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetBottomPlatePosition">
            <summary>
            Obtiene la posición inferior
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetGlobalConfidence">
            <summary>
            Obtiene la calidad globar
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetId">
            <summary>
            Obtiene el identificador
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetLeftPlatePosition">
            <summary>
            Obtiene la posición izquierda
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetNumCharacters">
            <summary>
            Obtiene el número de caracteres
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetPlateFormat">
            <summary>
            Obtiene el formato de la matrícula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetPlateNumber">
            <summary>
            Obtiene la matrícula
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetProcessingTime">
            <summary>
            Obtiene el tiempo de proceso
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetRightPlatePosition">
            <summary>
            Obtiene la posición derecha
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetSourcePath">
            <summary>
            Obtiene la ruta de la imagen original
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OLPRCodeInfo.GetTopPlatePosition">
            <summary>
            Obtiene la posición superior
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OEdgeResult">
            <summary>
            Implementa el resultado de una detección de edges por parte de OrbitaCaliper
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdgeResult.edge1">
            <summary>
            Edge detectado (o primer edge del par)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdgeResult.edge2">
            <summary>
            Segundo edge del par
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdgeResult.pair">
            <summary>
            Determina si se trata de un par de edges o de un sigle edge
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdgeResult.resultScore">
            <summary>
            Puntuación del resultado
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OEdgeResult.#ctor(Orbita.VA.Funciones.OEdge)">
            <summary>
            Constructor para un resultado single edge
            </summary>
            <param name="edge">Edge a incluir en el resultado</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OEdgeResult.ToString">
            <summary>
            Sobreescritura del método ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.Edge1">
            <summary>
            Obtiene el edge resultado (primer edge en caso de ser un par)
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.Edge2">
            <summary>
            Obtiene o establece el segundo edge del par
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.IsPair">
            <summary>
            Obtiene si el resultado es un par de edges
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.ResultScore">
            <summary>
            Obtiene la puntuación del resultado
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.MeasuredWidth">
            <summary>
            Obtiene el ancho del par
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.Position">
            <summary>
            Obtiene la posición del resultado
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdgeResult.ContrasteAbsoluto">
            <summary>
            Obtiene el contraste del resultado (en valor absoluto)
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OEdge">
            <summary>
            Estructura que almacena datos de un Edge
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdge.indice">
            <summary>
            Índice del edge
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdge.score">
            <summary>
            Puntuación del edge
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdge.position">
            <summary>
            Posición del edge respecto al centro del caliper
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdge.x">
            <summary>
            Posición del edge sobre el eje x
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdge.y">
            <summary>
            Posición del edge sobre el eje y
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OEdge.contraste">
            <summary>
            Contraste medido del edge
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OEdge.#ctor(System.Int32,System.Single,System.Drawing.PointF,System.Double)">
            <summary>
            Crea un nuevo edge con la puntuación vacia
            </summary>
            <param name="indice">Indice del caliper, para identificarlo dentro de la colección</param>
            <param name="posicion">Posición respecto al centro del caliper</param>
            <param name="coordenadas">Coordenadas donde se encuentra el edge</param>
            <param name="contraste">Contraste encontrado</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OEdge.#ctor(System.Int32,System.Single,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Crea un nuevo edge con la puntuación
            </summary>
            <param name="indice">Indice del caliper, para identificarlo dentro de la colección</param>
            <param name="posicion">Posición respecto al centro del caliper</param>
            <param name="coordenadas">Coordenadas donde se encuentra el edge</param>
            <param name="contraste">Contraste encontrado</param>
            <param name="score">Puntuación del edge</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OEdge.#ctor(Orbita.VA.Funciones.OEdge)">
            <summary>
            Crea un nuevo edge en base a otro
            </summary>
            <param name="origen">Edge a copiar</param>
        </member>
        <member name="M:Orbita.VA.Funciones.OEdge.ToString">
            <summary>
            Método ToString sobreescrito
            </summary>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.Score">
            <summary>
            Obtiene o establece la puntuación del edge
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.Position">
            <summary>
            Obtiene la posición del edge respecto al centro del OrbitaCaliper
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.X">
            <summary>
            Obtiene la posición sobre el eje X del edge
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.Y">
            <summary>
            Obtiene la posición sobre el eje Y del edge
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.NegroBlanco">
            <summary>
            Obtiene si el edge está en una transición negro a blanco
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.Contraste">
            <summary>
            Obtiene el contraste medido del edge
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OEdge.Indice">
            <summary>
            Obtiene el índice del edge
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.PolaridadEdges">
            <summary>
            Enumera los tipos de edges disponibles
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.PolaridadEdges.NegroBlanco">
            <summary>
            Contraste positivo, pasa de negro a blanco
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.PolaridadEdges.BlancoNegro">
            <summary>
            Contraste negativo, pasa de blanco a negro
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.PolaridadEdges.Cualquiera">
            <summary>
            Cualquier signo de contraste, sirve para cualquier edge sea cual sea su signo
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.PolaridadEdges.Ninguno">
            <summary>
            Edge no definido, se utiliza para indicar la no existencia de un edge
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OCCRManager">
            <summary>
            Clase que ejecuta continuamente el
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.LimitCores">
            <summary>
            Constante que indica si se limitan los núcleos a utilizar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.Cores">
            <summary>
            Constante que indica el número máximo de núcleos a utilizar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.AvCharHeight">
            <summary>
            Constante de altura del caracter
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.DuplicateLines">
            <summary>
            Parámetro de cidar
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.Trace">
            <summary>
            Trazabilidad
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.ThreadEjecucionCCR">
            <summary>
            Thread de ejecución continua del módulo CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OCCRManager.UsoDemandado">
            <summary>
            Indica si alguna función de visión ha demandado el uso del CCR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.Constructor">
            <summary>
            Construye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.Destructor">
            <summary>
            Destruye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.Inicializar">
            <summary>
            Carga las propiedades de la base de datos
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.Finalizar">
            <summary>
            Finaliza la ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.Reset(System.String)">
            <summary>
            Resetea la función de visión CCR
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.DemandaUso">
            <summary>
            Se demanda el uso del CCR, por lo que se necesita iniciar las librerías correspondientes
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OCCRManager.FinDemandaUso">
            <summary>
            Se elimina la demanda el uso del CCR, por lo que se necesita finalizar las librerías correspondientes
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.ThreadEjecucionCCR">
            <summary>
            Clase que ejecuta el reconocimiento de los codigos en un thread
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.ThreadEjecucionCCR.Finalizar">
            <summary>
            Indica si se ha de finalizar la ejecución del thread
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.ThreadEjecucionCCR.QueueSize">
            <summary>
            Cola de elementos a procesar en MTInterface
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionCCR.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionCCR.#ctor(System.String,System.Threading.ThreadPriority)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionCCR.CallBack(Orbita.VA.Funciones.OInfoInspeccionCCR)">
            <summary>
            Ejecuta el callback en el mismo thread que la Applicación principal
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.ThreadEjecucionCCR.Ejecucion(System.Boolean@)">
            <summary>
            Método heredado para implementar la ejecución del thread.
            Este método se está ejecutando en un bucle. Para salir del bucle hay que devolver finalize a true.
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.ThreadEjecucionCCR.DelegadoCallBack">
            <summary>
            Delegado de ejecución del callback
            </summary>
            <param name="callBack"></param>
            <param name="argumentoEvento"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OFuncionVisionCCR">
            <summary>
            Clase que realizara la función de reconocimiento de CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.MaxInspeccionesEnCola">
            <summary>
            Número máximo de inspecciones en la cola de ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.ParametrosCCR">
            <summary>
            Siguiente parametros de entrada a procesar en el CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.Imagen">
            <summary>
            Siguiente imágen a procesar en el CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.RutaImagenTemporal">
            <summary>
            Siguiente ruta de imágen a procesar en el CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.Prioridad">
            <summary>
            Prioridad de encolamiento
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.InformacionAdicional">
            <summary>
            Lista de información adicional incorporada por el controlador externo
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OFuncionVisionCCR.ContadorImagenesPorDisco">
            <summary>
            Para saber la cantidad de imagenes guardadas por disco en cada ejecucion
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.EstablecerConfiguracion(Orbita.VA.Funciones.OParametrosCCR)">
            <summary>
            Cargamos la configuracion de los parametros pasados por parámetro en caso de necesidad
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.IsFileLocked(System.IO.FileInfo)">
            <summary>
            Comprueba que el archivo no este en uso
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.Reset">
            <summary>
            Realiza un reset de la función de visión de CCR que esta en ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.EjecucionEncolada">
            <summary>
            Ejecución de la función de CCR de forma encolada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.HayInspeccionesPendientes">
            <summary>
            Indica que hay inspecciones pendientes de ejecución
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.ResetearColaEjecucion">
            <summary>
            Resetea la cola de ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.SetEntrada(System.String,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Orbita.VA.Funciones.OFuncionVisionCCR.SetEntrada(Orbita.VA.Funciones.EnumTipoEntradaFuncionVision,System.Object,Orbita.Utiles.OEnumTipoDato)">
            <summary>
            Función para la actualización de parámetros de entrada
            </summary>
            <param name="ParamName">Nombre identificador del parámetro</param>
            <param name="ParamValue">Nuevo valor del parámetro</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoInspeccionCCR">
            <summary>
            Clase que contiene la información referente a la inspección
            </summary>
            <typeparam name="TInfo"></typeparam>
            <typeparam name="TParametros"></typeparam>
            <typeparam name="TResultados"></typeparam>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoInspeccionCCR.ImagenPerspectivaCorregida">
            <summary>
            Imagen inspeccionada
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccionCCR.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoInspeccionCCR.#ctor(Orbita.VA.Comun.OImagenBitmap,Orbita.VA.Comun.OImagenBitmap,Orbita.VA.Funciones.OParametrosCCR,Orbita.VA.Funciones.OInfoImagenCCR,Orbita.VA.Funciones.OResultadoCCR,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor de la clase
            </summary>
            <param name="info"></param>
            <param name="parametros"></param>
            <param name="resultados"></param>
        </member>
        <member name="T:Orbita.VA.Funciones.OParametrosCCR">
            <summary>
            Clase que contiene los parametros de configuracion del CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.Altura">
            <summary>
            Altura del caracter
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.ActivadoRangoAlturas">
            <summary>
            Para tener en cuenta el rango de alturas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.AlturaMin">
            <summary>
            Altura Minima
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.AlturaMax">
            <summary>
            Altura Máxima
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.VectorAlturas">
            <summary>
            Vector que contendra las alturas
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.TimeOut">
            <summary>
            timeout de ejecución
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.ActivadaAjusteCorreccion">
            <summary>
            activa el ajuste de la correcion
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.CoeficienteHorizontal">
            <summary>
            Coeficiente de Correccion de la perspectiva Horizontal
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.CoeficienteVertical">
            <summary>
            Coeficiente de Correccion de la perspectiva Vertical
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.CoeficienteRadial">
            <summary>
            Coeficiente para el ojo de pez
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.AnguloRotacion">
            <summary>
            Coeficiente de la corrección del ángulo de rotación
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.InclinacionVertical">
            <summary>
            Inclinación vertical
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.InclinacionHorizontal">
            <summary>
            Inclinación vertical
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.Distancia">
            <summary>
            Distancia al código desde la camara en metros
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.CoordIzq">
            <summary>
            Coordenada izquierda ventana
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.CoordArriba">
            <summary>
            Coordenada superior ventana
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.AlturaVentanaBusqueda">
            <summary>
            Altura de la ventana de búsqueda
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.AnchuraVentanaBusqueda">
            <summary>
            Anchura de la ventana de búsqueda
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.ActivadaMasInformacion">
            <summary>
            Se le indica si se desea buscar más información extra en la imagén
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.Escala">
            <summary>
            Escala 
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.Param1">
            <summary>
            Parámetro1
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.Param2">
            <summary>
            Parámetro2
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.OrbitaCorreccionPerspectiva">
            <summary>
            Parámetros de corrección de perspectiva de Orbita
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.RealizarProcesoPorDisco">
            <summary>
            Para pasar a las librerias una ruta de imagen y no el bitmap
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OParametrosCCR.RutaEjecucionPorDisco">
            <summary>
            Ruta utilizada para pasar la imagen por disco
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OParametrosCCR.#ctor">
            <summary>
            Constructor de la clase sin parámetros
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OInfoImagenCCR">
            <summary>
            Esta clase contendra la información que queremos pasar con la imagen al CCR para recogerla cuando tengamos el resultado
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenCCR._IdEjecucionActual">
            <summary>
            Contiene la información de la identificacion a la que pertenece
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenCCR._Codigo">
            <summary>
            Contiene la información de la cámara que se le pasa en la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenCCR._IndiceImagen">
            <summary>
            Contiene el indice de la imagen añadida
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenCCR._MomentoImagen">
            <summary>
            Contiene la fecha exacta en la que se adquirio la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenCCR._RutaImagenTemporal">
            <summary>
            Ruta de la imagen temporal
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OInfoImagenCCR.CallBackResultadoParcial">
            <summary>
            CallBack donde mandar el resultado parcial
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoImagenCCR.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OInfoImagenCCR.#ctor(System.Int64,System.String,System.Int32,System.DateTime,System.String,Orbita.VA.Funciones.CallBackResultadoParcial)">
            <summary>
            Constructor con parametros
            </summary>
            <param name="camara">camara que adquiere la imagen</param>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenCCR.IdEjecucionActual">
            <summary>
            Contiene la información de la identificacion a la que pertenece
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenCCR.Codigo">
            <summary>
            Contiene la información de la cámara que se le pasa en la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenCCR.IndiceImagen">
            <summary>
            Contiene el indice de la imagen añadida
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenCCR.MomentoImagen">
            <summary>
            Contiene la fecha exacta en la que se adquirio la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OInfoImagenCCR.RutaImagenTemporal">
            <summary>
            Ruta de la imagen temporal
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.OResultadoCCR">
            <summary>
            Clase que contiene los resultados que se reciben del CCR para una imagen pasada anteriormente
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._CodigoContenedor">
            <summary>
            Contiene la cadena del codigo del contenedor
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._ExtaInfoCodigo">
            <summary>
            Contiene la información extra del código del contenedor
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._CodigoVerificado">
            <summary>
            Si esta verificado el digito de control
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._FiabilidadCodigo">
            <summary>
            Fiabilidad Código
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._FiabilidadExtraInfo">
            <summary>
            Fiabilidad ExtraInfo
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._AlturaLetrasCodigo">
            <summary>
            Altura letras
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._FechaEncolamiento">
            <summary>
            Fecha en la que se encolo a la cola de CCR (dada por él)
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._TiempoDeProceso">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.OResultadoCCR._FiabilidadesLetras">
            <summary>
            Contiene las fiabilidades de cada letra individual
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoCCR.#ctor">
            <summary>
            Constructor sin parametros
            </summary>
        </member>
        <member name="M:Orbita.VA.Funciones.OResultadoCCR.#ctor(Orbita.VA.Funciones.OCCRCodeInfo,System.DateTime)">
            <summary>
            Constructor con parametros
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.CodigoContenedor">
            <summary>
            Contiene la cadena del codigo del contenedor
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.ExtaInfoCodigo">
            <summary>
            Contiene la información extra del código del contenedor
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.CodigoVerificado">
            <summary>
            Si esta verificado el digito de control
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.FiabilidadCodigo">
            <summary>
            Fiabilidad Código
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.FiabilidadExtraInfo">
            <summary>
            Fiabilidad ExtraInfo
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.AlturaLetrasCodigo">
            <summary>
            Altura letras
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.FechaEncolamiento">
            <summary>
            Fecha en la que se encolo a la cola de CCR (dada por él)
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.TiempoDeProceso">
            <summary>
            Tiempo de proceso
            </summary>
        </member>
        <member name="P:Orbita.VA.Funciones.OResultadoCCR.FiabilidadesLetras">
            <summary>
            Contiene las fiabilidades de cada letra individual
            </summary>
        </member>
        <member name="T:Orbita.VA.Funciones.EntradasFuncionesVisionCCR">
            <summary>
            Define el conjunto de tipos de entradas de las funciones de visión CCR
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.EntradasFuncionesVisionCCR.RutaImagen">
            <summary>
            Ruta en disco de la imagen de entrada
            </summary>
        </member>
        <member name="F:Orbita.VA.Funciones.EntradasFuncionesVisionCCR.Prioridad">
            <summary>
            Prioridad de encolamiento
            </summary>
        </member>
    </members>
</doc>
