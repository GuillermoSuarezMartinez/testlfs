<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Orbita.VA.Hardware</name>
    </assembly>
    <members>
        <member name="T:Orbita.VA.Hardware.Filter">
            <summary>
            Summary description for Filter.
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraBaslerPylon">
            <summary>
            Clase que implementa las funciones de manejo de la cámara BaslerVPro
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraBitmap">
            <summary>
            Clase base que implementa las funciones de trabajo sobre bitmaps
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraBase">
            <summary>
            Clase base para todas las cámaras
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.IHardware">
            <summary>
            Interfaz para el acceso a las caracerísticas comunes de todos los dispositivos hardware
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IHardware.Inicializar">
            <summary>
            Carga los valores del hardware
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IHardware.Finalizar">
            <summary>
            Finaliza el hardware
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IHardware.Start">
            <summary>
            Comienza el hardware
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.IHardware.Stop">
            <summary>
            Para el hardware
            </summary>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.Nombre">
            <summary>
            Nombre identificativo de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.Descripcion">
            <summary>
            Descripción de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.Fabricante">
            <summary>
            Fabricante del tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.Modelo">
            <summary>
            Modelo del tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.TipoHardware">
            <summary>
            Tipo de hardware
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IHardware.ListaTerminales">
            <summary>
            Lista de todos los terminales de la tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.SimulacionCamara">
            <summary>
            Objeto de simulación de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.MedidorVelocidadAdquisicion">
            <summary>
            Proporciona herramientas para medir la velocidad de adquisición de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.VideoFile">
            <summary>
            Guardado de Fichero de video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Nombre">
            <summary>
            Nombre identificativo de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Descripcion">
            <summary>
            Descripción de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._TipoCamara">
            <summary>
            Tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._CodigoTipoCamara">
            <summary>
            Código del tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Fabricante">
            <summary>
            Fabricante del tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Modelo">
            <summary>
            Modelo del tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._DescripcionTipoCamara">
            <summary>
            Descripcion del tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Grab">
            <summary>
            Comienza o termina una reproducción de la cámara (sin guardar grabación)
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._AutoStart">
            <summary>
            Indica que la reproducción continua se ha de ejecutar en el momento de conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._CodVariableImagen">
            <summary>
            Código de la variable que guarda la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._CodVariableSnap">
            <summary>
            Código de la variable que fuerza el snap
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Resolucion">
            <summary>
            Resolución de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Color">
            <summary>
            Tipo de cámara dependiendo de si sus imágenes son a color o monocromáticas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Existe">
            <summary>
            Indica que se ha podido acceder a la cámara con éxito
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._VisualizacionEnVivo">
            <summary>
            Indica que el control ha de visualizar automáticamente la imagen que devuelve la cámara,
            de lo contrario se deberá de especificar el momento de la visualización por código.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._ListaTerminales">
            <summary>
            Lista de todos los terminales de la tarjeta de IO
            </summary>              
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._LanzarEventoAlSnap">
            <summary>
            Indica que se ha de cambiar la variable asociada cada vez que se recibe una fotografía
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._ExpectedFrameInterval">
            <summary>
            Indica el intervalo de tiempo en ms. de adquisición de imagenes
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._ExpectedFrameRate">
            <summary>
            Indica la tasa de adquisición esperada
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._MaxFrameIntervalVisualizacion">
            <summary>
            Indica el límite máximo de visualización de imagenes y que por lo tanto se ha de visualizar de forma retrasada con un timer
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._EnsambladoClaseImplementadoraDisplay">
            <summary>
            Nombre del ensamblado de la clase que implementa el display asociado a este tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._ClaseImplementadoraDisplay">
            <summary>
            Nombre de la clase que implementa el display asociado a este tipo de cámara
            </summary>                                        
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._EnsambladoClaseImplementadoraPTZ">
            <summary>
            Nombre del ensamblado de la clase que implementa el display asociado a este tipo de cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._ClaseImplementadoraPTZ">
            <summary>
            Nombre de la clase que implementa el display asociado a este tipo de cámara
            </summary>                                        
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._Conectividad">
            <summary>
            Clase encargada de comprobar la conectividad con un dispositivo
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._PTZ">
            <summary>
            Control PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase._ImagenActual">
            <summary>
            Última imagen capturada
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnNuevaFotografiaCamara">
            <summary>
            Delegado de nueva fotografía
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnNuevaFotografiaCamaraAdv">
            <summary>
            Delegado de nueva fotografía
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnCambioEstadoConexionCamara">
            <summary>
            Delegado de cambio de estaco de conexión de la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnCambioEstadoConexionCamaraAdv">
            <summary>
            Delegado de cambio de estaco de conexión de la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnMensajeCamara">
            <summary>
            Delegado de mensaje de la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnMensajeCamaraAdv">
            <summary>
            Delegado de mensaje de la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnCambioReproduccionCamara">
            <summary>
            Delegado de mensaje de cambio de estado de reproducción
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBase.OnCambioReproduccionCamaraAdv">
            <summary>
            Delegado de mensaje de cambio de estado de reproducción
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Conectar(System.Boolean)">
            <summary>
            Se conecta a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Desconectar(System.Boolean)">
            <summary>
            Se desconecta a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.AdquisicionCompletada(Orbita.VA.Comun.OImage)">
            <summary>
            Se ejecuta cuando se ha completado la adquisición de una imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EstablecerVariableAsociada(Orbita.VA.Comun.OImage)">
            <summary>
            Establece el valor de la imagen a la variable asociada
            </summary>
            <param name="imagen">Imagen a establecer en la variable</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.SnapSimulado(System.String)">
            <summary>
            Simulación de la realización de un snap
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Conectar">
            <summary>
            Se conecta a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Desconectar">
            <summary>
            Se desconecta a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.ConfigurarModoSimulacionFotografia(System.String)">
            <summary>
            Establece la cámara en modo simulación
            </summary>
            <param name="rutaFotografias">Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.ConfigurarModoSimulacionDirectorio(System.String,System.String,System.Int32)">
            <summary>
            Establece la cámara en modo simulación
            </summary>
            <param name="rutaFotografias">Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular</param>
            <param name="filtro">Cadena de filtrado de las fotografías situadas en la caperta establecida</param>
            <param name="cadenciaSimulacionEnGrabacionMs">Intervalo en milisegundos utilizado para simular la grabación. Se realiza una fotografía según el tiempo indicado.</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.PararModoSimulacion">
            <summary>
            Para el modo simulación de la cámara, restableciendo su funcionamiento normal
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Start">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Stop">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Snap">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.VisualizarImagen(Orbita.VA.Comun.OImage)">
            <summary>
            Visualiza una imagen en el display
            </summary>
            <param name="imagen">Imagen a visualizar</param>        
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.VisualizarUltimaImagen">
            <summary>
            Visualiza la última imagen capturada por la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.VisualizarUltimaImagen(Orbita.VA.Comun.OGrafico)">
            <summary>
            Visualiza la última imagen capturada por la cámara
            </summary>
            <param name="graficos">Objeto que contiene los gráficos a visualizar (letras, rectas, circulos, etc)</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.StartREC(System.String)">
            <summary>
            Comienza una grabación continua de la cámara
            </summary>
            <param name="fichero">Ruta y nombre del fichero que contendra el video</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.StopREC">
            <summary>
            Termina una grabación continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearSuscripcionNuevaFotografia(Orbita.VA.Hardware.DelegadoNuevaFotografiaCamara)">
            <summary>
            Suscribe el cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearSuscripcionNuevaFotografia(Orbita.VA.Hardware.DelegadoNuevaFotografiaCamaraAdv)">
            <summary>
            Suscribe el cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EliminarSuscripcionNuevaFotografia(Orbita.VA.Hardware.DelegadoNuevaFotografiaCamara)">
            <summary>
            Elimina la suscripción del cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EliminarSuscripcionNuevaFotografia(Orbita.VA.Hardware.DelegadoNuevaFotografiaCamaraAdv)">
            <summary>
            Elimina la suscripción del cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearSuscripcionCambioEstado(Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamara)">
            <summary>
            Suscribe el cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearSuscripcionCambioEstado(Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamaraAdv)">
            <summary>
            Suscribe el cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EliminarSuscripcionCambioEstado(Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamara)">
            <summary>
            Elimina la suscripción del cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EliminarSuscripcionCambioEstado(Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamaraAdv)">
            <summary>
            Elimina la suscripción del cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearSuscripcionMensajes(Orbita.VA.Comun.OMessageDelegate)">
            <summary>
            Suscribe la recepción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearSuscripcionMensajes(Orbita.VA.Comun.OMessageDelegateAdv)">
            <summary>
            Suscribe la recepción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EliminarSuscripcionMensajes(Orbita.VA.Comun.OMessageDelegate)">
            <summary>
            Elimina la suscripción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.EliminarSuscripcionMensajes(Orbita.VA.Comun.OMessageDelegateAdv)">
            <summary>
            Elimina la suscripción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Inicializar">
            <summary>
            Carga los valores de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CargarImagenDeDisco(Orbita.VA.Comun.OImage@,System.String)">
            <summary>
            Carga una imagen de disco
            </summary>
            <param name="ruta">Indica la ruta donde se encuentra la fotografía</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.GuardarImagenADisco(System.String)">
            <summary>
            Guarda una imagen en disco
            </summary>
            <param name="ruta">Indica la ruta donde se ha de guardar la fotografía</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CargarGraficoDeDisco(Orbita.VA.Comun.OGrafico@,System.String)">
            <summary>
            Carga un grafico de disco
            </summary>
            <param name="ruta">Indica la ruta donde se encuentra el grafico</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.GuardarGraficoADisco(Orbita.VA.Comun.OGrafico,System.String)">
            <summary>
            Guarda un objeto gráfico en disco
            </summary>
            <param name="ruta">Indica la ruta donde se ha de guardar el objeto gráfico</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.NuevaImagen">
            <summary>
            Devuelve una nueva imagen del tipo adecuado al trabajo con la cámara
            </summary>
            <returns>Imagen del tipo adecuado al trabajo con la cámara</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.NuevoGrafico">
            <summary>
            Devuelve un nuevo gráfico del tipo adecuado al trabajo con el display
            </summary>
            <returns>Grafico del tipo adecuado al trabajo con el display</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.VisualizarImagen(Orbita.VA.Comun.OImage,Orbita.VA.Comun.OGrafico)">
            <summary>
            Visualiza una imagen en el display
            </summary>
            <param name="imagen">Imagen a visualizar</param>
            <param name="graficos">Objeto que contiene los gráficos a visualizar (letras, rectas, circulos, etc)</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.ConectarInterno(System.Boolean)">
            <summary>
            Se toma el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.DesconectarInterno(System.Boolean)">
            <summary>
            Se deja el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.StartInterno">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.StopInterno">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.SnapInterno">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.StartRECInterno(System.String)">
            <summary>
            Comienza una grabacion continua de la cámara
            </summary>
            <param name="fichero">Ruta y nombre del fichero que contendra el video</param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.StopRECInterno">
            <summary>
            Termina una grabación continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.CrearConectividad">
            <summary>
            Crea el objeto de conectividad adecuado para la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.ComandoSnapPorVariable">
            <summary>
            Evento de snap realizado por una variable
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBase.OnCambioEstadoConectividadCamara(System.String,Orbita.VA.Hardware.EstadoConexion,Orbita.VA.Hardware.EstadoConexion)">
            <summary>
            Evento de cambio en la conexión con la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Recording">
            <summary>
            Indica si esta grabando
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Nombre">
            <summary>
            Nombre identificativo de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Descripcion">
            <summary>
            Descripción de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.TipoHardware">
            <summary>
            Tipo de hardware
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.TipoCamara">
            <summary>
            Tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.CodigoTipoCamara">
            <summary>
            Código del tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Fabricante">
            <summary>
            Fabricante del tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Modelo">
            <summary>
            Modelo del tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.DescripcionTipoCamara">
            <summary>
            Descripcion del tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Grab">
            <summary>
            Comienza o termina una reproducción de la cámara (sin guardar grabación)
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.AutoStart">
            <summary>
            Indica que la reproducción continua se ha de ejecutar en el momento de conexión
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.CodVariableImagen">
            <summary>
            Código de la variable que guarda la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.CodVariableSnap">
            <summary>
            Código de la variable que fuerza el snap
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Resolucion">
            <summary>
            Resolución de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Color">
            <summary>
            Tipo de cámara dependiendo de si sus imágenes son a color o monocromáticas
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Existe">
            <summary>
            Indica que se ha podido acceder a la cámara con éxito
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.VisualizacionEnVivo">
            <summary>
            Indica que el control ha de visualizar automáticamente la imagen que devuelve la cámara,
            de lo contrario se deberá de especificar el momento de la visualización por código.
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ListaTerminales">
            <summary>
            Lista de todos los terminales de la tarjeta de IO
            </summary>              
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.LanzarEventoAlSnap">
            <summary>
            Indica que se ha de cambiar la variable asociada cada vez que se recibe una fotografía
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ExpectedFrameInterval">
            <summary>
            Indica el intervalo de tiempo en ms. de adquisición de imagenes
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ExpectedFrameRate">
            <summary>
            Indica la tasa de adquisición esperada
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.MaxFrameIntervalVisualizacion">
            <summary>
            Indica el límite máximo de visualización de imagenes y que por lo tanto se ha de visualizar de forma retrasada con un timer
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.EnsambladoClaseImplementadoraDisplay">
            <summary>
            Nombre del ensamblado de la clase que implementa el display asociado a este tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ClaseImplementadoraDisplay">
            <summary>
            Nombre de la clase que implementa el display asociado a este tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.EnsambladoClaseImplementadoraPTZ">
            <summary>
            Nombre del ensamblado de la clase que implementa el display asociado a este tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ClaseImplementadoraPTZ">
            <summary>
            Nombre de la clase que implementa el display asociado a este tipo de cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.Conectividad">
            <summary>
            Clase encargada de comprobar la conectividad con un dispositivo
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.PTZ">
            <summary>
            Control PTZ
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ResolucionGrabacion">
            <summary>
            Porcentaje de la reducción de imagenes en el video grabado: 100 => Tamaño original, 50 => Reducción a la mitad...
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.FrameRateGrabacion">
            <summary>
            Tasa de captura
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.FrameIntervalGrabacion">
            <summary>
            Indica el intervalo de tiempo en ms. de grabación de imagenes
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.BitRateGrabacion">
            <summary>
            Tasa de transferencia
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.CodecGarbacion">
            <summary>
            Códec de grabación
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.TiempoMaxGrabacion">
            <summary>
            Tiempo máximo de duración de la grabación
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.ImagenActual">
            <summary>
            Propieadad a heredar donde se accede a la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBase.EstadoConexion">
            <summary>
            Estado de la conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBitmap.HayNuevaImagen">
            <summary>
            Informa si hay adquirida una nueva imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.GetCurrentImage(Orbita.VA.Comun.OImagenBitmap@)">
            <summary>
            Se extrae la imagen actual de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.SetCurrentImage(Orbita.VA.Comun.OImagenBitmap)">
            <summary>
            Se importa una imagen a la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.Inicializar">
            <summary>
            Carga los valores de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.CargarImagenDeDisco(Orbita.VA.Comun.OImage@,System.String)">
            <summary>
            Carga una imagen de disco
            </summary>
            <param name="ruta">Indica la ruta donde se encuentra la fotografía</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.GuardarImagenADisco(System.String)">
            <summary>
            Guarda una imagen en disco
            </summary>
            <param name="ruta">Indica la ruta donde se ha de guardar la fotografía</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBitmap.NuevaImagen">
            <summary>
            Devuelve una nueva imagen del tipo adecuado al trabajo con la cámara
            </summary>
            <returns>Imagen del tipo adecuado al trabajo con la cámara</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBitmap.ImagenActual">
            <summary>
            Propieadad a heredar donde se accede a la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.PrimeraInstancia">
            <summary>
            Booleano que evita que se construya varias veces el listado de cámaras de tipo GigE
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.ImageProvider">
            <summary>
            Proveedor de imagenes
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.TempBitmap">
            <summary>
            Bitmap temporal de guardado de imágenes
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.Name">
            <summary>
            The friendly name of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.Index">
            <summary>
            The index of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.Serial">
            <summary>
            The serial of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.DeviceClass">
            <summary>
            The type of device of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.DeviceFactory">
            <summary>
            The factory number of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.DeviceVersion">
            <summary>
            The version number of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.FullName">
            <summary>
            The full name of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.ModelName">
            <summary>
            The model name of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.UserDefinedName">
            <summary>
            The user defined name of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.VendorName">
            <summary>
            The vendor name of the device.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.TimerScan">
            <summary>
            Timer de escaneo de las entradas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.IntervaloComprobacionConectividadMS">
            <summary>
            Inervalo entre comprobaciones de conectividad con la cámara IP
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon.AdquisicionEnProceso">
            <summary>
            Indica que la adquisición está siendo procesada en el momento actual
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerPylon._DeviceId">
            <summary>
            Identificador interno de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.BuscarCamaraPorNumeroSerie">
            <summary>
            Busca la frame grabber cuyo número de serie coincide con el indicado
            </summary>
            <param name="numeroDeSerie">Número de serie de la cámara a buscar</param>
            <param name="frameGrabber">FrameGrabber encontrado</param>
            <returns>Veradero si se ha encontrado el número de serie</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.ConectarInterno(System.Boolean)">
            <summary>
            Se toma el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.DesconectarInterno(System.Boolean)">
            <summary>
            Se deja el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.StartInterno">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.StopInterno">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.SnapInterno">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.CrearConectividad">
            <summary>
            Crea el objeto de conectividad adecuado para la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnGrabErrorEventCallback(System.Exception,System.String)">
            <summary>
            Handles the event related to the occurrence of an error while grabbing proceeds.
            </summary>
            <param name="grabException"></param>
            <param name="additionalErrorMessage"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnDeviceRemovedEventCallback">
            <summary>
            Handles the event related to the removal of a currently open device.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnDeviceOpenedEventCallback">
            <summary>
            Handles the event related to a device being open.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnDeviceClosedEventCallback">
            <summary>
            Handles the event related to a device being closed.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnGrabbingStartedEventCallback">
            <summary>
            Handles the event related to the image provider executing grabbing.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnImageReadyEventCallback">
            <summary>
            Handles the event related to an image having been taken and waiting for processing.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerPylon.OnGrabbingStoppedEventCallback">
            <summary>
            Handles the event related to the image provider having stopped grabbing.
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBaslerPylon.DeviceId">
            <summary>
            Identificador interno de la cámara
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.MJPEGSource">
            <summary>
            MJPEGSource - MJPEG stream support
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.IVideoSource">
            <summary>
            IVideoSource interface
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IVideoSource.Start">
            <summary>
            Start receiving video frames
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IVideoSource.SignalToStop">
            <summary>
            Stop receiving video frames
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IVideoSource.WaitForStop">
            <summary>
            Wait for stop
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.IVideoSource.Stop">
            <summary>
            Stop work
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.IVideoSource.NewFrame">
            <summary>
            New frame event - notify client about the new frame
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.IVideoSource.OnCameraError">
            <summary>
            Error en la adquisición
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.VideoSource">
            <summary>
            Video source property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.Login">
            <summary>
            Login property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.Password">
            <summary>
            Password property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.FramesReceived">
            <summary>
            FramesReceived property
            get number of frames the video source received from the last
            access to the property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.BytesReceived">
            <summary>
            BytesReceived property
            get number of bytes the video source received from the last
            access to the property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.UserData">
            <summary>
            UserData property
            allows to associate user data with an object
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.Running">
            <summary>
            Get state of video source
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.IVideoSource.ReadTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource.bufSize">
            <summary>
            Tamaño del buffer
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource.readSize">
            <summary>
            Tamaño de la lectura
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource.thread">
            <summary>
            Thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource.stopEvent">
            <summary>
            Evento de stop del thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource.reloadEvent">
            <summary>
            Evento de recarga del thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource.Source">
            <summary>
            Cadena de conexión con el origen del video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._Login">
            <summary>
            Usuario
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._Password">
            <summary>
            Constraseña
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._FramesReceived">
            <summary>
            Frames
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._BytesReceived">
            <summary>
            Bytes recibidos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._UserData">
            <summary>
            Datos del usuario
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._ReadTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.MJPEGSource._SeparateConnectionGroup">
            <summary>
            Uso de grupo de conexión separada
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.Start">
            <summary>
            Start work
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.SignalToStop">
            <summary>
            Signal thread to stop work
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.WaitForStop">
            <summary>
            Wait for thread stop
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.Stop">
            <summary>
            Abort thread
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.WorkerThread">
            <summary>
            Thread entry point
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.Free">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.MJPEGSource.LanzarError(System.Exception)">
            <summary>
            Lanza el evetno de error
            </summary>
            <param name="exception"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.VideoSource">
            <summary>
            VideoSource property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.Login">
            <summary>
            Login property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.Password">
            <summary>
            Password property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.FramesReceived">
            <summary>
            FramesReceived property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.BytesReceived">
            <summary>
            BytesReceived property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.UserData">
            <summary>
            UserData property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.Running">
            <summary>
            Get state of the video source thread
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.ReadTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.MJPEGSource.SeparateConnectionGroup">
            <summary>
            SeparateConnectioGroup property indicates to open WebRequest in separate connection group
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.MJPEGSource.NewFrame">
            <summary>
            Evento de nuevo frame
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.MJPEGSource.OnCameraError">
            <summary>
            Error de adquisición
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraWDM">
            <summary>
            Clase que implementa las funciones de manejo de la dispositivo capturador genérico
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraWDM.Dispostivo">
            <summary>
            Dirección URL original
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraWDM.VideoSource">
            <summary>
            Fuente de video
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.ConectarInterno(System.Boolean)">
            <summary>
            Se toma el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.DesconectarInterno(System.Boolean)">
            <summary>
            Se deja el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.StartInterno">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.StopInterno">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.SnapInterno">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.ImagenAdquirida(System.Object,Orbita.VA.Hardware.CameraEventArgs)">
            <summary>
            Evento de recepción de nueva imagen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraWDM.ErrorAdquisicion(System.Object,Orbita.VA.Hardware.CameraErrorEventArgs)">
            <summary>
            Evento de recepción de nueva imagen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.Properties.Resources">
            <summary>
              Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.TipoOrigenVideo">
            <summary>
            Enumerado con la lista de origenes de video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoOrigenVideo.MJPG">
            <summary>
            Video con formato Motion JPEG
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoOrigenVideo.JPG">
            <summary>
            Secuencia de JPEG
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OPTZBase">
            <summary>
            Clase base para todos los controladores ptz
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZBase._Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZBase._Posicion">
            <summary>
            Listado de valores actuales
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZBase._Habilitado">
            <summary>
            Dispitivo habilitado
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.Inicializar">
            <summary>
            Carga los valores de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.EjecutaMovimiento(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ,System.Double)">
            <summary>
            Ejecuta un movimiento simple de ptz
            </summary>
            <param name="tipo">Tipo de movimiento ptz a ejecutar</param>
            <param name="modo">Modo de movimiento: Absoluto o relativo</param>
            <param name="valor">valor a establecer</param>
            <returns>Verdadero si se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.EjecutaMovimiento(Orbita.VA.Hardware.OMovimientoPTZ,System.Double)">
            <summary>
            Ejecuta un movimiento simple de ptz
            </summary>
            <param name="movimiento">Tipo de movimiento ptz a ejecutar</param>
            <param name="valor">valor a establecer</param>
            <returns>Verdadero si se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.EjecutaMovimiento(Orbita.VA.Hardware.OComandoPTZ)">
            <summary>
            Ejecuta un movimiento simple de ptz
            </summary>
            <param name="comando">Comando del movimiento ptz a ejecutar</param>
            <returns>Verdadero si se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.EjecutaMovimiento(Orbita.VA.Hardware.OComandosPTZ)">
            <summary>
            Ejecuta un movimiento compuesto de ptz
            </summary>
            <param name="valores">Tipos de movimientos y valores</param>
            <returns>Verdadero si se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.ConsultaPosicion">
            <summary>
            Actualiza la posición actual del PTZ
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZBase.ConsultaPosicion(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Actualiza la posición actual de un determinado movimiento PTZ
            </summary>
            <returns>Listado de posiciones actuales</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZBase.Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZBase.Posicion">
            <summary>
            Listado de valores actuales
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZBase.Habilitado">
            <summary>
            Dispitivo habilitado
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZBase.ComandosPermitidos">
            <summary>
            Obtiene la información de los comandos permitidos por el dispositivo PTZ
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZBase.MovimientosPermitidos">
            <summary>
            Obtiene la información de los movimientos permitidos por el dispositivo PTZ
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OComandosPTZ">
            <summary>
            Listado de parámetros PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.#ctor(Orbita.VA.Hardware.OComandoPTZ[])">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.Add(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ,System.Double)">
            <summary>
            Añade un comando de movimiento
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <param name="modo">Indica si el movimiento es de tipo absoluto o relativo</param>
            <param name="valor">Valor a establecer</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.Add(Orbita.VA.Hardware.OMovimientoPTZ,System.Double)">
            <summary>
            Añade un comando de movimiento
            </summary>
            <param name="movimiento">Tipo de movimiento</param>
            <param name="valor">Valor a establecer</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.Add(Orbita.VA.Hardware.OComandoPTZ)">
            <summary>
            Añade un comando de movimiento
            </summary>
            <param name="comando">Comando a añadir</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.Exists(Orbita.VA.Hardware.OMovimientoPTZ)">
            <summary>
            Indica que el tipo de movimiento ya existe en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Verdadero si el tipo de movimiento ya existe en la lista de comandos</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandosPTZ.Find(Orbita.VA.Hardware.OMovimientoPTZ)">
            <summary>
            Busca el tipo de movimiento en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Información del movimiento</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OComandosPTZ.Item(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ)">
            <summary>
            Propiedad para acceder a un item de la lista
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <param name="modo">Modo de movimiento</param>
            <returns>Comando</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OComandosPTZ.Item(Orbita.VA.Hardware.OMovimientoPTZ)">
            <summary>
            Propiedad para acceder a un item de la lista
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <param name="modo">Modo de movimiento</param>
            <returns>Comando</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OPosicionesPTZ">
            <summary>
            Listado de parámetros PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.#ctor(Orbita.VA.Hardware.OPosicionPTZ[])">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.Add(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,System.Double)">
            <summary>
            Añade un comando de movimiento
            </summary>
            <param name="movimiento">Tipo de movimiento</param>
            <param name="valor">Valor a establecer</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.Add(Orbita.VA.Hardware.OPosicionPTZ)">
            <summary>
            Añade un comando de movimiento
            </summary>
            <param name="posicion">Comando a añadir</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.Exists(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Indica que el tipo de movimiento ya existe en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Verdadero si el tipo de movimiento ya existe en la lista de comandos</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.Find(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Busca el tipo de movimiento en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Información del movimiento</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionesPTZ.GetListaTiposMovimientosPTZ">
            <summary>
            Lista los tipos de movimientos PTZs del comando
            </summary>
            <returns>Lista los tipos de movimientos PTZs del comando</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OPosicionesPTZ.Item(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Propiedad para acceder a un item de la lista
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <returns>Posicion</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OMovimientosPTZ">
            <summary>
            Listado de parámetros PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientosPTZ.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientosPTZ.#ctor(Orbita.VA.Hardware.OMovimientoPTZ[])">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientosPTZ.Add(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ)">
            <summary>
            Añade un movimiento
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <param name="modo">Modo de movimiento</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientosPTZ.Add(Orbita.VA.Hardware.OMovimientoPTZ)">
            <summary>
            Añade un movimiento
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <param name="modo">Modo de movimiento</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientosPTZ.Exists(Orbita.VA.Hardware.OMovimientoPTZ)">
            <summary>
            Indica que el tipo de movimiento ya existe en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Verdadero si el tipo de movimiento ya existe en la lista de comandos</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientosPTZ.Find(Orbita.VA.Hardware.OMovimientoPTZ)">
            <summary>
            Busca el tipo de movimiento en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Información del movimiento</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OTiposMovimientosPTZ">
            <summary>
            Listado de parámetros PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTiposMovimientosPTZ.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTiposMovimientosPTZ.#ctor(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ[])">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTiposMovimientosPTZ.Add(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Añade un movimiento
            </summary>
            <param name="tipo">Tipo de movimiento</param>
            <param name="modo">Modo de movimiento</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OTiposMovimientosPTZ.Exists(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Indica que el tipo de movimiento ya existe en la lista de comandos
            </summary>
            <param name="movimiento">Tipo de movimiento a buscar</param>
            <returns>Verdadero si el tipo de movimiento ya existe en la lista de comandos</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OComandoPTZ">
            <summary>
            Estructura que contiene un comando de movimiento PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OComandoPTZ.Movimiento">
            <summary>
            Movimiento PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OComandoPTZ.Valor">
            <summary>
            Valor del movimiento PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandoPTZ.#ctor(Orbita.VA.Hardware.OMovimientoPTZ,System.Double)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OComandoPTZ.#ctor(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ,System.Double)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OPosicionPTZ">
            <summary>
            Estructura que contiene una posicion PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPosicionPTZ.Tipo">
            <summary>
            Tipo de movimiento PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPosicionPTZ.Valor">
            <summary>
            Valor del movimiento PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPosicionPTZ.#ctor(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,System.Double)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OMovimientoPTZ">
            <summary>
            Estructura que contiene un movimiento PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMovimientoPTZ.Tipo">
            <summary>
            Tipo de movimiento PTZ
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMovimientoPTZ.Modo">
            <summary>
            Modo de movimiento PTZ
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMovimientoPTZ.#ctor(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OEnumTipoMovimientoPTZ">
            <summary>
            Enumerado de todos los movimientos del ptz
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoMovimientoPTZ.Pan">
            <summary>
            Movimiento de giro
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoMovimientoPTZ.Tilt">
            <summary>
            Movimiento de cabeceo
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoMovimientoPTZ.Zoom">
            <summary>
            Zoom
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoMovimientoPTZ.Iris">
            <summary>
            Control de iris
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoMovimientoPTZ.Focus">
            <summary>
            Control del enfoque
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OEnumModoMovimientoPTZ">
            <summary>
            Indica si el valor a establecer en el movimiento es aboluto o relativo
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumModoMovimientoPTZ.Absoluto">
            <summary>
            Movimiento absoluto
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumModoMovimientoPTZ.Relativo">
            <summary>
            Movimiento relativo
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.CaptureDevice">
            <summary>
            CaptureDevice - capture video from local device
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.source">
            <summary>
            Cadena de conexión con el origen del video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.userData">
            <summary>
            Datos del usuario
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.framesReceived">
            <summary>
            Frames
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.thread">
            <summary>
            Thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.stopEvent">
            <summary>
            Evento de stop del thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.readTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.Start">
            <summary>
            Start work
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.SignalToStop">
            <summary>
            Signal thread to stop work
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.WaitForStop">
            <summary>
            Wait for thread stop
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.Stop">
            <summary>
            Abort thread
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.WorkerThread">
            <summary>
            Thread entry point
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.Free">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.ReadTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.CaptureDevice.NewFrame">
            <summary>
            Evento de nuevo frame
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.CaptureDevice.OnCameraError">
            <summary>
            Error de adquisición
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.VideoSource">
            <summary>
            VideoSource property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.Login">
            <summary>
            Login property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.Password">
            <summary>
            Password property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.FramesReceived">
            <summary>
            FramesReceived property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.BytesReceived">
            <summary>
            BytesReceived property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.UserData">
            <summary>
            UserData property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.Running">
            <summary>
            Get state of the video source thread
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.CaptureDevice.Grabber">
            <summary>
            Grabber
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.Grabber.parent">
            <summary>
            Dispositivo contenedor del grabber
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.Grabber.width">
            <summary>
            Ancho, Alto de la imagen
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CaptureDevice.Grabber.height">
            <summary>
            Ancho, Alto de la imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.Grabber.#ctor(Orbita.VA.Hardware.CaptureDevice)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.Grabber.SampleCB(System.Double,System.IntPtr)">
            <summary>
            Ejemplo de CallBack
            </summary>
            <param name="SampleTime"></param>
            <param name="pSample"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.CaptureDevice.Grabber.BufferCB(System.Double,System.IntPtr,System.Int32)">
            <summary>
            Callback method that receives a pointer to the sample buffer
            </summary>
            <param name="SampleTime"></param>
            <param name="pBuffer"></param>
            <param name="BufferLen"></param>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.Grabber.Width">
            <summary>
            Width property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.CaptureDevice.Grabber.Height">
            <summary>
            Height property
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.AppBD">
            <summary>
            Clase estática que contiene llamadas a los procedimiento almacenados en la base de datos
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetCamaras">
            <summary>
            Consulta las cámaras del sistema
            </summary>
            <returns>DataTable con los códigos de las cámaras existentes en el sistema</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetCamara(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Consulta la información de una determinada cámara
            </summary>
            <returns>DataTable con toda la información de una determinada cámara</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetCamaraBBDD(System.String)">
            <summary>
            Consulta la información de una determinada cámara
            </summary>
            <returns>DataTable con toda la información de una determinada cámara</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetCamaraXML(System.String)">
            <summary>
            Consulta la información de una determinada cámara
            </summary>
            <returns>DataTable con toda la información de una determinada cámara</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetTarjetasIO">
            <summary>
            Consulta las tarjetas IO del sistema
            </summary>
            <returns>DataTable con los códigos de las tarjetas IO existentes en el sistema</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetTerminalesIO(System.String)">
            <summary>
            Consulta los terminales IO de una determinada tarjeta IO
            </summary>
            <returns>DataTable con los terminales IO  de una determinada tarjeta IO</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetTarjetaIO(System.String)">
            <summary>
            Consulta la información de una determinada tarjeta IO
            </summary>
            <returns>DataTable con toda la información de una determinada tarjeta IO</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetTerminalIO(System.String,System.String)">
            <summary>
            Consulta la información de un determinado terminal de una tarjeta IO
            </summary>
            <returns>DataTable con toda la información de un determinado terminal de una tarjeta IO</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetAliasVistaHardware(System.String)">
            <summary>
            Consulta el alias de una vista de hardware
            </summary>
            <param name="codVista"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.AppBD.GetTerminalesIO_EscrituraSCED(System.String,System.String)">
            <summary>
            Consulta la información de todos los terminales que están vinculados a cierto terminal de escritura
            </summary>
            <returns>DataTable con los terminales IO  de una determinada tarjeta IO</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OIO_SCED">
            <summary>
            Clase que implementa las funciones para el control de Entradas/Salidas del SCED
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTarjetaIOBase">
            <summary>
            Clase base para todos los módulos de EntradaSalida
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Codigo">
            <summary>
            Código identificativo de la tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Nombre">
            <summary>
            Nombre identificativo de la tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Descripcion">
            <summary>
            Descripción de la tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._TipoTarjetaIO">
            <summary>
            Tipo de tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Fabricante">
            <summary>
            Descripción del fabricante de la tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Modelo">
            <summary>
            Descripción del modelo de la tarjeta de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._ListaTerminales">
            <summary>
            Lista de todos los terminales de la tarjeta de IO
            </summary>              
        </member>
        <member name="F:Orbita.VA.Hardware.OTarjetaIOBase._Existe">
            <summary>
            Indica que se ha podido acceder al módulo con éxito
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTarjetaIOBase.#ctor(System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTarjetaIOBase.Inicializar">
            <summary>
            Método a heredar donde se conecta y se configura la tarjeta de IO
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTarjetaIOBase.Finalizar">
            <summary>
            Método a heredar donde se desconecta y se libera la tarjeta de IO
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTarjetaIOBase.Start">
            <summary>
            Comienza el hardware
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OTarjetaIOBase.Stop">
            <summary>
            Para el hardware
            </summary>
            <returns></returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Codigo">
            <summary>
            Código identificativo de la tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Nombre">
            <summary>
            Nombre identificativo de la tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Descripcion">
            <summary>
            Descripción de la tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.TipoHardware">
            <summary>
            Tipo de hardware
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.TipoTarjetaIO">
            <summary>
            Tipo de tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Fabricante">
            <summary>
            Descripción del fabricante de la tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Modelo">
            <summary>
            Descripción del modelo de la tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.ListaTerminales">
            <summary>
            Lista de todos los terminales de la tarjeta de IO
            </summary>              
        </member>
        <member name="P:Orbita.VA.Hardware.OTarjetaIOBase.Existe">
            <summary>
            Indica que se ha podido acceder al módulo con éxito
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_SCED._Valido">
            <summary>
            Si están o no configurados los terminales
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_SCED.Servidor">
            <summary>
            Servidor de comunicaciones.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_SCED._ServidorSced">
            <summary>
            Dirección del servidor SCED
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_SCED._PuertoRemoto">
            <summary>
            Número de puerto remoto
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="codHardware">Código del hardware</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.Inicializar">
            <summary>
            Método a heredar donde se conecta y se configura la tarjeta de IO
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.Finalizar">
            <summary>
            Método a heredar donde se conecta y se configura la tarjeta de IO
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.Desconectar">
            <summary>
            Desconectar del servidor vía Remoting.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.Conectar">
            <summary>
            Conectar al servidor vía Remoting.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.Conectar(System.Boolean)">
            <summary>
            Conectar al servidor vía Remoting.
            </summary>
            <param name="estado">Estado de conexión.</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.eventWrapper_OrbitaCambioDato(Orbita.Utiles.OEventArgs)">
            <summary>
            Evento de cambio de dato.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_SCED.eventWrapper_OrbitaComm(Orbita.Utiles.OEventArgs)">
            <summary>
            Evento de comunicaciones.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.OIO_SCED.ServidorSced">
            <summary>
            Dirección del servidor SCED
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OIO_SCED.PuertoRemoto">
            <summary>
            Número de puerto remoto
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTerminalIOSCED">
            <summary>
            Terminal del SCED
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTerminalIOBase">
            <summary>
            Clase que simboliza los terminales de Entrada y/o Salida de la tarjeta
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Codigo">
            <summary>
            Código identificativo del terminal de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._CodTarjeta">
            <summary>
            Código identificativo de la tarjeta a la que pertenece el terminal de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Nombre">
            <summary>
            Nombre identificativo del terminal de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Descripcion">
            <summary>
            Descripción del terminal de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._TipoTerminalIO">
            <summary>
            Tipo del terminal de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._CodVariable">
            <summary>
            Código de la variable asociada
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Numero">
            <summary>
            Número interno del terminal
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Valor">
            <summary>
            Valor del terminal
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._TipoDato">
            <summary>
            Tipo de datos del valor del terminal
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBase._Existe">
            <summary>
            Indica que se ha podido acceder al módulo con éxito
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.#ctor(System.String,System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.SuscribirAVariable">
            <summary>
            Crea la suscripción a la variable
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.EliminarSuscripcionAVariable">
            <summary>
            Elimina la suscripción a la variable
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.EstablecerValorVariable">
            <summary>
            Establece el valor de la variable
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.Inicializar">
            <summary>
            Método a heredar donde se inicializan los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.Finalizar">
            <summary>
            Método a heredar donde se inicializan los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.LeerEntrada">
            <summary>
            Lectura de la entrada física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.EscribirEntrada(System.String,System.Object)">
            <summary>
            Simulación de la escritura de la entrada física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.EscribirSalida(System.String,System.Object)">
            <summary>
            Escritura de la salida física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBase.LeerSalida">
            <summary>
            Lectura de la salida física
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Codigo">
            <summary>
            Código identificativo del terminal de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.CodTarjeta">
            <summary>
            Código identificativo de la tarjeta a la que pertenece el terminal de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Nombre">
            <summary>
            Nombre identificativo del terminal de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Descripcion">
            <summary>
            Descripción del terminal de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Habilitado">
            <summary>
            Habilita o deshabilita el funcionamiento
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.TipoTerminalIO">
            <summary>
            Tipo de tarjeta de IO
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.CodVariable">
            <summary>
            Código de la variable asociada
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Numero">
            <summary>
            Número interno del terminal
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Valor">
            <summary>
            Valor del terminal
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.TipoDato">
            <summary>
            Tipo de datos del valor del terminal
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBase.Existe">
            <summary>
            Indica que se ha podido acceder al módulo con éxito
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED.CodigoVariableSCED">
            <summary>
            Código de la variable del SCED contra la que trabaja el terminal
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED.Servidor">
            <summary>
            Servidor de comunicación
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED.IdDispositivo">
            <summary>
            Información del Dispositivo
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED.TipoDispositivo">
            <summary>
            Tipo de dispositivo controlado por el SCED
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED.EscrituraInmediata">
            <summary>
            Indica que la escritura del valor se ha de producir inmediatamente al cambio del valor de la variable
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED.ProcedeEventoCambio">
            <summary>
            Nos indica si el cambio de valor procede del evento al cambio para en ese caso no realizar escrituras en los delegados
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.#ctor(System.String,System.String,Orbita.VA.Hardware.OEnumTipoDispositivoSCED)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.SCEDAFormatoCorrecto(System.Object,Orbita.VA.Comun.OEnumTipoDato)">
            <summary>
            Convierte el string devuelto por el servidor de sced al formato correcto de trabajo
            </summary>
            <param name="valorSCED"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.FormatoCorrectoASCED(System.Object,Orbita.VA.Comun.OEnumTipoDato)">
            <summary>
            Convierte el string devuelto por el servidor de sced al formato correcto de trabajo
            </summary>
            <param name="valorObj"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.LeerEntrada(Orbita.Utiles.OEventArgs)">
            <summary>
            Trata el cambio de valor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.ValorFormateado">
            <summary>
            Devuelve el valor listo para ser enviado al SCED
            </summary>
            <param name="valorObj"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.Inicializar(Orbita.Comunicaciones.IOCommRemoting)">
            <summary>
            Método a heredar donde se inicializan los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.EscribirEntrada(System.String,System.Object)">
            <summary>
            Simulación de la escritura de la entrada física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.EscribirSalida(System.String,System.Object)">
            <summary>
            Escritura de la salida
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED.LeerEntrada">
            <summary>
            lee del OPC.Servidor el valor de la variable
            </summary>       
            <param name="variable">variable en la que se escribe el valor</param>
        </member>
        <member name="T:Orbita.VA.Hardware.OTerminalIOSCED_WriteCommand">
            <summary>
            Terminal del SCED para trabajo con texto
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED_WriteCommand.ListaCodigosTerminalesAsociados">
            <summary>
            Lista de códigos de terminales asociados
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOSCED_WriteCommand.ListaTerminalesAsociados">
            <summary>
            Lista de terminales asociados
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED_WriteCommand.#ctor(System.String,System.String,Orbita.VA.Hardware.OEnumTipoDispositivoSCED)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED_WriteCommand.Inicializar">
            <summary>
            Inicialización de los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOSCED_WriteCommand.EscribirSalida(System.String,System.Object)">
            <summary>
            Escritura de la salida
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OEnumTipoDispositivoSCED">
            <summary>
            Tipo de dispositivo controlado por el SCED
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoDispositivoSCED.OPC_SimaticNET">
            <summary>
            Servidor OPC de Siemens
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoDispositivoSCED.MCC_EPDISO16">
            <summary>
            Tarjeta Ethernet E/S
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OEnumTipoDispositivoSCED.Orbita">
            <summary>
            Dispositivo para variables internas
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OConectividadIP">
            <summary>
            Clase encargada de comprobar la conectividad con un dispositivo TCP/IP
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OConectividad">
            <summary>
            Clase encargada de comprobar la conectividad con un dispositivo TCP/IP
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividad._Codigo">
            <summary>
            Código identificativo del dispositivo
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividad._Habilitado">
            <summary>
            Habilita o deshabilita el proceso de comprobación de la conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividad._EstadoConexion">
            <summary>
            Estado de la conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividad.OnCambioEstadoConexion">
            <summary>
            Delegado de error de conexión con la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividad.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividad.Start">
            <summary>
            Inicio de la comprobación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividad.Stop">
            <summary>
            Finaliza de la comprobación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividad.ForzarVerificacionConectividad">
            <summary>
            Fuerza una consulta de verificación de la conectividad con el dispositivo TCP/IP
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividad.Codigo">
            <summary>
            Código identificativo del dispositivo
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividad.Habilitado">
            <summary>
            Habilita o deshabilita el proceso de comprobación de la conexión
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividad.EstadoConexion">
            <summary>
            Estado de la conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadIP.TimerComprobacionConexion">
            <summary>
            Timer de comprobación del estado de la conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadIP.Ping">
            <summary>
            Ping utilizado para detectar la conectividad con la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadIP.CronometroTiempoSinRespuestaCamara">
            <summary>
            Cronómetro del tiempo sin respuesta de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadIP.PingEnProceso">
            <summary>
            Indica si hay activo un envío de ping
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadIP._IP">
            <summary>
            Dirección IP de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadIP._IntervaloComprabacion">
            <summary>
            Inervalo entre comprobaciones
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadIP.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadIP.Start">
            <summary>
            Inicio de la comprobación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadIP.Stop">
            <summary>
            Finaliza de la comprobación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadIP.ForzarVerificacionConectividad">
            <summary>
            Fuerza una consulta de verificación de la conectividad con el dispositivo TCP/IP
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadIP.TimerComprobacionConexion_Tick(System.Object,System.EventArgs)">
            <summary>
            Evento del timer de comprobación de la conexión
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadIP.PingCompletedEventHandler(System.Object,System.Net.NetworkInformation.PingCompletedEventArgs)">
            <summary>
            Evento de ping completado
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividadIP.IP">
            <summary>
            Dirección IP de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividadIP.IntervaloComprabacion">
            <summary>
            Inervalo entre comprobaciones
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividadIP.EstadoConexion">
            <summary>
            Estado de la conexión
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OIOManager">
            <summary>
            Clase de acceso estático que contiene la lista de hardware de Entradas Salidas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIOManager.ListaTarjetasIO">
            <summary>
            Lista del hardware de visión funcionando en el sistema
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.Constructor">
            <summary>
            Construye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.Destructor">
            <summary>
            Destruye los objetos
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.Inicializar">
            <summary>
            Carga las propiedades de la base de datos
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.Finalizar">
            <summary>
            Finaliza la ejecución
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.Start(System.String)">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.Stop(System.String)">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.StartAll">
            <summary>
            Comienza una reproducción de todas las cámaras
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OIOManager.StopAll">
            <summary>
            Termina la reproducción de todas las cámaras
            </summary>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OTipoTarjetaIO">
            <summary>
            Enumerado que identifica a los tipos de tarjetas de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTarjetaIO.USB_1024HLS">
            <summary>
            Unidad USB Externa de Measurement Computing
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTarjetaIO.Axis223M">
            <summary>
            Unidad USB Externa de Measurement Computing
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTarjetaIO.SCED">
            <summary>
            Cliente SCED
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTipoTerminalIO">
            <summary>
            Enumerado que identifica a los tipos de terminales de IO
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTerminalIO.EntradaDigital">
            <summary>
            Entrada digital
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTerminalIO.SalidaDigital">
            <summary>
            Salida digital
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTerminalIO.EntradaComando">
            <summary>
            Comando de Entrada
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTipoTerminalIO.SalidaComando">
            <summary>
            Comando de Entrada
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.Clsid">
            <summary>
            DirectShow Classes IDs
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.FilterCategory">
            <summary>
            DirectShow Filter categories
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.MediaType">
            <summary>
            DirectShow media types
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.MediaSubType">
            <summary>
            DirectShow media subtypes
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OVideoFile">
            <summary>
            Clase utilizada para cargar y guardar videos de disco
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile.ThreadConsumidor">
            <summary>
            Thread de consumición de imagenes para guardado en disco
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile.AVIWriter">
            <summary>
            Escritor de ficheros AVI
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile.CronometroDuracion">
            <summary>
            Crónometro de la duración de la grabación
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile.MomentoPrimeraCaptura">
            <summary>
            Momento exacto de la realización de la primera captura del video.
            Se utiliza la diferencia de tiempo de las capturas con respecto a la primera para espaciar el video.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile.MomentoAnteriorCaptura">
            <summary>
            Momento exacto de la última captura realizada.
            Se utiliza la diferencia de tiempo con la última captura para verificar si se cumple el FrameRate.
            Si está por debajo del FrameRate especificado la imagen se desprecia
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._Codigo">
            <summary>
            Código identificativo de la clase.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._Ruta">
            <summary>
            Ruta del archivo a guardar
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._TiempoMaxGrabacion">
            <summary>
            Duración máxima de la grabación
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._Resolucion">
            <summary>
            Indica el tamaño de la imagen a guardar
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._Valido">
            <summary>
            Informa si la grabación está preparda para realizarse
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._FrameInterval">
            <summary>
            Intervalo entre capturas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._BitRate">
            <summary>
            Tasa de transferencia
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVideoFile._Codec">
            <summary>
            Codec utilizado para la codificación del video
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.#ctor(System.String,System.Drawing.Size,System.TimeSpan,System.Double,System.Int32,AForge.Video.FFMPEG.VideoCodec)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.Add(Orbita.VA.Comun.OImage)">
            <summary>
            Añade una imagen a la cola de guardado del video
            </summary>
            <param name="imagen">Imagen a añadir al video</param>
            <returns>Verdadero si se ha podido añadir la imagen al video</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.Start">
            <summary>
            Inicia el guardado del video
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.Stop">
            <summary>
            Finaliza el guardado del video
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.ConsumidorRun(Orbita.VA.Comun.OImage)">
            <summary>
            Ejecución del consumidor
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.Monitorizacion(System.Boolean@)">
            <summary>
            Monitorización de la ejecución
            </summary>
            <param name="finalize"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OVideoFile.FinEjecucion">
            <summary>
            Fin de la ejecución del consumidor
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.Codigo">
            <summary>
            Código identificativo de la clase.
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.Ruta">
            <summary>
            Ruta del archivo a guardar
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.TiempoMaxGrabacion">
            <summary>
            Duración máxima de la grabación
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.Resolucion">
            <summary>
            Indica el tamaño de la imagen a guardar
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.Valido">
            <summary>
            Informa si la grabación está preparda para realizarse
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.FrameInterval">
            <summary>
            Intervalo entre capturas
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.FrameRate">
            <summary>
            Intervalo entre capturas
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.BitRate">
            <summary>
            Tasa de transferencia
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.Codec">
            <summary>
            Codec utilizado para la codificación del video
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OVideoFile.Estado">
            <summary>
            Estado de la ejecución de la grabación de video
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.ModulosHardware">
            <summary>
            Define el conjunto de módulos del sistema
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.Camaras">
            <summary>
            Módulo de funcionamiento base de las cámaras
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.EntradasSalidas">
            <summary>
            Módulo de funcionamiento base de las Entradas/Salidas digitales
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.CamaraBaslerVPro">
            <summary>
            Módulo de funcionamiento de las cámaras Basler Pilot mediante el driver de VisionPro
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.CamaraAxis">
            <summary>
            Módulo de funcionamiento de las cámaras Axis
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.ES_Axis">
            <summary>
            Módulo de funcionamiento del dispositivo de Entradas/Salidas digitales de las cámaras Axis
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.ES_MeasurementComputing">
            <summary>
            Módulo de funcionamiento del dispositivo de Entradas/Salidas digitales USB1024HLS de Measurement Computing
            </summary>                         
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.ES_SCED">
            <summary>
            Módulo de funcionamiento del dispositivo de Entradas/Salidas digitales mediante SCED
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.ImagenGraficosBitmap">
            <summary>
            Módulo de funciones base para las imagenes y gráficos de tipo Bitmap
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.ImagenGraficosVPro">
            <summary>
            Módulo de funciones base para las imagenes y gráficos de tipo VisionPro
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.PTZ">
            <summary>
            Módulo de funcionamiento de los PTZs
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModulosHardware.CamaraBalserPylon">
            <summary>
            Módulo de funcionamiento de las cámaras Basler mediante el driver propio de Pylon
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OPTZAxis">
            <summary>
            Clase base para todos los controladores ptz
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.URLOriginal">
            <summary>
            Dirección URL original
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.URL">
            <summary>
            Dirección URL del video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.IP">
            <summary>
            Dirección IP de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.Puerto">
            <summary>
            Puerto de conexión con la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.Usuario">
            <summary>
            Usuario para el acceso a la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.Contraseña">
            <summary>
            Contraseña para el acceso a la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.TimeOutMs">
            <summary>
            TimeOut de envio de comando
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.Pooling">
            <summary>
            El método de actualización de la posición actual es mediante pooling
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.IntervaloPoolingMs">
            <summary>
            Intervalo de tiempo entre actualizaciones de la posición actual (Expresado en milisegundos)
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OPTZAxis.Thread">
            <summary>
            Thread de consulta
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.TipoMovimientoToString(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ)">
            <summary>
            Devuelve el string utilizado por el CGI para cada movimiento PTZ
            </summary>
            <param name="tipo">Movimiento a convertir a string</param>
            <returns>String del movimiento que será utilizado construir la consulta PTZ</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.ValorMovimientoToString(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ,System.Double)">
            <summary>
            Devuelve el string del valor del movimiento utilizado por el CGI para cada movimiento PTZ
            </summary>
            <param name="tipo">Valor de un movimiento a convertir a string</param>
            <returns>String del valor de un movimiento que será utilizado construir la consulta PTZ</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.TipoMovimientoYValorToString(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ,Orbita.VA.Hardware.OEnumModoMovimientoPTZ,System.Double)">
            <summary>
            Devuelve la cadena de texto conjunta del tipo de movimiento y el valor utilizado por el CGI para cada movimiento PTZ
            </summary>
            <param name="movimientoPTZ">Valor de un movimiento a convertir a string</param>
            <returns>String del valor de un movimiento que será utilizado construir la consulta PTZ</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.StringToPosicion(System.String,System.String)">
            <summary>
            Devuelve una posiciones a partir de la cadena devuelta por el CGI
            </summary>
            <param name="strTipo">Cadena del tipo devuelta por el CGI</param>
            <param name="strValor">Cadena del valor devuelta por el CGI</param>
            <returns>Posiciones</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.StringToPosiciones(System.String)">
            <summary>
            Devuelve una lista de posiciones a partir de la cadena devuelta por el CGI
            </summary>
            <param name="strPosiciones">Cadena devuelta por el CGI</param>
            <returns>lista de posiciones</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.ThreadRun(System.Boolean@)">
            <summary>
            Método de la ejecución del thread
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.Inicializar">
            <summary>
            Carga los valores de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.EjecutaMovimiento(Orbita.VA.Hardware.OComandosPTZ)">
            <summary>
            Ejecuta un movimiento compuesto de ptz
            </summary>
            <param name="valores">Tipos de movimientos y valores</param>
            <returns>Verdadero si se ha ejecutado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.ConsultaPosicion">
            <summary>
            Actualiza la posición actual de un determinado movimiento PTZ
            </summary>
            <returns>Listado de posiciones actuales</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OPTZAxis.ConsultaPosicion(Orbita.VA.Hardware.OEnumTipoMovimientoPTZ)">
            <summary>
            Actualiza la posición actual de un determinado movimiento PTZ
            </summary>
            <returns>Posición actuales</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZAxis.ComandosPermitidos">
            <summary>
            Obtiene la información de los comandos permitidos por el dispositivo PTZ
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OPTZAxis.MovimientosPermitidos">
            <summary>
            Obtiene la información de los movimientos permitidos por el dispositivo PTZ
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OConectividadGigE">
            <summary>
            Clase encargada de comprobar la conectividad con un dispositivo TCP/IP
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadGigE.TimerComprobacionConexion">
            <summary>
            Timer de comprobación del estado de la conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadGigE.CronometroTiempoSinRespuestaCamara">
            <summary>
            Cronómetro del tiempo sin respuesta de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadGigE.FeatureGigeConexion">
            <summary>
            Característica a consultar de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OConectividadGigE._IntervaloComprabacion">
            <summary>
            Inervalo entre comprobaciones
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadGigE.#ctor(System.String,Orbita.VA.Hardware.OGigEIntFeature,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadGigE.Start">
            <summary>
            Inicio de la comprobación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadGigE.Stop">
            <summary>
            Finaliza de la comprobación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadGigE.ForzarVerificacionConectividad">
            <summary>
            Fuerza una consulta de verificación de la conectividad con el dispositivo TCP/IP
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OConectividadGigE.TimerComprobacionConexion_Tick(System.Object,System.EventArgs)">
            <summary>
            Evento del timer de comprobación de la conexión
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividadGigE.IntervaloComprabacion">
            <summary>
            Inervalo entre comprobaciones
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OConectividadGigE.EstadoConexion">
            <summary>
            Estado de la conexión
            </summary>
        </member>
        <member name="T:PylonC.NETSupportLibrary.ImagePylon">
            <summary>
            Imagen de tipo Pylon
            </summary>
        </member>
        <member name="M:PylonC.NETSupportLibrary.ImagePylon.#ctor(System.Int32,System.Int32,System.Byte[],System.Boolean)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="newWidth"></param>
            <param name="newHeight"></param>
            <param name="newBuffer"></param>
            <param name="color"></param>
        </member>
        <member name="T:PylonC.NETSupportLibrary.GrabResultPylon">
            <summary>
            The class GrabResult is used internally to queue grab results.
            </summary>
        </member>
        <member name="T:PylonC.NETSupportLibrary.ImageProvider">
            <summary>
            The ImageProvider is responsible for opening and closing a device, it takes care of the grabbing and buffer handling, 
            it notifies the user via events about state changes, and provides access to GenICam parameter nodes of the device. 
            The grabbing is done in an internal thread. After an image is grabbed the image ready event is fired by the grab 
            thread. The image can be acquired using GetCurrentImage(). After processing of the image it can be released via ReleaseImage.
            The image is then queued for the next grab.
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal">
            <summary>
            Clase que implementa las funciones para el control del módulo de Entradas/Salidas USB-1024HLS de Measurement Computing
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.DaqBoard">
            <summary>
            Driver de la tarjeta
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.TimerScan">
            <summary>
            Timer de escaneo de las entradas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal._BoardNum">
            <summary>
            Número identificativo del módulo
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="codHardware">Código del hardware</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.RellenarListaTerminales(Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt)">
            <summary>
            Rellenamos la lista genérica de terminales del puerto correspondiente
            </summary>
            <param name="terminalPuerto"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.ProcesarError(MccDaq.ErrorInfo,System.String)">
            <summary>
            Realiza las acciones oportunas en caso de error de operación de Entradas/Salida
            </summary>
            <param name="error">Valor devuelto por la operación de Entradas/Salidas</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.CrearTerminales">
            <summary>
            Crea los terminales de la tarjeta
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.Inicializar">
            <summary>
            Método a heredar donde se conecta y se configura la tarjeta de IO
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.EventoScan(System.Object,System.EventArgs)">
            <summary>
            Evento del timer de ejecución
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.OIO_MeasurementComputingUniversal.BoardNum">
            <summary>
            Número identificativo del módulo
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OIO_USB1024HLS">
            <summary>
            Clase que implementa las funciones para el control del módulo de Entradas/Salidas USB-1024HLS de Measurement Computing
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_USB1024HLS.PuertoA">
            <summary>
            PuertoA
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_USB1024HLS.PuertoB">
            <summary>
            PuertoB
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_USB1024HLS.PuertoCL">
            <summary>
            PuertoCL
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_USB1024HLS.PuertoCH">
            <summary>
            PuertoCH
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_USB1024HLS.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="codHardware">Código del hardware</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_USB1024HLS.CrearTerminales">
            <summary>
            Crea los terminales de la tarjeta
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OIO_EPDISO16">
            <summary>
            Clase que implementa las funciones para el control del módulo de Entradas/Salidas E-PDISO16 de Measurement Computing
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_EPDISO16.PuertoI">
            <summary>
            PuertoA
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OIO_EPDISO16.PuertoO">
            <summary>
            PuertoB
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_EPDISO16.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="codHardware">Código del hardware</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OIO_EPDISO16.CrearTerminales">
            <summary>
            Crea los terminales de la tarjeta
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt">
            <summary>
            Terminal de tipo ushort que simboliza un puerto entero
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.PortType">
            <summary>
            Puerto físico al que hace referencia
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.PortDirection">
            <summary>
            Tipo de puerto según su acción de entrada o de salida
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.NumBits">
            <summary>
            Número de bits que contiene el puerto
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.DaqBoard">
            <summary>
            Driver de la tarjeta
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.#ctor(System.String,System.String,MccDaq.DigitalPortType,System.Int16)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.Inicializar(MccDaq.MccBoard)">
            <summary>
            Método a heredar donde se inicializan los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.LeerEntrada">
            <summary>
            Lectura de la entrada física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.EscribirSalida(System.String,System.Object)">
            <summary>
            Escritura de la salida física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.ComprobarValor(System.Object,System.UInt16@)">
            <summary>
            Se comprueba que el valor a escribir sea del tipo correcto
            </summary>
            <param name="valor">Valor a escribir</param>
            <param name="ushortValor">Valor a escribir del tipo correcto</param>
            <returns>Devuelve verdadero si el valor a escribir es válido</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt.Valor">
            <summary>
            Valor del terminal
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit">
            <summary>
            Terminal de tipo bit que simboliza un bit de un puerto
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.PortType">
            <summary>
            Puerto físico al que hace referencia
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.DaqBoard">
            <summary>
            Driver de la tarjeta
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.TerminalPerteneciente">
            <summary>
            Terminal de tipo ushort al que pertenece
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.#ctor(System.String,System.String,Orbita.VA.Hardware.OTerminalIOMeasurementComputingInt)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.Inicializar(MccDaq.MccBoard)">
            <summary>
            Método a heredar donde se inicializan los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.LeerEntrada">
            <summary>
            Lectura de la entrada física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.LeerEntrada(System.UInt16)">
            <summary>
            Posteriormente a la lectura del entero del puerto se acutaliza el valor de la entrada del bit
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.LeerEntrada(System.Boolean)">
            <summary>
            Posteriormente a la lectura del bit del puerto se acutaliza el valor a la variable
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.EscribirSalida(System.String,System.Object)">
            <summary>
            Escritura de la salida física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.EscribirSalida(System.UInt16)">
            <summary>
            Escritura de la salida física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.ComprobarValor(System.Object,System.Boolean@)">
            <summary>
            Se comprueba que el valor a escribir sea del tipo correcto
            </summary>
            <param name="valor">Valor a escribir</param>
            <param name="boolValor">Valor a escribir del tipo correcto</param>
            <returns>Devuelve verdadero si el valor a escribir es válido</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOMeasurementComputingBit.Valor">
            <summary>
            Valor del terminal
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.DigitalIO">
            <summary>
            Clase para el manejo de los módulos de Measurement Computing
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OImagenVisionPro">
            <summary>
            Imagen de tipo VisionPro de Cognex
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.#ctor(System.Object)">
            <summary>
            Constructor de la clase que además se encarga de liberar la memoria de la variable que se le pasa por parámetro
            </summary>
            <param name="imagenALiberar">Variable que se desea liberar de memoria</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.#ctor(System.String,System.Object)">
            <summary>
            Constructor de la clase que además se encarga de liberar la memoria de la variable que se le pasa por parámetro
            </summary>
            <param name="imagenALiberar">Variable que se desea liberar de memoria</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.Dispose(System.Boolean)">
            <summary>
            Método a implementar en las clases hijas. Elimina la memoria asignada por el objeto.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.Clone">
            <summary>
            Clonado de la imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.EsValida">
            <summary>
            Método a implementar en las clases hijas que indica que la imagen es válida
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.Guardar(System.String)">
            <summary>
            Método a implementar en las clases hijas para guardar la imagen en un fichero de disco
            </summary>
            <param name="ruta">Ruta donde se ha de guardar la imagen</param>
            <returns>Verdadero si la ruta donde se ha de guardar el fichero es válida</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.Cargar(System.String)">
            <summary>
            Método a implementar en las clases hijas para cargar la imagen de un fichero de disco
            </summary>
            <param name="ruta">Ruta de donde se ha de cargar la imagen</param>
            <returns>Verdadero si el fichero que se ha de cargar existe</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.ConvertFromBitmap(System.Drawing.Bitmap)">
            <summary>
            Convierte la imagen de tipo bitmap al tipo actual
            </summary>
            <param name="imagenBitmap">Imagen de tipo bitmap desde el cual se va a importar la imagen</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.ConvertToBitmap">
            <summary>
            Convierte la imagen actual al tipo genérico de imagen de tipo bitmap
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.EscalarImagen(Orbita.VA.Comun.OImage,System.Int32,System.Int32)">
            <summary>
            Sirve para reducir la imagen 
            </summary>
            <param name="img">Imagen a reducir</param>
            <param name="width">Ancho de la imagen resultado</param>
            <param name="height">Alto de la imagen resultado</param>
            <returns>Imagen reducida</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.ToArray(System.Drawing.Imaging.ImageFormat,System.Double)">
            <summary>
            Método que realiza el empaquetado de un objeto para ser enviado por remoting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.FromArray(System.Byte[])">
            <summary>
            Método que realiza el desempaquetado de un objeto recibido por remoting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OImagenVisionPro.Nueva">
            <summary>
            Crea una nueva imagen de la misma clase
            </summary>
            <returns>Nueva instancia de la misma clase de imagen</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OImagenVisionPro.Image">
            <summary>
            Propieadad a heredar donde se accede a la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OImagenVisionPro.Width">
            <summary>
            Tamaño en X de la imagen
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OImagenVisionPro.Height">
            <summary>
            Tamaño en Y de la imagen
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OVisionProGrafico">
            <summary>
            Grafico de tipo CogGraphicCollection de Cognex
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.#ctor(System.Object)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.#ctor(Orbita.VA.Comun.OImage)">
            <summary>
            Constructor de la clase que además se encarga de liberar la memoria de la variable que se le pasa por parámetro
            </summary>
            <param name="imagenALiberar">Variable que se desea liberar de memoria</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.Desplaza(System.Int32,System.Int32)">
            <summary>
            Desplaza todo el conjunto de gráficos en X y en Y
            </summary>
            <param name="X">Valor de desplazamiento en X</param>
            <param name="Y">Valor de desplazamiento en Y</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.Dispose">
            <summary>
            Elimina la memoria asignada por el objeto.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.Clone">
            <summary>
            Clonado del gráfico
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.EsValida">
            <summary>
            Método a implementar en las clases hijas que indica que la imagen es válida
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.Guardar(System.String)">
            <summary>
            Método a implementar en las clases hijas para guardar la imagen en un fichero de disco
            </summary>
            <param name="ruta">Ruta donde se ha de guardar la imagen</param>
            <returns>Verdadero si la ruta donde se ha de guardar el fichero es válida</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProGrafico.Cargar(System.String)">
            <summary>
            Método a implementar en las clases hijas para cargar la imagen de un fichero de disco
            </summary>
            <param name="ruta">Ruta de donde se ha de cargar la imagen</param>
            <returns>Verdadero si el fichero que se ha de cargar existe</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OVisionProGrafico.Grafico">
            <summary>
            Propieadad a heredar donde se accede a la imagen
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OVisionProImageExtras">
            <summary>
            Clase que almacena información extra de la imagen, necesaria para guardar y cargar de disco
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVisionProImageExtras.PixelFromRootTransform">
            <summary>
            Transformación del espacio de pixel al espacio raiz
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVisionProImageExtras.CoordinateSpaceTree">
            <summary>
            Conjunto de sistemas de coordenadas utilizados en la imagen
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVisionProImageExtras.#ctor(Cognex.VisionPro.ICogTransform2D,Cognex.VisionPro.CogCoordinateSpaceTree)">
            <summary>
            Constructor de la clase
            </summary>
            {
        </member>
        <member name="T:Orbita.VA.Hardware.ByteArrayUtils">
            <summary>
            Some array utilities
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.ByteArrayUtils.Compare(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Check if the array contains needle on specified position
            </summary>
            <param name="array"></param>
            <param name="needle"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.ByteArrayUtils.Find(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Find subarray in array
            </summary>
            <param name="array"></param>
            <param name="needle"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraAxisCGI">
            <summary>
            Clase que implementa las funciones de manejo de la cámara IP
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraIP">
            <summary>
            Clase que implementa las funciones de manejo de la cámara IP
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.URLOriginal">
            <summary>
            Dirección URL original
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.URL">
            <summary>
            Dirección URL del video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.IP">
            <summary>
            Dirección IP de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.Puerto">
            <summary>
            Puerto de conexión con la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.Usuario">
            <summary>
            Usuario para el acceso a la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.Contraseña">
            <summary>
            Contraseña para el acceso a la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.VideoSource">
            <summary>
            Fuente de video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraIP.IntervaloComprobacionConectividadMS">
            <summary>
            Inervalo entre comprobaciones de conectividad con la cámara IP
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.ConectarInterno(System.Boolean)">
            <summary>
            Se toma el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.DesconectarInterno(System.Boolean)">
            <summary>
            Se deja el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.StartInterno">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.StopInterno">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.SnapInterno">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.CrearConectividad">
            <summary>
            Crea el objeto de conectividad adecuado para la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.ImagenAdquirida(System.Object,Orbita.VA.Hardware.CameraEventArgs)">
            <summary>
            Evento de recepción de nueva imagen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.ErrorAdquisicion(System.Object,Orbita.VA.Hardware.CameraErrorEventArgs)">
            <summary>
            Evento de recepción de nueva imagen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraIP.OnCambioEstadoConectividadCamara(System.String,Orbita.VA.Hardware.EstadoConexion,Orbita.VA.Hardware.EstadoConexion)">
            <summary>
            Evento de error en la conexión con la cámara
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraAxisCGI.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>       
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraAxisCGI.StartInterno">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraAxisCGI.StopInterno">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraAxisCGI.SnapInterno">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils">
            <summary>
            Windows API functions and structures
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVISaveOptions(System.IntPtr,Orbita.VA.Hardware.Win32Utils.AVICOMPRESSOPTIONS@,System.IntPtr)">
             <summary>
             Version of AVISaveOptions for one stream only
            
             I don't find a way to interop AVISaveOptions more likely, so the
             usage of original version is not easy. The version makes it more
             usefull.
             </summary>
             <param name="stream"></param>
             <param name="opts"></param>
             <param name="owner"></param>
             <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIFileInit">
            <summary>
            Initialize the AVIFile library
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIFileExit">
            <summary>
            Exit the AVIFile library 
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIFileOpen(System.IntPtr@,System.String,Orbita.VA.Hardware.Win32Utils.OpenFileMode,System.IntPtr)">
            <summary>
            Open an AVI file
            </summary>
            <param name="ppfile"></param>
            <param name="szFile"></param>
            <param name="mode"></param>
            <param name="pclsidHandler"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIFileRelease(System.IntPtr)">
            <summary>
            Release an open AVI stream
            </summary>
            <param name="pfile"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIFileGetStream(System.IntPtr,System.IntPtr@,System.Int32,System.Int32)">
            <summary>
            Get address of a stream interface that is associated with a specified AVI file
            </summary>
            <param name="pfile"></param>
            <param name="ppavi"></param>
            <param name="fccType"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIFileCreateStream(System.IntPtr,System.IntPtr@,Orbita.VA.Hardware.Win32Utils.AVISTREAMINFO@)">
            <summary>
            Create a new stream in an existing file and creates an interface to the new stream
            </summary>
            <param name="pfile"></param>
            <param name="ppavi"></param>
            <param name="psi"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamRelease(System.IntPtr)">
            <summary>
            Release an open AVI stream
            </summary>
            <param name="pavi"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamSetFormat(System.IntPtr,System.Int32,Orbita.VA.Hardware.Win32Utils.BITMAPINFOHEADER@,System.Int32)">
            <summary>
            Set the format of a stream at the specified position
            </summary>
            <param name="pavi"></param>
            <param name="lPos"></param>
            <param name="lpFormat"></param>
            <param name="cbFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamStart(System.IntPtr)">
            <summary>
            Get the starting sample number for the stream
            </summary>
            <param name="pavi"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamLength(System.IntPtr)">
            <summary>
            Get the length of the stream
            </summary>
            <param name="pavi"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamInfo(System.IntPtr,Orbita.VA.Hardware.Win32Utils.AVISTREAMINFO@,System.Int32)">
            <summary>
            Obtain stream header information
            </summary>
            <param name="pavi"></param>
            <param name="psi"></param>
            <param name="lSize"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamGetFrameOpen(System.IntPtr,Orbita.VA.Hardware.Win32Utils.BITMAPINFOHEADER@)">
            <summary>
            Prepare to decompress video frames from the specified video stream
            </summary>
            <param name="pavi"></param>
            <param name="lpbiWanted"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamGetFrameOpen(System.IntPtr,System.Int32)">
            <summary>
            Prepare to decompress video frames from the specified video stream
            </summary>
            <param name="pavi"></param>
            <param name="lpbiWanted"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamGetFrameClose(System.IntPtr)">
            <summary>
            Releases resources used to decompress video frames
            </summary>
            <param name="pget"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamGetFrame(System.IntPtr,System.Int32)">
            <summary>
            Return the address of a decompressed video frame
            </summary>
            <param name="pget"></param>
            <param name="lPos"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIStreamWrite(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Write data to a stream
            </summary>
            <param name="pavi"></param>
            <param name="lStart"></param>
            <param name="lSamples"></param>
            <param name="lpBuffer"></param>
            <param name="cbBuffer"></param>
            <param name="dwFlags"></param>
            <param name="plSampWritten"></param>
            <param name="plBytesWritten"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVISaveOptions(System.IntPtr,System.Int32,System.Int32,System.IntPtr[],System.IntPtr[])">
            <summary>
            Retrieve the save options for a file and returns them in a buffer
            </summary>
            <param name="hwnd"></param>
            <param name="flags"></param>
            <param name="streams"></param>
            <param name="ppavi"></param>
            <param name="plpOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVISaveOptionsFree(System.Int32,System.IntPtr[])">
            <summary>
            Free the resources allocated by the AVISaveOptions function
            </summary>
            <param name="streams"></param>
            <param name="plpOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.AVIMakeCompressedStream(System.IntPtr@,System.IntPtr,Orbita.VA.Hardware.Win32Utils.AVICOMPRESSOPTIONS@,System.IntPtr)">
            <summary>
            Create a compressed stream from an uncompressed stream and a
            compression filter, and returns the address of a pointer to
            the compressed stream
            </summary>
            <param name="ppsCompressed"></param>
            <param name="psSource"></param>
            <param name="lpOptions"></param>
            <param name="pclsidHandler"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.memcpy(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            memcpy - copy a block of memery
            </summary>
            <param name="dst"></param>
            <param name="src"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.memcpy(System.Int32,System.Int32,System.Int32)">
            <summary>
            memcpy - copy a block of memery
            </summary>
            <param name="dst"></param>
            <param name="src"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.CreateBindCtx(System.Int32,System.Runtime.InteropServices.UCOMIBindCtx@)">
            <summary>
            Supplies a pointer to an implementation of IBindCtx
            </summary>
            <param name="reserved"></param>
            <param name="ppbc"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.Win32Utils.MkParseDisplayName(System.Runtime.InteropServices.UCOMIBindCtx,System.String,System.Int32@,System.Runtime.InteropServices.UCOMIMoniker@)">
            <summary>
            Converts a string into a moniker that identifies
            the object named by the string
            </summary>
            <param name="pbc"></param>
            <param name="szUserName"></param>
            <param name="pchEaten"></param>
            <param name="ppmk"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils.RECT">
            <summary>
            Define the coordinates of the upper-left and
            lower-right corners of a rectangle
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils.AVISTREAMINFO">
            <summary>
            Contains information for a single stream
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils.BITMAPINFOHEADER">
            <summary>
            Contains information about the dimensions and color format of a DIB
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils.AVICOMPRESSOPTIONS">
            <summary>
            Contains information about a stream and how it is compressed and saved
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils.OpenFileMode">
            <summary>
            File access modes
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.Win32Utils.WS">
            <summary>
            window styles
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.FOURCC">
            <summary>
            Clase utilizada para la enumración de los tipos de codecs
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.FOURCC.IntCode">
            <summary>
            Valor entero del código
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.FOURCC.StrCode">
            <summary>
            Cadena de texto del código
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.FOURCC.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.FOURCC.#ctor(System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.FOURCC.mmioFOURCC(System.String)">
            <summary>
            Replacement of mmioFOURCC macros
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.FOURCC.decode_mmioFOURCC(System.Int32)">
            <summary>
            Inverse of mmioFOURCC
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraBaslerVPro">
            <summary>
            Clase que implementa las funciones de manejo de la cámara BaslerVPro
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.FrameGrabbersGigEs">
            <summary>
            Listado de todas las cámaras de tipo GigE
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.PrimeraInstancia">
            <summary>
            Booleano que evita que se construya varias veces el listado de cámaras de tipo GigE
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.FrameGrabber">
            <summary>
            Objeto de cognex para el acceso a la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.Ajustes">
            <summary>
            Acceso a los parámetros internos de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.AcqFifo">
            <summary>
            Buffer fifo de adquisición
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.TimerScan">
            <summary>
            Timer de escaneo de las entradas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.IntervaloComprobacionConectividadMS">
            <summary>
            Inervalo entre comprobaciones de conectividad con la cámara IP
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro.AdquisicionEnProceso">
            <summary>
            Indica que la adquisición está siendo procesada en el momento actual
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraBaslerVPro._DeviceId">
            <summary>
            Identificador interno de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.BuscarCamaraPorNumeroSerie">
            <summary>
            Busca la frame grabber cuyo número de serie coincide con el indicado
            </summary>
            <param name="numeroDeSerie">Número de serie de la cámara a buscar</param>
            <param name="frameGrabber">FrameGrabber encontrado</param>
            <returns>Veradero si se ha encontrado el número de serie</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.VaciarBuffer">
            <summary>
            Vacia el buffer de adquisición
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.Finalizar">
            <summary>
            Finaliza la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.ConectarInterno(System.Boolean)">
            <summary>
            Se toma el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.DesconectarInterno(System.Boolean)">
            <summary>
            Se deja el control de la cámara
            </summary>
            <returns>Verdadero si la operación ha funcionado correctamente</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.StartInterno">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.StopInterno">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.SnapInterno">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.CargarImagenDeDisco(Orbita.VA.Comun.OImage@,System.String)">
            <summary>
            Carga una imagen de disco
            </summary>
            <param name="ruta">Indica la ruta donde se encuentra la fotografía</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.GuardarImagenADisco(System.String)">
            <summary>
            Guarda una imagen en disco
            </summary>
            <param name="ruta">Indica la ruta donde se ha de guardar la fotografía</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.GuardarGraficoADisco(Orbita.VA.Comun.OGrafico,System.String)">
            <summary>
            Guarda un objeto gráfico en disco
            </summary>
            <param name="ruta">Indica la ruta donde se ha de guardar el objeto gráfico</param>
            <returns>Devuelve verdadero si la operación se ha realizado con éxito</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.NuevaImagen">
            <summary>
            Devuelve una nueva imagen del tipo adecuado al trabajo con la cámara
            </summary>
            <returns>Imagen del tipo adecuado al trabajo con la cámara</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.CrearConectividad">
            <summary>
            Crea el objeto de conectividad adecuado para la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.CompleteAcquisition(System.Object,Cognex.VisionPro.CogCompleteEventArgs)">
            <summary>
            Evento de recepción de nueva imagen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.EventoScan(System.Object,System.EventArgs)">
            <summary>
            Evento del timer de ejecución
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraBaslerVPro.OnCambioEstadoConectividadCamara(System.String,Orbita.VA.Hardware.EstadoConexion,Orbita.VA.Hardware.EstadoConexion)">
            <summary>
            Evento de ping completado
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBaslerVPro.DeviceId">
            <summary>
            Identificador interno de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OCamaraBaslerVPro.ImagenActual">
            <summary>
            Propieadad a heredar donde se accede a la imagen
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OGigEFeatures">
            <summary>
            Listado de todas las caracteríticas de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEFeatures.CodCamara">
            <summary>
            Código identificativo de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEFeatures.FrameGrabberGigE">
            <summary>
            Frame grabber asociado a la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEFeatures.GigEFeatureAccess">
            <summary>
            Clase cognex que permite el acceso a los parámetros internos de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEFeatures.AcqFifo">
            <summary>
            Buffer fifo de adquisición
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEFeatures.Color">
            <summary>
            Indica si la cámara es a color o monocromática
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.#ctor(System.String,System.String,Orbita.VA.Comun.OrigenDatos)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.InitializeForCompatibility">
            <summary>
            One of the default features of a JAI CM-*GE series Camara needs
            to be changed before VisionPro can interact with it.
            This function needs to be called before a CogAcqFifo is created.
            </summary>
            <param name="gigEAccess"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.ConfigureROI">
            <summary>
            Configures a GigE area of interesting
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.ConfigureTrigger">
            <summary>
            When using a VisionPro hardware trigger model with JAI CM-*GE 
            series Camaras, you must set the input line to be used 
            for the trigger signal and set the "ExposureMode" 
            ("Trigger Mode" in current JAI Camara documentation) to 
            "EdgePreSelect".
            </summary>
            <param name="gigEAccess">The ICogGigEAccess on which to configure
            the trigger.</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.DesConfigureTrigger">
            <summary>
            When using a VisionPro hardware trigger model with JAI CM-*GE 
            series Camaras, you must set the input line to be used 
            for the trigger signal and set the "ExposureMode" 
            ("Trigger Mode" in current JAI Camara documentation) to 
            "EdgePreSelect".
            </summary>
            <param name="gigEAccess">The ICogGigEAccess on which to configure
            the trigger.</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.StopTrigger">
            <summary>
            Detiene el trigger
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.SetBandwidth">
            <summary>
            When using multiple Camaras, it is possible that the
            total data rate of the Camaras will exceed the bandwidth of the 
            GigE network.  Acquisition can still be successfully performed
            if the data rate of the Camaras is reduced to fit within the 
            available bandwidth.
            The general idea is that if you have an n Camara
            application, you set each Camara's bandwidth to 1/n and the data
            rate will be reduced as needed to allow all Camaras to work
            simultaneously.  See additional comments on the SetBandwidth
            function.
            Note that this code will only work if the Camara supports
            the required GigE Vision registers.  You can discover if these
            are supported by looking over the XML description file for
            the Camara. 
            </summary>
            <param name="gigEAccess"> The ICogGigEAccess on which to set the Bandwidth</param>
            <param name="percentageOfBandwidth"> Percentage of total bandwidth
            which is to be dedicated to this Camara.</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.ConfigureWhiteBalance">
            <summary>
            Configura el balance de blancos de la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.ConfigureExposure">
            <summary>
            Configures a GigE Camara's exposure using the standard
            VisionPro interface.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.Inicializar(Cognex.VisionPro.ICogGigEAccess)">
            <summary>
            Inicialización del acceso a los parámetros de la cámara
            </summary>
            <param name="gigEFeatureAccess"></param>
            <param name="frameGrabberGigE"></param>
            <param name="acqFifo"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.Configurar(Cognex.VisionPro.FGGigE.Implementation.Internal.CogFrameGrabberGigE,Cognex.VisionPro.FGGigE.Implementation.Internal.CogAcqFifoGigE,Orbita.VA.Hardware.TipoColorPixel)">
            <summary>
            Inicialización del acceso a los parámetros de la cámara
            </summary>
            <param name="gigEFeatureAccess"></param>
            <param name="frameGrabberGigE"></param>
            <param name="acqFifo"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.Start">
            <summary>
            Prepara la cámara para la adquisición
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEFeatures.Stop">
            <summary>
            Desprepara la cámara para la adquisición
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.Shutter">
            <summary>
            Tiempo de exposición
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.GainAuto">
            <summary>
            Autoganancia
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.Gain">
            <summary>
            Ganancia
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.BlackLevel">
            <summary>
            Nivel de oscuridad del negro
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.WhiteBalanceRed">
            <summary>
            Componente de rojo del balance de blancos
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.WhiteBalanceGreen">
            <summary>
            Componente de verde del balance de blancos
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.WhiteBalanceBlue">
            <summary>
            Componente de azul del balance de blancos
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.GammaEnable">
            <summary>
            Habilita la corrección gamma
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.Gamma">
            <summary>
            Corrección Gamma
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.AcquisitionFormat">
            <summary>
            Texto indicativo del formato de adquisición de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.TransferFormat">
            <summary>
            Texto indicativo del formato de transferencia de la cámara al PC
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.ImageFormat">
            <summary>
            formato de imagen de trabajo en el PC
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.AcquisitionMode">
            <summary>
            Modo de adquisición (continuo, hardwaretrigger o softwaretrigger)
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.TriggerSource">
            <summary>
            Texto indicativo del origen del trigger de la cámara (Line1, Line2, Software)
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.TriggerOnRisingEdge">
            <summary>
            Indica si el trigger se disparará en el flanco de subida o de bajada
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.AOI">
            <summary>
            Area de la imagen con la que se trabajará
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.LineDebouncerTimeAbs">
            <summary>
            Tiempo antirebote
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OGigEFeatures.Temperature">
            <summary>
            Tiempo antirebote
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OGigEStringFeature">
            <summary>
            Acceso a una característica de la cámara de tipo string
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.ICamFeature">
            <summary>
            Acceso a una característica de la cámara de tipo string
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.ICamFeature.Send">
            <summary>
            Aplica el valor de memoria a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.ICamFeature.Receive">
            <summary>
            Consulta el valor de la cámara y lo guarda en memoria
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEStringFeature.GigEFeatureAccess">
            <summary>
            Clase cognex para el acceso a los parámetros de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEStringFeature.TimeOut">
            <summary>
            TimeOut de envio o recepción
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEStringFeature.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEStringFeature.Inicializar(Cognex.VisionPro.ICogGigEAccess)">
            <summary>
            Inicialización del objeto
            </summary>
            <param name="gigEFeatureAccess"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEStringFeature.Send">
            <summary>
            Aplica el valor de memoria a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEStringFeature.Receive">
            <summary>
            Consulta el valor de la cámara y lo guarda en memoria
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OGigEEnumFeature">
            <summary>
            Acceso a una característica de la cámara de tipo enumerado (aunque internamente trabaja como un string)
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEEnumFeature.GigEFeatureAccess">
            <summary>
            Clase cognex para el acceso a los parámetros de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEEnumFeature.TimeOut">
            <summary>
            TimeOut de envio o recepción
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEEnumFeature.#ctor(System.String,System.String[],System.String,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEEnumFeature.Inicializar(Cognex.VisionPro.ICogGigEAccess)">
            <summary>
            Inicialización del objeto
            </summary>
            <param name="gigEFeatureAccess"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEEnumFeature.Send">
            <summary>
            Aplica el valor de memoria a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEEnumFeature.Receive">
            <summary>
            Consulta el valor de la cámara y lo guarda en memoria
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OGigEIntFeature">
            <summary>
            Acceso a una característica de la cámara de tipo entero
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEIntFeature.GigEFeatureAccess">
            <summary>
            Clase cognex para el acceso a los parámetros de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEIntFeature.TimeOut">
            <summary>
            TimeOut de envio o recepción
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEIntFeature.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEIntFeature.Inicializar(Cognex.VisionPro.ICogGigEAccess)">
            <summary>
            Inicialización del objeto
            </summary>
            <param name="gigEFeatureAccess"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEIntFeature.Send">
            <summary>
            Aplica el parámetro a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEIntFeature.Receive">
            <summary>
            Consulta el valor del parámetro a la cámara
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OGigEDoubleFeature">
            <summary>
            Acceso a una característica de la cámara de tipo entero
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEDoubleFeature.GigEFeatureAccess">
            <summary>
            Clase cognex para el acceso a los parámetros de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEDoubleFeature.TimeOut">
            <summary>
            TimeOut de envio o recepción
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEDoubleFeature.#ctor(System.String,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEDoubleFeature.Inicializar(Cognex.VisionPro.ICogGigEAccess)">
            <summary>
            Inicialización del objeto
            </summary>
            <param name="gigEFeatureAccess"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEDoubleFeature.Send">
            <summary>
            Aplica el valor de memoria a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEDoubleFeature.Receive">
            <summary>
            Consulta el valor de la cámara y lo guarda en memoria
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OGigEBoolFeature">
            <summary>
            Acceso a una característica de la cámara de tipo entero
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEBoolFeature.GigEFeatureAccess">
            <summary>
            Clase cognex para el acceso a los parámetros de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OGigEBoolFeature.TimeOut">
            <summary>
            TimeOut de envio o recepción
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEBoolFeature.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEBoolFeature.Inicializar(Cognex.VisionPro.ICogGigEAccess)">
            <summary>
            Inicialización del objeto
            </summary>
            <param name="gigEFeatureAccess"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEBoolFeature.Send">
            <summary>
            Aplica el valor de memoria a la cámara
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OGigEBoolFeature.Receive">
            <summary>
            Consulta el valor de la cámara y lo guarda en memoria
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OTerminalIOBaslerVproBit">
            <summary>
            Terminal de tipo bit que simboliza un bit de un puerto
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.FeatureLineSelector">
            <summary>
            Selector del termial
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.FeatureLineSource">
            <summary>
            Tipo de terminal
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.FeatureLineStatusAll">
            <summary>
            Estado de los terminales (activados o desactivados)
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.FeatureUserOutputSelector">
            <summary>
            Selector de salida de usuario
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.FeatureUserOutputValue">
            <summary>
            Valor de salida
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.#ctor(Orbita.VA.Hardware.OCamaraBaslerVPro,System.String,System.String)">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.Inicializar(Orbita.VA.Hardware.OGigEEnumFeature,Orbita.VA.Hardware.OGigEEnumFeature,Orbita.VA.Hardware.OGigEIntFeature,Orbita.VA.Hardware.OGigEEnumFeature,Orbita.VA.Hardware.OGigEEnumFeature)">
            <summary>
            Método a heredar donde se inicializan los terminales
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.LeerEntrada">
            <summary>
            Lectura de la entrada física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.EscribirSalida(System.String,System.Object)">
            <summary>
            Escritura de la salida física
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.ComprobarValor(System.Object,System.Boolean@)">
            <summary>
            Se comprueba que el valor a escribir sea del tipo correcto
            </summary>
            <param name="valor">Valor a escribir</param>
            <param name="byteValor">Valor a escribir del tipo correcto</param>
            <returns>Devuelve verdadero si el valor a escribir es válido</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OTerminalIOBaslerVproBit.Valor">
            <summary>
            Valor del terminal
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.ModoAdquisicion">
            <summary>
            Enumerado de los modos de adquisición posibles
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModoAdquisicion.Continuo">
            <summary>
            Modo de adquisición continua de multiples imágenes
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModoAdquisicion.DisparoSoftware">
            <summary>
            Modo de adquisición de una única imagen mediante un comando software
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.ModoAdquisicion.DisparoHardware">
            <summary>
            Modo de adquisición de una única imagen mediante una entrada digital
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.CameraEventHandler">
            <summary>
            NewFrame delegate
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.CameraEventArgs">
            <summary>
            Camera event arguments
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CameraEventArgs.bmp">
            <summary>
            Bitmap
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CameraEventArgs.#ctor(System.Drawing.Bitmap)">
            <summary>
            // Constructor de la clase
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.CameraEventArgs.Bitmap">
            <summary>
            Bitmap property
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.CameraErrorEventHandler">
            <summary>
            Error delegate
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.CameraErrorEventArgs">
            <summary>
            Camera event arguments
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.CameraErrorEventArgs._Exception">
            <summary>
            Bitmap
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.CameraErrorEventArgs.#ctor(System.Exception)">
            <summary>
            // Constructor de la clase
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.CameraErrorEventArgs.Exception">
            <summary>
            Bitmap property
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OCamaraManager">
            <summary>
            Clase estática para el acceso a las cámaras
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OCamaraManager.ListaCamaras">
            <summary>
            Lista de las cámaras del sistema
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Constructor">
            <summary>
            Construye los campos de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Destructor">
            <summary>
            Destruye los campos de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Inicializar">
            <summary>
            Inicializa las propieades de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Finalizar">
            <summary>
            Finaliza las propiedades de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.GetCamara(System.String)">
            <summary>
            Busca la cámara con el código indicado
            </summary>
            <param name="codigo">Código de la cámara</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Start(System.String)">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Stop(System.String)">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.StartAll">
            <summary>
            Comienza una reproducción de todas las cámaras
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.StopAll">
            <summary>
            Termina la reproducción de todas las cámaras
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.Snap(System.String)">
            <summary>
            Realiza una fotografía de forma sincrona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.IniciarModoSimulacionFotografia(System.String,System.String)">
            <summary>
            Establece la cámara en modo simulación de una fotografía
            </summary>
            <param name="rutaFotografias">Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.IniciarModoSimulacionFotografia(System.String,System.String,System.String,System.Int32)">
            <summary>
            Establece la cámara en modo simulación de una carpeta de fotografías
            </summary>
            <param name="rutaFotografias">Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.PararModoSimulacion(System.String)">
            <summary>
            Para el modo simulación de la cámara, restableciendo su funcionamiento normal
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.CrearSuscripcionNuevaFotografia(System.String,Orbita.VA.Hardware.DelegadoNuevaFotografiaCamara)">
            <summary>
            Suscribe el cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.CrearSuscripcionNuevaFotografia(System.String,Orbita.VA.Hardware.DelegadoNuevaFotografiaCamaraAdv)">
            <summary>
            Suscribe el cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.EliminarSuscripcionNuevaFotografia(System.String,Orbita.VA.Hardware.DelegadoNuevaFotografiaCamara)">
            <summary>
            Elimina la suscripción del cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.EliminarSuscripcionNuevaFotografia(System.String,Orbita.VA.Hardware.DelegadoNuevaFotografiaCamaraAdv)">
            <summary>
            Elimina la suscripción del cambio de fotografía de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de fotografía</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.CrearSuscripcionCambioEstado(System.String,Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamara)">
            <summary>
            Suscribe el cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.CrearSuscripcionCambioEstado(System.String,Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamaraAdv)">
            <summary>
            Suscribe el cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.EliminarSuscripcionCambioEstado(System.String,Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamara)">
            <summary>
            Elimina la suscripción del cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.EliminarSuscripcionCambioEstado(System.String,Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamaraAdv)">
            <summary>
            Elimina la suscripción del cambio de estado de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir llamadas a cada cambio de estado</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.CrearSuscripcionMensajes(System.String,Orbita.VA.Comun.OMessageDelegate)">
            <summary>
            Suscribe la recepción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.CrearSuscripcionMensajes(System.String,Orbita.VA.Comun.OMessageDelegateAdv)">
            <summary>
            Suscribe la recepción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.EliminarSuscripcionMensajes(System.String,Orbita.VA.Comun.OMessageDelegate)">
            <summary>
            Elimina la suscripción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OCamaraManager.EliminarSuscripcionMensajes(System.String,Orbita.VA.Comun.OMessageDelegateAdv)">
            <summary>
            Elimina la suscripción de mensajes de una determinada cámara
            </summary>
            <param name="codigo">Código de la cámara</param>
            <param name="delegadoNuevaFotografiaCamara">Delegado donde recibir los mensajes</param>
        </member>
        <member name="T:Orbita.VA.Hardware.TipoCamara">
            <summary>
            Enumerado que identifica a los tipos de cámaras
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoCamara.Axis">
            <summary>
            Cámara tipo Axis  con firmware 4
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoCamara.VProBasler">
            <summary>
            Cámara tipo Pilot de Basler. Mediante driver de Vision Pro
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.TipoColorPixel">
            <summary>
            Tipo de la cámara (mono o RGB)
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoColorPixel.Monocromatica">
            <summary>
            Cámara monocromática
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoColorPixel.RGB">
            <summary>
            Cámara a color RGB
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OSimulacionCamara">
            <summary>
            Clase que guarda las propiedades de la simulación de una cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara.ListaRutaFotografias">
            <summary>
            Listado de las fotografías situadas en el directorio
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara.IndiceFotografia">
            <summary>
            Indica la fotografía actual en la lista de fotografías
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara.TimerSimulacionGrab">
            <summary>
            Timer que se utiliza para realizar la simulación de la grabación
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._Simulacion">
            <summary>
            Indica si la cámara está en modo simulación
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._TipoSimulacion">
            <summary>
            Indica el tipo de simulación que se realizará en la cámara (con una única foto o con toda una carpeta de fotos)
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._RutaFotografias">
            <summary>
            Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._IntervaloEntreSnaps">
            <summary>
            Intervalo de tiempo entre snaps de grabación
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._Filtro">
            <summary>
            Filtro de las imagenes a simular
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OSimulacionCamara._OnSnapSimulado">
            <summary>
            Evento de simluación de la grabación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.ConfigurarModoSimulacion">
            <summary>
            Verifica que el modo simulación es correcto
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.ConfigurarModoSimulacionFotografia(System.String)">
            <summary>
            Establece la cámara en modo simulación
            </summary>
            <param name="rutaFotografias">Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.ConfigurarModoSimulacionDirectorio(System.String,System.String,System.Int32)">
            <summary>
            Establece la cámara en modo simulación
            </summary>
            <param name="rutaFotografias">Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular</param>
            <param name="filtro">Cadena de filtrado de las fotografías situadas en la caperta establecida</param>
            <param name="cadenciaSimulacionEnGrabacionMs">Intervalo en milisegundos utilizado para simular la grabación. Se realiza una fotografía según el tiempo indicado.</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.ConfigurarModoReal">
            <summary>
            Para el modo simulación de la cámara, restableciendo su funcionamiento normal
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.IniciarSimulacionGrabacion">
            <summary>
            Inicia la simulación de la grabación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.ParaSimulacionGrabacion">
            <summary>
            Inicia la simulación de la grabación
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.EventoGrabSimulado(System.Object,System.EventArgs)">
            <summary>
            Evento del timer de simulación de fotografía
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:Orbita.VA.Hardware.OSimulacionCamara.EjecutarSimulacion">
            <summary>
            Ejecuta la simulación de un snap
            </summary>
            <returns>Verdadero si la simulación se ha ejecutado con éxito</returns>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.Codigo">
            <summary>
            Código identificador de la cámara
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.Simulacion">
            <summary>
            Indica si la cámara está en modo simulación
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.TipoSimulacion">
            <summary>
            Indica el tipo de simulación que se realizará en la cámara (con una única foto o con toda una carpeta de fotos)
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.RutaFotografias">
            <summary>
            Indica la ruta de la fotografía o de la carpeta de fotografías donde están las imágenes a simular
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.IntervaloEntreSnaps">
            <summary>
            Intervalo de tiempo entre snaps de grabación
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.Filtro">
            <summary>
            Filtro de las imagenes a simular
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.OSimulacionCamara.OnSnapSimulado">
            <summary>
            Evento de simluación de la grabación
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.TipoSimulacionCamara">
            <summary>
            Enumerado que informa sobre el tipo de simulación que se está realizando en la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoSimulacionCamara.FotografiaSimple">
            <summary>
            Se simula siempre con la misma fotografía
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoSimulacionCamara.DirectorioFotografias">
            <summary>
            Se simula con todo un directorio de fotografías
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.ODelegadoSnapSimulado">
            <summary>
            Delegado que se dispara cuando se simula un snap
            </summary>
            <param name="rutaFotografia">Ruta de la fotografía de disco</param>
            <returns>Devuelve verdadero si la simulación se ha ejecutado correctamente</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OCameraConectionException">
            <summary>
            Excepción que se lanza al detectar un problema de conexión con las cámaras
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OCameraConectionException.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.EstadoConexion">
            <summary>
            Estado de la conexión de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.Desconectado">
            <summary>
            Cámara desconectada
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.Desconectando">
            <summary>
            Cámara en proceso de desconexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.Conectado">
            <summary>
            Cámara conectada correctamente
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.Conectando">
            <summary>
            Cámara en proceso de conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.ErrorConexion">
            <summary>
            La cámara estaba conectada pero ha aparecido un error de conexión
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.Reconectando">
            <summary>
            La cámara tiene un error de conexión y está intentando reconectarse
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.EstadoConexion.Reconectado">
            <summary>
            La cámara ha logrado reconectarse
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.DelegadoNuevaFotografiaCamara">
            <summary>
            Delegado de nueva fotografía
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.DelegadoNuevaFotografiaCamaraAdv">
            <summary>
            Delegado de nueva fotografía
            </summary>
            <param name="codigo"></param>
            <param name="estadoConexion"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamara">
            <summary>
            Delegado de cambio de estaco de conexión de la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.DelegadoCambioEstadoConexionCamaraAdv">
            <summary>
            Delegado de cambio de estaco de conexión de la cámara
            </summary>
            <param name="codigo"></param>
            <param name="estadoConexion"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.DelegadoCambioEstadoReproduccionCamara">
            <summary>
            Delegado de cambio de estaco de reproducción de la cámara
            </summary>
            <param name="estadoConexion"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.DelegadoCambioEstadoReproduccionCamaraAdv">
            <summary>
            Delegado de cambio de estaco de reproducción de la cámara
            </summary>
            <param name="codigo"></param>
            <param name="estadoConexion"></param>
        </member>
        <member name="T:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion">
            <summary>
            Se utiliza para medir la tasa de adquisición de la cámara
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.NumeroValoresPromediados">
            <summary>
            Constante que indica el número de valores utilizados en el promedio de las medidas
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.UltimaDuracion">
            <summary>
            Duración de la última adquisición. En el caso de ser la primera es 0.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.UltimaTasa">
            <summary>
            Capturas por sergundo tomada de la última adquisición. En el caso de ser la primera es 0.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.PromedioDuracion">
            <summary>
            Promedio de duración de las últimas "NumeroValoresPromediados". En el caso de ser la primera es 0.
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.PromedioTasa">
            <summary>
            Capturas por sergundo tomada de las últimas "NumeroValoresPromediados". En el caso de ser la primera es 0.
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.ResetearMediciones">
            <summary>
            Se resetean las mediciones
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OMedidorVelocidadAdquisicion.NuevaCaptura">
            <summary>
            Se ha capturado una nueva foto, por lo que se recalcula la tasa de adquisición
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.OHardwareManager">
            <summary>
            Clase estática para el acceso al hardware
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OHardwareManager.ListaHardware">
            <summary>
            Lista de las cámaras del sistema
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OHardwareManager.Vistas">
            <summary>
            Lista de todas las vistas de hardware del sistema
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.Constructor">
            <summary>
            Construye los campos de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.Destructor">
            <summary>
            Destruye los campos de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.Inicializar">
            <summary>
            Inicializa las propieades de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.Finalizar">
            <summary>
            Finaliza las propiedades de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.GetHardware(System.String)">
            <summary>
            Busca la cámara con el código indicado
            </summary>
            <param name="codigo">Código de la cámara</param>
            <returns>Hardware encontrado</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.GetHardware(System.String,System.String)">
            <summary>
            Busca la cámara con el código indicado
            </summary>
            <param name="vista">Vista utilizada</param>
            <param name="codigo">Código de la cámara</param>
            <returns>Hardware encontrado</returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.Start(System.String)">
            <summary>
            Comienza una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.Stop(System.String)">
            <summary>
            Termina una reproducción continua de la cámara
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.StartAll">
            <summary>
            Comienza una reproducción de todas las cámaras
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.StopAll">
            <summary>
            Termina la reproducción de todas las cámaras
            </summary>
            <returns></returns>
        </member>
        <member name="M:Orbita.VA.Hardware.OHardwareManager.TryGetHardware(System.String,System.String,Orbita.VA.Hardware.IHardware@)">
            <summary>
            Método para acceder a un hardware
            </summary>
            <param name="codVista">Vista</param>
            <param name="codAlias">Código o alias del hardware</param>
            <param name="hardware">Hardware devuelto</param>
            <returns>Devuelve la variable correspondientes</returns>
        </member>
        <member name="T:Orbita.VA.Hardware.OVistaHardware">
            <summary>
            Clase que implementa las vistas del hardware
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVistaHardware.Codigo">
            <summary>
            Código de la vista
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.OVistaHardware.ListaAlias">
            <summary>
            Lista de todos los alias de la vista
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.OVistaHardware.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="codVista">Código de la vista</param>
        </member>
        <member name="M:Orbita.VA.Hardware.OVistaHardware.RellenarAlias(System.String)">
            <summary>
            Rellena la lista de alias de la vista
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.TipoHardware">
            <summary>
            Tipo de hardware dispoinble
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoHardware.HwCamara">
            <summary>
            Cámara: Dispositivo de adquisición de imágenes
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.TipoHardware.HwModuloIO">
            <summary>
            Dispoisitivo de entradas / salidas
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.JPEGSource">
            <summary>
            JPEGSource - JPEG downloader
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource.bufSize">
            <summary>
            Tamaño del buffer
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource.readSize">
            <summary>
            Tamaño de la lectura
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource.thread">
            <summary>
            Thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource.stopEvent">
            <summary>
            Evento de stop del thread de captura de datos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource.Source">
            <summary>
            Cadena de conexión con el origen del video
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._Login">
            <summary>
            Usuario
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._Password">
            <summary>
            Constraseña
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._UserData">
            <summary>
            Datos del usuario
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._FramesReceived">
            <summary>
            Frames
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._BytesReceived">
            <summary>
            Bytes recibidos
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._SeparateConnectionGroup">
            <summary>
            Uso de grupo de conexión separada
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._PreventCaching">
            <summary>
            Prevenir caché
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._FrameInterval">
            <summary>
            frame interval in miliseconds
            </summary>
        </member>
        <member name="F:Orbita.VA.Hardware.JPEGSource._ReadTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.Start">
            <summary>
            Start work
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.SignalToStop">
            <summary>
            Signal thread to stop work
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.WaitForStop">
            <summary>
            Wait for thread stop
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.Stop">
            <summary>
            Abort thread
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.WorkerThread">
            <summary>
            Thread entry point
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.Free">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="M:Orbita.VA.Hardware.JPEGSource.LanzarError(System.Exception)">
            <summary>
            Lanza el evetno de error
            </summary>
            <param name="exception"></param>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.VideoSource">
            <summary>
            VideoSource property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.Login">
            <summary>
            Login property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.Password">
            <summary>
            Password property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.UserData">
            <summary>
            UserData property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.FramesReceived">
            <summary>
            FramesReceived property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.BytesReceived">
            <summary>
            BytesReceived property
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.SeparateConnectionGroup">
            <summary>
            SeparateConnectioGroup property indicates to open WebRequest in separate connection group
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.PreventCaching">
            <summary>
            PreventCaching property
            If the property is set to true, we are trying to prevent caching
            appneding fake parameter to URL. It's needed is client is behind
            proxy server.
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.FrameInterval">
            <summary>
            FrameInterval property - interval between frames
            If the property is set 100, than the source will produce 10 frames
            per second if it possible
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.ReadTimeOutMs">
            <summary>
            Timeout en milisegundos de la lectura
            </summary>
        </member>
        <member name="P:Orbita.VA.Hardware.JPEGSource.Running">
            <summary>
            Get state of the video source thread
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.JPEGSource.NewFrame">
            <summary>
            Evento de nuevo frame
            </summary>
        </member>
        <member name="E:Orbita.VA.Hardware.JPEGSource.OnCameraError">
            <summary>
            Error de adquisición
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.FilterCollection">
            <summary>
            Summary description for FilterCollection.
            </summary>
        </member>
        <member name="T:Orbita.VA.Hardware.DSTools">
            <summary>
            Tools class
            </summary>
        </member>
    </members>
</doc>
